Gadgets information
============================================================
0x000000000043d53f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d5a9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004af2f8 : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add al, ah ; retf 0xfff7
0x000000000048d0bd : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004af2b0 : adc al, 0 ; add byte ptr [rax], al ; mov eax, 0x1800003b ; ret
0x000000000047deaa : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000427458 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042d985 : adc al, 0x13 ; jmp rdx
0x0000000000425c45 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048cdda : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e8a1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000444910 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x0000000000495e44 : adc al, 0x69 ; sti ; call rax
0x0000000000471d88 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043e9d0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d0fe : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042d981 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d250 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000424847 : adc al, 0xa ; jmp r10
0x0000000000425db3 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000446e8f : adc al, 0xe ; cmp rdi, rdx ; jb 0x446ea2 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042a22a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042befa : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x0000000000403f3f : adc al, 0xf ; retf 0xfa83
0x00000000004128bb : adc al, 0xf6 ; ret 0x7420
0x000000000048d15d : adc al, 0xf7 ; ret
0x0000000000493e31 : adc al, 0xf9 ; jmp qword ptr [rax]
0x0000000000494da9 : adc al, 0xfa ; call qword ptr [rax]
0x0000000000494415 : adc al, 0xfa ; call rax
0x00000000004b2e71 : adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004ab651 : adc al, 0xfe ; jmp rsp
0x0000000000424466 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000043d6e7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d751 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428e08 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040100a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004247aa : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000493e29 : adc bh, cl ; jmp qword ptr [rax - 0x1f0006ed]
0x00000000004ab299 : adc bh, dh ; call rsp
0x0000000000494de1 : adc bh, dl ; call qword ptr [rax + 0x10fffa13]
0x0000000000494425 : adc bh, dl ; call qword ptr [rax]
0x0000000000494621 : adc bh, dl ; jmp qword ptr [rax]
0x00000000004944e5 : adc bh, dl ; jmp rdx
0x0000000000494314 : adc bl, bl ; stc ; push rax ; fdiv st(1), st(0) ; call rax
0x0000000000440dd5 : adc bl, ch ; call 0xffffffffc414972a
0x0000000000440cf5 : adc bl, ch ; call 0xffffffffc43c964a
0x0000000000482ce2 : adc bl, ch ; jno 0x482d38 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000444246 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004442b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444217 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444245 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f17a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000419145 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000048374e : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045bf89 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000483f63 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045b1a5 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045b986 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000481c3f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000411542 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041872f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047c27f : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041156d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042b136 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000044406a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x0000000000483f5d : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041e9b3 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041acec : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b068 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004239a6 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000481c40 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412fbe : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000411543 : adc byte ptr [rax + 1], cl ; ret
0x0000000000410947 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000048a0ba : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044aea7 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000400e3e : adc byte ptr [rax - 0x39], cl ; ret 0
0x00000000004759f5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004157a3 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x0000000000488c5f : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000409529 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x406038
0x000000000041c94d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044bfa5 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x00000000004588a8 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000470a17 : adc byte ptr [rax - 0x77], cl ; jo 0x470a35 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004709d7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000004709db : adc byte ptr [rax - 0x77], cl ; ret
0x000000000042215f : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041dd21 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x0000000000418730 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000470e40 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000416f0f : adc byte ptr [rax - 0x78], al ; jl 0x416f31 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000411393 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000440fb7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000440ff3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401010 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004197e3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455588 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044aaa9 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000494e70 : adc byte ptr [rax - 6], bl ; jmp qword ptr [rax]
0x000000000047fa09 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x47fa61 ; mov esi, ebx ; syscall
0x000000000043d192 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042a28a : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000043eca8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043ef9c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d8f1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000449a03 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000044816c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004278d8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043b1a8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000494df0 : adc byte ptr [rax], bl ; cli ; call qword ptr [rax + 0x10fffa19]
0x000000000049466c : adc byte ptr [rax], cl ; cli ; call qword ptr [rax + 0x10fffa07]
0x0000000000494d9c : adc byte ptr [rax], dl ; cli ; call qword ptr [rax + 0x10fffa11]
0x000000000048e088 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048aee8 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000045bf39 : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000413bf4 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004107b3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000419146 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3917 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044bfb3 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044bfb2 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000418312 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000470f0e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406ff0 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x0000000000494df8 : adc byte ptr [rbx], bl ; cli ; call qword ptr [rax + 0x10fffa1c]
0x0000000000494da4 : adc byte ptr [rbx], dl ; cli ; call qword ptr [rax + 0x10fffa14]
0x000000000041156e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000412070 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x0000000000472013 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000493f6c : adc byte ptr [rcx - 0x71c90007], dl ; stc ; jmp rdx
0x000000000044af12 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048aaef : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048a91e : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044a931 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000419097 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000482b34 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045bf21 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042a2bd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000048259a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000448ac9 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004af00c : adc byte ptr [rcx], bh ; add byte ptr [rax], al ; and byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x0000000000485200 : adc byte ptr [rcx], bh ; retf 0x557f
0x0000000000494db4 : adc byte ptr [rcx], bl ; cli ; call qword ptr [rax + 0x10fffa1a]
0x0000000000418315 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000494664 : adc byte ptr [rcx], cl ; cli ; call qword ptr [rax + 0x10fffa08]
0x0000000000411eb7 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000494674 : adc byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x10fffa06]
0x0000000000494dc4 : adc byte ptr [rdi], bl ; cli ; call qword ptr [rax + 0x10fffa20]
0x0000000000494dd8 : adc byte ptr [rdi], cl ; cli ; call qword ptr [rax + 0x10fffa10]
0x0000000000403f2f : adc byte ptr [rdi], cl ; retf 0xd289
0x000000000048374f : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045bf8a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000444b23 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042a6a1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a791 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a5b1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042aff9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042ab51 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a2e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042ad31 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a4c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042af11 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ae21 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a763 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a853 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a673 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a583 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3a3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a493 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a2b3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045b1a6 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045b987 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000449e99 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000483e11 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x000000000048314d : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004acfc3 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042de79 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000494dbc : adc byte ptr [rdx + rdi*8], bl ; call qword ptr [rax + 0x10fffa1d]
0x0000000000494424 : adc byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x000000000042cdbb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000049465c : adc byte ptr [rdx], cl ; cli ; call qword ptr [rax + 0x10fffa09]
0x0000000000494de0 : adc byte ptr [rdx], dl ; cli ; call qword ptr [rax + 0x10fffa13]
0x0000000000494de8 : adc byte ptr [rip + 0x1690fffa], dl ; cli ; call qword ptr [rax]
0x0000000000494d94 : adc byte ptr [rip + 0xe90fffa], cl ; cli ; call qword ptr [rax]
0x0000000000446abf : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042cc6a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042c265 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c665 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c639
0x000000000042c6e3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c6b7
0x000000000042cb75 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42cb49
0x000000000042cbf3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42cbc7
0x000000000042c660 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c63e
0x000000000042c6de : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c6bc
0x000000000042cb70 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cb4e
0x000000000042cbee : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cbcc
0x0000000000424995 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438ebb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000494e00 : adc byte ptr [rsi], bl ; cli ; call qword ptr [rax + 0x10fffa1f]
0x0000000000494dac : adc byte ptr [rsi], dl ; cli ; call qword ptr [rax + 0x10fffa17]
0x000000000042438a : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000494330 : adc cl, bl ; stc ; call rax
0x00000000004157a6 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045d46f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044c56a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000440ce5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000045d472 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000485e3a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045c245 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x00000000004ab635 : adc dh, bh ; dec esi ; adc dh, bh ; jmp rcx
0x00000000004ab609 : adc dh, bh ; jmp qword ptr [rcx]
0x00000000004ab639 : adc dh, bh ; jmp rcx
0x000000000041c39e : adc dh, dh ; ret 0xf0f
0x0000000000494400 : adc dl, 0xf9 ; call rax
0x0000000000494d9d : adc dl, bh ; call qword ptr [rax + 0x10fffa11]
0x0000000000494ddd : adc dl, bh ; call qword ptr [rax]
0x00000000004944f5 : adc dl, bh ; jmp qword ptr [rdx]
0x0000000000494439 : adc dl, bh ; jmp rax
0x0000000000494290 : adc dl, bl ; stc ; call rax
0x0000000000494f68 : adc dl, dh ; cli ; jmp qword ptr [rax]
0x000000000046ff8b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045ab4d : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000041155f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000048ab3f : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040513f : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000004715a4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043ef9b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043d887 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee9f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000427758 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045b1b5 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x00000000004470e8 : adc dword ptr [rbx], eax ; ret
0x0000000000447061 : adc dword ptr [rbx], esp ; ret
0x00000000004387e7 : adc dword ptr [rcx + 7], edi ; ret
0x000000000044705c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004897a6 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000438482 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438446 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046f38e : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x46f364
0x00000000004470e3 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446e43 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000446fc5 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000446fca : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000446fa2 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446fa7 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000438949 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000446e40 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000451132 : adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000446c3c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000479d9e : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000446d6f : adc dword ptr [rsi + 3], edx ; ret
0x0000000000446e0c : adc dword ptr [rsi + 7], edx ; ret
0x0000000000446c0e : adc dword ptr [rsi - 1], edx ; ret
0x000000000048ad66 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043d886 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000424464 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000494de9 : adc eax, 0x1690fffa ; cli ; call qword ptr [rax]
0x00000000004237b0 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x0000000000424640 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x00000000004243d5 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000423749 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045ab29 : adc eax, 0x25ff8a ; je 0x45ab40 ; ret
0x000000000044d387 : adc eax, 0x26b72c ; pop rbx ; ret
0x0000000000423780 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x0000000000419034 : adc eax, 0x2a07f7 ; ret
0x00000000004a7bc4 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000047432b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047bb52 : adc eax, 0x4000003 ; ret
0x000000000047baa2 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x000000000042388a : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x000000000043d411 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000469605 : adc eax, 0x83fffffd ; ret
0x0000000000478c51 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000428b28 : adc eax, 0x894d0000 ; retf
0x0000000000416f13 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x00000000004747fa : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000424704 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x00000000004245c4 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x0000000000447c94 : adc eax, 0xf880272 ; ret
0x0000000000473c65 : adc eax, 0xfffd41d6 ; cmove rax, rdx ; ret
0x000000000043ecfe : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004275d8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042374b : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004842c9 : adc eax, eax ; ret
0x000000000048ca2d : adc eax, edi ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000484406 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a7865 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000412be7 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004759fc : adc ebx, esi ; ret
0x000000000041712a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040ea61 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000457874 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000468df6 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x000000000047f01e : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f0bb : adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000493e2d : adc edi, ecx ; jmp rax
0x0000000000494da5 : adc edi, edx ; call qword ptr [rax + 0x10fffa14]
0x000000000049461d : adc edi, edx ; call qword ptr [rax + 0x20fffa12]
0x0000000000494de5 : adc edi, edx ; call qword ptr [rax]
0x000000000049445d : adc edi, edx ; call rsi
0x0000000000494459 : adc edi, edx ; inc dword ptr [rsi + 0x13] ; cli ; call rsi
0x0000000000494da1 : adc edx, edi ; call qword ptr [rax]
0x00000000004944f1 : adc edx, edi ; call qword ptr [rdx + 0x22fffa10]
0x000000000049446d : adc edx, edi ; call qword ptr [rsi]
0x000000000049462d : adc edx, edi ; call rax
0x0000000000494629 : adc edx, edi ; inc dword ptr [rax + 0x11] ; cli ; call rax
0x00000000004945ad : adc edx, edi ; jmp rsp
0x00000000004a8d7e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004164f3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048defc : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004128b9 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x0000000000410450 : adc esi, esi ; ret 0x7520
0x00000000004387e6 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000438481 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000438445 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000438948 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000446d6e : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000446e0b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000446c0d : adc qword ptr [rsi - 1], rdx ; ret
0x000000000049445c : adc r15d, edx ; call rsi
0x0000000000484405 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004b0bfb : add ah, ah ; add edi, edx ; jmp qword ptr [rdx]
0x00000000004b007b : add ah, al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004b0dbf : add ah, al ; push rsi ; add byte ptr [rax], al ; cmp al, 0x17 ; cli ; call rcx
0x00000000004480be : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000044819b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448109 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b0bf7 : add ah, bh ; push rsp ; add byte ptr [rax], al ; in al, 3 ; cli ; jmp qword ptr [rdx]
0x00000000004b12d7 : add ah, bl ; pop rbx ; add byte ptr [rax], al ; add al, 0x74 ; cli ; call qword ptr [rdx]
0x0000000000494254 : add ah, bl ; stc ; jmp rax
0x00000000004a8da7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x0000000000446d6a : add ah, byte ptr [rdx - 0xf] ; jl 0x446dbf ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b2822 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x0000000000494fc0 : add ah, dh ; cli ; jmp qword ptr [rax]
0x000000000040dcdf : add ah, dh ; jmp 0x40dce6
0x0000000000400a69 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004ae03b : add ah, dh ; sal esi, cl ; call qword ptr [rax]
0x00000000004b3eef : add ah, dh ; xchg dword ptr [rax], eax ; add byte ptr [rbx + rcx*8], cl ; cld ; call rdx
0x00000000004b4ebb : add ah, dl ; std ; jmp rsp
0x00000000004531b3 : add al, 0 ; add bh, dh ; ret 0
0x00000000004531a7 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000456eaf : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004110e0 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000048c10d : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042ac17 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046f2a6 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000043fbbf : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ac45 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e020 : add al, 0 ; add byte ptr [rax], al ; jne 0x48e047 ; ret
0x0000000000474883 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000044955f : add al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004284d8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004725a0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a001 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac04 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409ec0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004243b5 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x00000000004010ce : add al, 0 ; lea rdi, [rsp + 0x60] ; call 0x40dae9
0x000000000044c012 : add al, 0 ; mov eax, 0x15 ; syscall
0x00000000004557cb : add al, 0 ; mov edx, 0x180 ; call 0x401ad9
0x00000000004557f2 : add al, 0 ; mov edx, 0x22f ; call 0x401ad9
0x00000000004491e1 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000448065 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000004759fb : add al, 0x11 ; ret
0x0000000000448154 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000425c41 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000425bda : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000486c30 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048ac67 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048a96b : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489b64 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045ab8a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048421b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484267 ; leave ; ret
0x000000000040e967 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000419c88 : add al, 0x2a ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004733ce : add al, 0x31 ; ret
0x00000000004732ca : add al, 0x37 ; ret
0x00000000004179af : add al, 0x3a ; ret
0x00000000004a6e86 : add al, 0x3d ; retf
0x000000000047f8f6 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f8aa ; xor eax, eax ; ret
0x000000000044477b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000443c89 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000443c9b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000048d170 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000043538a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004424c9 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004736a4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047e686 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e634 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000473f68 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x00000000004564ea : add al, 0x4d ; cmp ebp, ebx ; jb 0x456560 ; mov rdx, rax ; jmp 0x4564b7
0x0000000000443c97 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000004424d7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000457872 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000453b39 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000004b12dc : add al, 0x74 ; cli ; call qword ptr [rdx]
0x000000000047d6fa : add al, 0x75 ; retf
0x000000000046ea88 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043d0fb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043e9d3 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401f27 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000448698 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448688 ; ret
0x000000000043ad07 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044d459 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048c00a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000466bc9 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000474359 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048c90b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046e91c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048afb9 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046f0b8 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000443c86 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000004424c6 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048ad93 : add al, 0x88 ; add rax, r8 ; jmp rax
0x0000000000457f56 : add al, 0x89 ; retf
0x0000000000487fa9 : add al, 0x89 ; retf 0xeac0
0x000000000044869b : add al, 0x8a ; je 0x448685 ; ret
0x0000000000448123 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c543 : add al, 0x99 ; add rax, r9 ; jmp rax
0x00000000004491e5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c09f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047c9c7 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000417037 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000448069 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046bc9d : add al, 0xc6 ; jmp rax
0x0000000000460e62 : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x00000000004614ba : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460e18 : add al, 0xc7 ; jmp rax
0x000000000046bcd8 : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x000000000048435d : add al, 0xde ; lea r9, [rdx] ; jmp 0x4843b9
0x000000000048817d : add al, 0xde ; lea r9, [rdx] ; jmp 0x4881d9
0x0000000000459161 : add al, 0xe8 ; test rax, rax ; je 0x459171 ; call rax
0x0000000000454e40 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004658fd : add al, 0xe9 ; retf 0xfffb
0x000000000045687c : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000484c28 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a226 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000040498a : add al, 0xf ; retf
0x0000000000446b7b : add al, 0xf ; sub rax, rsi ; ret
0x00000000004356f3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044985b : add al, 0xf3 ; ret
0x00000000004608ce : add al, 0xf8 ; jmp rax
0x0000000000494845 : add al, 0xfa ; call qword ptr [rax]
0x0000000000494689 : add al, 0xfa ; jmp rax
0x0000000000494889 : add al, 0xfa ; push qword ptr [rax + 3] ; cli ; call qword ptr [rax]
0x000000000040ef87 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d4c7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004633e8 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463411 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x00000000004400ed : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046bc99 : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000440308 : add al, 7 ; ret
0x0000000000425daf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b2aef : add al, ah ; cld ; sti ; jmp qword ptr [rbx]
0x0000000000493e0f : add al, ah ; or bh, cl ; jmp qword ptr [rax]
0x00000000004af2ff : add al, ah ; retf 0xfff7
0x00000000004b3edb : add al, ah ; xchg dword ptr [rax], eax ; add al, dh ; retf 0xfffc
0x00000000004af4bb : add al, al ; cmp eax, 0xd9c00000 ; clc ; call qword ptr [rax]
0x00000000004af4bf : add al, al ; fprem ; call qword ptr [rax]
0x00000000004affff : add al, al ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000049f087 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004481b5 : add al, bh ; jg 0x4481b7 ; int1 ; mov eax, eax ; ret
0x00000000004adfa7 : add al, bh ; retf
0x00000000004ac0a7 : add al, bh ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004b2ad3 : add al, bl ; jae 0x4b2adf ; add al, cl ; cld ; sti ; jmp qword ptr [rbx]
0x000000000040d722 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000440ce1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000004547a3 : add al, byte ptr [rax] ; add al, ch ; and eax, 0x89fffad3 ; retf 0xe283
0x000000000040100b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045557a : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x00000000004551ad : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047af00 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041decd : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000045f753 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042b122 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000048805e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045ac1d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000400ff5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000468a94 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000423363 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047c27a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004783b5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046fe7d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004476a4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042166a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045494b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042adf7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e791 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ae25 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d723 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045ab12 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047db76 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044a639 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000040dbac : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000474614 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004856ec : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487bea : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000428658 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446124 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000410b46 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000485964 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046ca74 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044a840 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000041ad36 : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000424363 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000042374c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047d755 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x000000000048584d : add al, byte ptr [rax] ; mov edx, 0xcc ; call 0x401ad9
0x000000000048ad62 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c09b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047c9c3 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484daa : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d39a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d38e
0x000000000044af15 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044bd6e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004abf3d : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000424731 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x000000000042451d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x00000000004affe3 : add al, ch ; add byte ptr [rax], al ; test al, 0xa5 ; stc ; jmp qword ptr [rcx]
0x00000000004547a5 : add al, ch ; and eax, 0x89fffad3 ; retf 0xe283
0x000000000041ec0b : add al, ch ; call rax
0x000000000040fa71 : add al, ch ; cdq ; ret 3
0x00000000004af4e3 : add al, ch ; cmp eax, 0xf5480000 ; clc ; call qword ptr [rax]
0x0000000000454d86 : add al, ch ; int 0xfa
0x0000000000412f5f : add al, ch ; jmp 0x412f62
0x00000000004b30e3 : add al, ch ; jns 0x4b30ef ; add byte ptr [rax], cl ; and al, 0xfc ; jmp qword ptr [rcx]
0x000000000046a51d : add al, ch ; lea esp, [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004524e9 : add al, ch ; loope 0x4524ea ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004866c0 : add al, ch ; or dh, byte ptr [rdi + rsi*8 + 0xd8d48ff] ; ret
0x0000000000454ebd : add al, ch ; or eax, 0x89fffacc ; retf 0xe283
0x000000000040359d : add al, ch ; pop rbp ; retf 0xffbf
0x000000000045576f : add al, ch ; pop rbx ; ret
0x000000000046faab : add al, ch ; pop rdi ; ret 0xfffd
0x00000000004491ae : add al, ch ; pop rsp ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000463a57 : add al, ch ; push rbx ; retf
0x000000000041f677 : add al, ch ; ret
0x0000000000421148 : add al, ch ; ret 0x2ab
0x000000000041e348 : add al, ch ; ret 0x2d9
0x000000000047af38 : add al, ch ; ret 0xb850
0x0000000000475b08 : add al, ch ; ret 0xf992
0x0000000000485cd8 : add al, ch ; ret 0xffc7
0x00000000004014af : add al, ch ; retf
0x0000000000478bd0 : add al, ch ; retf 0x98
0x0000000000487400 : add al, ch ; retf 0xf7a6
0x0000000000487190 : add al, ch ; retf 0xf98e
0x0000000000478db0 : add al, ch ; retf 0xffdc
0x00000000004557d1 : add al, ch ; stc ; ret 0xfffa
0x0000000000454f38 : add al, ch ; xchg eax, edx ; retf
0x00000000004b2ad7 : add al, cl ; cld ; sti ; jmp qword ptr [rbx]
0x00000000004b0a3f : add al, dh ; cli ; std ; jmp qword ptr [rdx]
0x0000000000495e3f : add al, dh ; imul edi, ebx, -1 ; adc al, 0x69 ; sti ; call rax
0x00000000004b2aeb : add al, dh ; jae 0x4b2af7 ; add al, ah ; cld ; sti ; jmp qword ptr [rbx]
0x00000000004b2ccf : add al, dh ; or edi, esp ; jmp qword ptr [rax]
0x00000000004b3edf : add al, dh ; retf 0xfffc
0x00000000004b2e6f : add al, dl ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004affcb : add al, dl ; add byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004b2ccb : add al, dl ; jne 0x4b2cd7 ; add al, dh ; or edi, esp ; jmp qword ptr [rax]
0x00000000004b3e2e : add bh, ah ; ret
0x000000000044e7ef : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045eaa7 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea5f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040100d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048582f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000484499 : add bh, byte ptr [rax + 1] ; ret
0x00000000004845f6 : add bh, byte ptr [rax + 2] ; ret
0x000000000044957b : add bh, byte ptr [rax - 1] ; ret
0x00000000004949e8 : add bh, byte ptr [rax] ; cli ; call qword ptr [rdx + 0x22fffa37]
0x00000000004464f2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004b0837 : add bh, ch ; cld ; hlt ; jmp qword ptr [rbx]
0x00000000004ab1b1 : add bh, dh ; jmp rsp
0x0000000000400dda : add bh, dh ; ret 0
0x00000000004531a9 : add bh, dh ; ret 0xf800
0x000000000040f09f : add bh, dh ; ret 0xffef
0x0000000000474611 : add bl, al ; mov eax, 2 ; ret
0x000000000048807a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000463619 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x4635b2 ; ret
0x0000000000489f8b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000485af9 : add bl, ch ; ret
0x000000000040f338 : add bl, ch ; ret 0x1f0f
0x0000000000494fa0 : add bl, dh ; cli ; jmp qword ptr [rax]
0x000000000048ad63 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a6f : add bl, dh ; ret
0x00000000004631bc : add bl, dl ; stc ; dec dword ptr [rax + 0x29] ; ret
0x000000000041b02e : add bl, sil ; ret
0x000000000044a883 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x00000000004553a3 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045538e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000004553b8 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000482755 : add byte ptr [r8 + 0x39], r9b ; retf
0x0000000000481580 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000472846 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455355 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e15a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004af8b5 : add byte ptr [r8], al ; pop rax ; test cl, bh ; call qword ptr [rbx]
0x00000000004af829 : add byte ptr [r8], al ; xor al, 0x83 ; stc ; call qword ptr [rdx]
0x00000000004b06b5 : add byte ptr [r8], r8b ; mov dl, bl ; stc ; jmp qword ptr [rax]
0x000000000047575b : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004b15ab : add byte ptr [rax + 0x1000005e], dh ; nop ; cli ; call qword ptr [rdx]
0x000000000044c013 : add byte ptr [rax + 0x15], bh ; syscall
0x000000000042345f : add byte ptr [rax + 0x16], bh ; ret
0x00000000004af2b3 : add byte ptr [rax + 0x1800003b], bh ; ret
0x00000000004494cf : add byte ptr [rax + 0x18], bh ; syscall
0x00000000004494ce : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044a5bf : add byte ptr [rax + 0x1c], bh ; syscall
0x000000000048f86e : add byte ptr [rax + 0x211d8b48], dl ; retf
0x00000000004ada5b : add byte ptr [rax + 0x23], ah ; add byte ptr [rax], al ; push rax ; mov bl, 0xf6 ; call qword ptr [rsi]
0x000000000048851f : add byte ptr [rax + 0x26], bh ; syscall
0x00000000004ae3b3 : add byte ptr [rax + 0x2800002c], bh ; push rsi ; jmp rsi
0x0000000000482b6e : add byte ptr [rax + 0x29], cl ; call 0x781264c4
0x0000000000412160 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000452931 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000453497 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000465dd8 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000476cb8 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047a88a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000422094 : add byte ptr [rax + 0x29], cl ; retf
0x000000000045557c : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000465189 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e830 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004af88b : add byte ptr [rax + 0x30000041], dl ; test cl, bh ; call qword ptr [rdx]
0x00000000004235e0 : add byte ptr [rax + 0x31], dl ; shr al, 0xa7 ; ret
0x000000000040ea3f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048af63 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a03f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000041313f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048aff8 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047af02 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041cf00 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x000000000047825e : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000482756 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042dd66 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000043465f : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041decf : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000041087d : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000446c98 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042d886 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000447fa3 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000447de0 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004858c8 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004b56ab : add byte ptr [rax + 0x4000009f], dh ; test ebp, edi ; call qword ptr [rbx]
0x0000000000449a06 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004b0e53 : add byte ptr [rax + 0x57], bl ; add byte ptr [rax], al ; mov byte ptr [rax], ah ; cli ; call qword ptr [rdi]
0x00000000004af8b3 : add byte ptr [rax + 0x58000041], bh ; test cl, bh ; call qword ptr [rbx]
0x00000000004b163b : add byte ptr [rax + 0x5f], al ; add byte ptr [rax], al ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b1663 : add byte ptr [rax + 0x5f], ch ; add byte ptr [rax], al ; pop rax ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004ac18b : add byte ptr [rax + 0x6000000a], dl ; sub al, 0xf6 ; jmp qword ptr [rax]
0x00000000004afe9b : add byte ptr [rax + 0x60000047], ah ; popfq ; stc ; call qword ptr [rbx]
0x00000000004b1953 : add byte ptr [rax + 0x62], bl ; add byte ptr [rax], al ; test al, 0xb0 ; cli ; call qword ptr [rax]
0x000000000040d24d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046ea85 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401f24 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046f0b5 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000004491e2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000448066 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000004596b7 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048ca33 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000468785 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000471baf : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000046f583 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045dbd1 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000047551f : add byte ptr [rax + 0x66], bh ; syscall
0x000000000047553f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000047552f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047554f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004897a3 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000440cdf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004b2e6b : add byte ptr [rax + 0x77], dh ; add byte ptr [rax], al ; rcl byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x000000000044471f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044a58f : add byte ptr [rax + 0xa], bh ; syscall
0x00000000004ac163 : add byte ptr [rax + 0xa], ch ; add byte ptr [rax], al ; pop rax ; sub al, 0xf6 ; call qword ptr [rax]
0x000000000044a55f : add byte ptr [rax + 0xb], bh ; syscall
0x000000000047b529 : add byte ptr [rax + 0xca], bh ; syscall
0x0000000000449244 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dbaf : add byte ptr [rax + 0xe], bh ; syscall
0x0000000000424689 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x0000000000448137 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000004154bf : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473235 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044fbcf : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041ccb4 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b096 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x00000000004237d4 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000412e6a : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041dd63 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b0e5 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000004480aa : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000042374d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042444d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453fc8 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048445c : add byte ptr [rax + 1], bh ; ret
0x000000000044991f : add byte ptr [rax + 1], bh ; syscall
0x000000000042b124 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004110e2 : add byte ptr [rax + 1], cl ; ret
0x0000000000483668 : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000488060 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000043471d : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044cb90 : add byte ptr [rax + 1], cl ; retf 0x8548
0x0000000000402e50 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000450a55 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484665 : add byte ptr [rax + 2], bh ; ret
0x0000000000449bcf : add byte ptr [rax + 3], bh ; syscall
0x00000000004b2c87 : add byte ptr [rax + 5], bl ; cld ; jmp rdx
0x000000000044994f : add byte ptr [rax + 8], bh ; syscall
0x000000000044994e : add byte ptr [rax + 8], dil ; syscall
0x0000000000481581 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000476140 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049e02b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004af7af : add byte ptr [rax + rax*2 + 0x7a5c0000], dh ; stc ; call rsp
0x0000000000450423 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x000000000047259f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004243b4 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x00000000004af2fc : add byte ptr [rax + rax], bh ; add al, ah ; retf 0xfff7
0x000000000041dc0b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473c47 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000045ab2d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045ac1f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000049f1d7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000046f0f7 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047b954 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x00000000004b446f : add byte ptr [rax - 0x16], al ; cld ; jmp qword ptr [rcx]
0x000000000041d11f : add byte ptr [rax - 0x17], dl ; ret
0x0000000000400ff7 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040fce3 : add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000046517b : add byte ptr [rax - 0x39], cl ; ret 0xb2c8
0x000000000045d45f : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dbd7 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000423365 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000468105 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000047486f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047484f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004748af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047485f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047489f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045ad1f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000458879 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000458850 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000004581b0 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482655 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004b03e7 : add byte ptr [rax - 0x46], cl ; stc ; call qword ptr [rdx]
0x00000000004b03cf : add byte ptr [rax - 0x46], dl ; stc ; call qword ptr [rax]
0x0000000000493d4f : add byte ptr [rax - 0x4700070c], ah ; hlt ; clc ; call rax
0x00000000004b032f : add byte ptr [rax - 0x47], dh ; stc ; jmp qword ptr [rcx]
0x000000000046155f : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004abb83 : add byte ptr [rax - 0x57fffffc], cl ; xchg eax, esp ; cmc ; call qword ptr [rdx]
0x00000000004afe9f : add byte ptr [rax - 0x63], ah ; stc ; call qword ptr [rbx]
0x00000000004b4e83 : add byte ptr [rax - 0x67ffff69], cl ; std ; jmp qword ptr [rcx]
0x00000000004b163f : add byte ptr [rax - 0x6b], al ; cli ; call qword ptr [rcx]
0x00000000004b1667 : add byte ptr [rax - 0x6b], bl ; cli ; call qword ptr [rcx]
0x000000000045514a : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x00000000004572cd : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044d34f : add byte ptr [rax - 0x73], cl ; add eax, 0x26cfa9 ; ret
0x00000000004572eb : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457309 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000477f06 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004828d7 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000041c39a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041e9af : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ace8 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048177b : add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x000000000046b77b : add byte ptr [rax - 0x73], cl ; xor eax, 0x24b69d ; jmp rax
0x000000000047c27c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004197df : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485e37 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048a968 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000004614b7 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460e15 : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x00000000004608cb : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004579cf : add byte ptr [rax - 0x75], cl ; add eax, 0x2644a1 ; ret
0x000000000044f46f : add byte ptr [rax - 0x75], cl ; add eax, 0x26d4b1 ; ret
0x000000000041860f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a0b09 ; ret
0x000000000040defb : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044e8af : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042283f : add byte ptr [rax - 0x75], cl ; je 0x422871 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045b5bb : add byte ptr [rax - 0x75], cl ; jl 0x45b5ec ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040e992 : add byte ptr [rax - 0x75], cl ; js 0x40e9bc ; call rdx
0x0000000000471e9f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486b80 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000401df3 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x0000000000400ebd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042f2af : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004829d2 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000041227f : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000470e3d : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004848f6 : add byte ptr [rax - 0x77], cl ; add eax, 0x23776a ; ret
0x00000000004196aa : add byte ptr [rax - 0x77], cl ; add eax, 0x2a01ae ; ret
0x00000000004191a5 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0643 ; ret
0x000000000041917d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0663 ; ret
0x000000000041915d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a067b ; ret
0x0000000000412902 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410403 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455356 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004781f0 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; in al, dx ; or al, ch ; retf
0x0000000000454d40 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x0000000000471ff4 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000048b40e : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x0000000000412d2c : add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x00000000004181fb : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004017a1 : add byte ptr [rax - 0x77], cl ; jbe 0x4017bb ; syscall
0x000000000044bfbf : add byte ptr [rax - 0x77], cl ; jo 0x44bfe9 ; ret
0x000000000047fa0b : add byte ptr [rax - 0x77], cl ; jrcxz 0x47fa5f ; mov esi, ebx ; syscall
0x0000000000412a53 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000044fd4c : add byte ptr [rax - 0x77], cl ; mov r8b, 0xe8 ; retf 0xffad
0x00000000004234bf : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040382f : add byte ptr [rax - 0x77], cl ; ret
0x00000000004493db : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041dbb7 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004111b6 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000041308a : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e7dc : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000449487 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402d9e : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000045fc88 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041ae6c : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402b1f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000410198 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004491b3 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048df2f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004563b8 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403133 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046a2c7 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f36d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004147e8 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004493f2 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000448ef7 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043d194 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042a28c : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045e3eb : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000410be7 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000455957 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000042a1ca : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456109 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d016 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043eb8c : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000446f00 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481b71 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048cb4f : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b603 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004100cf : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045d098 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x45d068
0x000000000048aa46 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x00000000004b56af : add byte ptr [rax - 0x7b], al ; std ; call qword ptr [rbx]
0x000000000047369f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004718fb : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000046d26d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004633c9 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000048c10f : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x00000000004af8b7 : add byte ptr [rax - 0x7c], bl ; stc ; call qword ptr [rbx]
0x00000000004af867 : add byte ptr [rax - 0x7d], bl ; stc ; call qword ptr [rax]
0x000000000048ec8e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047e1c7 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12dd7
0x000000000047e1c6 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12dd8
0x000000000041fb6c : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041cfa7 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cc04 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047f8ad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042370d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401a59 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004111fa : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000004619c3 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a771 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000416a3f : add byte ptr [rax - 0x7d], cl ; jg 0x416a85 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041eff2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004718b6 : add byte ptr [rax - 0x7d], cl ; js 0x4718f4 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000405f3f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000004465ef : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044c367 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046f0c7 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f1bf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456014 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004858af : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047db7a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045dbb4 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042a2b9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e647 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048df0f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046f2a8 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424110 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d273 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a2e7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047de37 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000419c8a : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000422199 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040d725 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041cda0 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040d785 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000425cef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004737df : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041044a : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000489512 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000041f670 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000041e341 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x000000000045ab14 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000432f1b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004adfa3 : add byte ptr [rax - 0x7ffffd8], ch ; retf
0x00000000004ac0a3 : add byte ptr [rax - 0x7fffff7], ch ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004af4e7 : add byte ptr [rax - 0xb], cl ; clc ; call qword ptr [rax]
0x0000000000411c1a : add byte ptr [rax - 1], bh ; ret
0x000000000041ec08 : add byte ptr [rax], 0 ; add al, ch ; call rax
0x000000000040fa6e : add byte ptr [rax], 0 ; add al, ch ; cdq ; ret 3
0x000000000046faa8 : add byte ptr [rax], 0 ; add al, ch ; pop rdi ; ret 0xfffd
0x000000000041f674 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000421145 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2ab
0x000000000041e345 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x0000000000478dad : add byte ptr [rax], 0 ; add al, ch ; retf 0xffdc
0x000000000041598a : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000447ddd : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000043471a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000412d29 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x00000000004147e5 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004356fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004480eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000418423 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042bf7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044984b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042c4e1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af00a : add byte ptr [rax], al ; adc byte ptr [rcx], bh ; add byte ptr [rax], al ; and byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x00000000004b12da : add byte ptr [rax], al ; add al, 0x74 ; cli ; call qword ptr [rdx]
0x0000000000493e0d : add byte ptr [rax], al ; add al, ah ; or bh, cl ; jmp qword ptr [rax]
0x00000000004b3ed9 : add byte ptr [rax], al ; add al, ah ; xchg dword ptr [rax], eax ; add al, dh ; retf 0xfffc
0x000000000041ec09 : add byte ptr [rax], al ; add al, ch ; call rax
0x000000000040fa6f : add byte ptr [rax], al ; add al, ch ; cdq ; ret 3
0x000000000046faa9 : add byte ptr [rax], al ; add al, ch ; pop rdi ; ret 0xfffd
0x000000000041f675 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000421146 : add byte ptr [rax], al ; add al, ch ; ret 0x2ab
0x000000000041e346 : add byte ptr [rax], al ; add al, ch ; ret 0x2d9
0x0000000000475b06 : add byte ptr [rax], al ; add al, ch ; ret 0xf992
0x0000000000485cd6 : add byte ptr [rax], al ; add al, ch ; ret 0xffc7
0x00000000004014ad : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000478bce : add byte ptr [rax], al ; add al, ch ; retf 0x98
0x00000000004873fe : add byte ptr [rax], al ; add al, ch ; retf 0xf7a6
0x0000000000478dae : add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x000000000045eaee : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea5d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048582d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047460f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000485af7 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f336 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000041598b : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004af2b1 : add byte ptr [rax], al ; add byte ptr [rax + 0x1800003b], bh ; ret
0x000000000048851d : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x0000000000468ae8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000465dd6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000476cb6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047a888 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000465187 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e82e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000041f1df : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048af61 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a03d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000041313d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048aff6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042dd64 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000437151 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041087b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000447dde : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000449a04 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000046b204 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000471bad : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000047553d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000047552d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047554d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x000000000044471d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044a55d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044bd4f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000449242 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dbad : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x0000000000448135 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041ccb2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000485072 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000452fb2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041dd61 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000004480a8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000047432d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000453fc6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048445a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000044991d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000482f99 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000483666 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000043471b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000450a53 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484663 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000004af2fa : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add al, ah ; retf 0xfff7
0x000000000046f0f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000044a3b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040fce1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000045d45d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044981d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000458877 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045884e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000004581ae : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482653 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004572cb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x00000000004572e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457307 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000481779 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x00000000004197dd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040e990 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40e9be ; call rdx
0x0000000000401df1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000041863d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000454d3e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x0000000000471ff2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000048b40c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x0000000000412d2a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000040179f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4017bd ; syscall
0x000000000044bfbd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44bfeb ; ret
0x00000000004234bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000410111 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004111b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004600e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041b83d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048df2d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046a565 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f36b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004147e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044b3b2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045e3e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042a1c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456107 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d014 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043eb8a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000048cb4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048aa44 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000046d26b : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000405f3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004465ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004858ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047db78 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042afd3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048df0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000472b5e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043e931 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042affd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000425ced : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000489510 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000434714 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004adfa1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ffffd8], ch ; retf
0x0000000000411c18 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000493e0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; or bh, cl ; jmp qword ptr [rax]
0x0000000000414a7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000040ea5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048582b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004185fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041313b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000471bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000045d45b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044981b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041863b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044bfbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44bfed ; ret
0x000000000041b83b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048df2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048cb4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000405f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004465eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048df0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000493e0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x493e25 ; stc ; jmp qword ptr [rax]
0x0000000000417226 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049feb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a03a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f562 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000049fef2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a03e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f55a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000418f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044682b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000042603b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042494b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000045994b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000412bbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000419d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042266b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a4fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047482c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000481a1f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ea5c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419cac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048582c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a1edc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a108c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004480a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004af2f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add al, ah ; retf 0xfff7
0x000000000048d114 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d0fc ; ret
0x0000000000485af6 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485ac4
0x000000000045ff1d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000444d4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000444d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000444d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000444d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000444d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000444ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000444cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000444cec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000444cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000444d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000444d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000444d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000444d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000444cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000400ba6 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000493e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x493e23 ; stc ; jmp qword ptr [rax]
0x000000000044471c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000004440fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000048851c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000047553c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047552c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047554c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044a55c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000004185bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000484459 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044991c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484662 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000448f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x00000000004356fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044bfbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000481a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041862c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041863c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000480ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000412bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004480ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043584c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000418f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041177c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000417228 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0eac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1644 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049feb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a03a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f564 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a0ee4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1684 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000049fef4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a03e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f55c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042b82c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000041753c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044984c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000047368c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000444afc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000480e0c : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x0000000000449534 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000484fad : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e021 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004758ab : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481db2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481cf2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x00000000004578f5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000481f13 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000048421e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a64d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449764 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000475779 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000449af4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044a463 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488308 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045ac6c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000484eca : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d156 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000041ef79 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000044bbf8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042af88 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457b29 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000434fdd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000414192 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417144 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fc89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d115 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000045c4dc : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2d], cl ; retf 0x25fa
0x000000000046cefd : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x0000000000465f0a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000046039b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004114a4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000460a0f : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c7c8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004694d6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d749 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044682d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e0e3 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000491ffd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473a6d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000049175d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423dfd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044b298 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b2a7 ; call r12
0x000000000044b2c8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b2d7 ; call r12
0x0000000000458599 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045f301 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047ce : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479c82 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041cdd5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042603d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042494d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042ba00 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042ba26 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000004b3eb6 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; push rsp ; retf 0xfffc
0x00000000004afffa : add byte ptr [rax], al ; add byte ptr [rcx], cl ; add al, al ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000044a513 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ec72 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b30a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048ce83 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048ceab : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048dbfa : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x000000000045994d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000463343 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040db84 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000480fb4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000448035 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000004357dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043584d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000454299 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x00000000004480ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000412bbd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042b34d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000458899 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000004655a1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x00000000004767e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d085 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004851e0 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c4e2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419d3d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042b272 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000413d85 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045ed28 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000454bc6 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000004232d4 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048aa8e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000400ba7 : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000469fe6 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e830 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004b3fbe : add byte ptr [rax], al ; add dh, cl ; cld ; jmp qword ptr [rsi]
0x000000000045101c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000042266d : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a4fd : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000445f81 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000047482e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042b123 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000411842 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d0c0 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004847ec : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048ab83 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004160bb : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449659 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000000004499ec : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000000004014ec : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044b18e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000481a21 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004af00e : add byte ptr [rax], al ; and byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x0000000000448136 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042b34e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000440970 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000473234 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004abfe2 : add byte ptr [rax], al ; call 0x384abffa
0x00000000004557d0 : add byte ptr [rax], al ; call 0x401ad4
0x0000000000412f5e : add byte ptr [rax], al ; call 0x412858
0x000000000040fa70 : add byte ptr [rax], al ; call 0x44bd14
0x000000000040fad6 : add byte ptr [rax], al ; call 0x44bd44
0x00000000004b03e2 : add byte ptr [rax], al ; call 0x484b043e
0x00000000004b2ce2 : add byte ptr [rax], al ; call 0xfffffffff84b2d67
0x000000000040100c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040ea5e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048ce89 : add byte ptr [rax], al ; call r14
0x000000000040e96b : add byte ptr [rax], al ; call rax
0x000000000048582e : add byte ptr [rax], al ; call rbx
0x00000000004a1ede : add byte ptr [rax], al ; call rdi
0x000000000040e8a5 : add byte ptr [rax], al ; call rdx
0x00000000004a108e : add byte ptr [rax], al ; call rsp
0x00000000004481b4 : add byte ptr [rax], al ; clc ; jg 0x4481b8 ; int1 ; mov eax, eax ; ret
0x00000000004adfa6 : add byte ptr [rax], al ; clc ; retf
0x00000000004ac0a6 : add byte ptr [rax], al ; clc ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004b0bf6 : add byte ptr [rax], al ; cld ; push rsp ; add byte ptr [rax], al ; in al, 3 ; cli ; jmp qword ptr [rdx]
0x00000000004af4e6 : add byte ptr [rax], al ; cmc ; clc ; call qword ptr [rax]
0x00000000004480e1 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000004480a9 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000042438c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000423783 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004af2fb : add byte ptr [rax], al ; cmp al, 0 ; add al, ah ; retf 0xfff7
0x00000000004b0dc2 : add byte ptr [rax], al ; cmp al, 0x17 ; cli ; call rcx
0x00000000004ae036 : add byte ptr [rax], al ; cmp al, 0x29 ; add byte ptr [rax], al ; hlt ; sal esi, cl ; call qword ptr [rax]
0x00000000004b5a32 : add byte ptr [rax], al ; cmp byte ptr [rbx - 0x65d80000], ah ; std ; call qword ptr [rdx]
0x00000000004b0832 : add byte ptr [rax], al ; cmp byte ptr [rcx], dl ; add bh, ch ; cld ; hlt ; jmp qword ptr [rbx]
0x000000000047f8ac : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000041f5f7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x41f5c8 ; ret
0x00000000004b1816 : add byte ptr [rax], al ; cwde ; cmc ; std ; call rdx
0x00000000004af492 : add byte ptr [rax], al ; cwde ; cmp eax, 0xb8980000 ; clc ; call qword ptr [rax]
0x00000000004afccf : add byte ptr [rax], al ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b4e86 : add byte ptr [rax], al ; cwde ; std ; jmp qword ptr [rcx]
0x00000000004af906 : add byte ptr [rax], al ; cwde ; test ecx, edi ; call qword ptr [rbx]
0x000000000049e03a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004a208e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049f1e6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x000000000049e9e6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000049ede6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004a228e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004a248e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004a268e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004a288e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004a2a8e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004a2c8e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004a2e8e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004a308e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004a328e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004b12d6 : add byte ptr [rax], al ; fcomp qword ptr [rbx] ; add byte ptr [rsp + rsi*2], al ; cli ; call qword ptr [rdx]
0x00000000004b2ad2 : add byte ptr [rax], al ; fdiv dword ptr [rbx] ; add al, cl ; cld ; sti ; jmp qword ptr [rbx]
0x000000000040dcde : add byte ptr [rax], al ; hlt ; jmp 0x40dce7
0x0000000000400a68 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004ae03a : add byte ptr [rax], al ; hlt ; sal esi, cl ; call qword ptr [rax]
0x00000000004b3eee : add byte ptr [rax], al ; hlt ; xchg dword ptr [rax], eax ; add byte ptr [rbx + rcx*8], cl ; cld ; call rdx
0x00000000004b0bfa : add byte ptr [rax], al ; in al, 3 ; cli ; jmp qword ptr [rdx]
0x000000000048dbfb : add byte ptr [rax], al ; ja 0x48dc08 ; sbb eax, eax ; ret
0x0000000000412856 : add byte ptr [rax], al ; je 0x412861 ; ret
0x00000000004243f0 : add byte ptr [rax], al ; je 0x4243bf ; ret
0x0000000000473c49 : add byte ptr [rax], al ; je 0x473c55 ; ret
0x000000000048d086 : add byte ptr [rax], al ; je 0x48d074 ; add rsp, 0x18 ; ret
0x000000000048d116 : add byte ptr [rax], al ; je 0x48d0fa ; ret
0x000000000048d157 : add byte ptr [rax], al ; je 0x48d168 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004ac176 : add byte ptr [rax], al ; jl 0x4ac18d ; add byte ptr [rax], al ; push rsp ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004af482 : add byte ptr [rax], al ; jl 0x4af421 ; clc ; jmp qword ptr [rsi]
0x0000000000485053 : add byte ptr [rax], al ; jmp 0x401b24
0x000000000040f337 : add byte ptr [rax], al ; jmp 0x40f300
0x0000000000449371 : add byte ptr [rax], al ; jmp 0x449203
0x000000000044f461 : add byte ptr [rax], al ; jmp 0x44f166
0x000000000045cfff : add byte ptr [rax], al ; jmp 0x45cfc8
0x0000000000485af8 : add byte ptr [rax], al ; jmp 0x485ac2
0x000000000044a63b : add byte ptr [rax], al ; jmp rax
0x0000000000419f1e : add byte ptr [rax], al ; jne 0x419f31 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042bfe2 : add byte ptr [rax], al ; jne 0x42bef8 ; ret
0x000000000044877d : add byte ptr [rax], al ; jne 0x4487ad ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449535 : add byte ptr [rax], al ; jne 0x449551 ; add rsp, 0x28 ; ret
0x0000000000449765 : add byte ptr [rax], al ; jne 0x4497b3 ; add rsp, 0x58 ; ret
0x0000000000449af5 : add byte ptr [rax], al ; jne 0x449b4b ; add rsp, 0x68 ; ret
0x000000000044a464 : add byte ptr [rax], al ; jne 0x44a47f ; add rsp, 0x28 ; ret
0x000000000045ac6d : add byte ptr [rax], al ; jne 0x45ac7e ; add rsp, 0x18 ; ret
0x000000000047577a : add byte ptr [rax], al ; jne 0x4757cb ; add rsp, 0x58 ; ret
0x00000000004758ac : add byte ptr [rax], al ; jne 0x4758d3 ; add rsp, 0x38 ; ret
0x0000000000481bf8 : add byte ptr [rax], al ; jne 0x481c0b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481cf3 : add byte ptr [rax], al ; jne 0x481d2b ; add rsp, 0x38 ; ret
0x0000000000481db3 : add byte ptr [rax], al ; jne 0x481de6 ; add rsp, 0x68 ; ret
0x0000000000481f14 : add byte ptr [rax], al ; jne 0x481f56 ; add rsp, 0x78 ; ret
0x00000000004821e3 : add byte ptr [rax], al ; jne 0x482216 ; add rsp, 0x68 ; ret
0x000000000048421f : add byte ptr [rax], al ; jne 0x484263 ; leave ; ret
0x0000000000484ecb : add byte ptr [rax], al ; jne 0x484edc ; add rsp, 0x38 ; ret
0x0000000000484fae : add byte ptr [rax], al ; jne 0x484fcc ; add rsp, 0x38 ; ret
0x0000000000487779 : add byte ptr [rax], al ; jne 0x487784 ; pop rbx ; ret
0x0000000000488309 : add byte ptr [rax], al ; jne 0x488324 ; add rsp, 0x38 ; ret
0x000000000048e022 : add byte ptr [rax], al ; jne 0x48e045 ; ret
0x00000000004b032e : add byte ptr [rax], al ; jo 0x4b02f0 ; stc ; jmp qword ptr [rcx]
0x00000000004b2e6a : add byte ptr [rax], al ; jo 0x4b2eee ; add byte ptr [rax], al ; rcl byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x0000000000444d4e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000444d5e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000444d6e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000444d7e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000444d8e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000444cad : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000444cce : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000444cde : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000444cee : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000444cfe : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000444d0e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000444d1e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000444c5a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x0000000000444d2e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000444d3e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000444cbe : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044d34e : add byte ptr [rax], al ; lea rax, [rip + 0x26cfa9] ; ret
0x000000000046b77a : add byte ptr [rax], al ; lea rsi, [rip + 0x24b69d] ; jmp rax
0x0000000000400ba8 : add byte ptr [rax], al ; leave ; ret
0x0000000000493e0e : add byte ptr [rax], al ; loopne 0x493e21 ; stc ; jmp qword ptr [rax]
0x00000000004b2aee : add byte ptr [rax], al ; loopne 0x4b2af3 ; sti ; jmp qword ptr [rbx]
0x00000000004af7ae : add byte ptr [rax], al ; mov ah, 0x40 ; add byte ptr [rax], al ; pop rsp ; jp 0x4af7b9 ; call rsp
0x00000000004abb9a : add byte ptr [rax], al ; mov ah, 0x94 ; cmc ; call rsp
0x00000000004b56aa : add byte ptr [rax], al ; mov al, 0x9f ; add byte ptr [rax], al ; test ebp, edi ; call qword ptr [rbx]
0x0000000000443c2e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000044247e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004b0e56 : add byte ptr [rax], al ; mov byte ptr [rax], ah ; cli ; call qword ptr [rdi]
0x00000000004b2c82 : add byte ptr [rax], al ; mov byte ptr [rbp], dh ; add byte ptr [rax + 5], bl ; cld ; jmp rdx
0x00000000004b4e82 : add byte ptr [rax], al ; mov byte ptr [rdi + 0x36980000], dl ; std ; jmp qword ptr [rcx]
0x00000000004128fe : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000044471e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000004440fe : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004b06b6 : add byte ptr [rax], al ; mov dl, bl ; stc ; jmp qword ptr [rax]
0x000000000047199b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004191bc : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a0648], eax ; ret
0x000000000044410e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400ba3 : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x00000000004236de : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000004af2b2 : add byte ptr [rax], al ; mov eax, 0x1800003b ; ret
0x000000000044a5be : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x000000000048851e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000004ae3b2 : add byte ptr [rax], al ; mov eax, 0x2800002c ; push rsi ; jmp rsi
0x0000000000449a05 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004af8b2 : add byte ptr [rax], al ; mov eax, 0x58000041 ; test cl, bh ; call qword ptr [rbx]
0x000000000047551e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000047553e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047552e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047554e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044a58e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044a55e : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000044bd50 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000040dbae : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000449243 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000411c19 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048445b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044991e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484664 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000004182de : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f49e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f4b9 ; ret
0x000000000048f6ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f6e9 ; ret
0x000000000040db79 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047e60f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004687c2 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000465f61 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044413e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048ce84 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048ceac : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000448f9e : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000434fde : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004356fe : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044be06 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004b4eb6 : add byte ptr [rax], al ; mov esp, 0xd4000097 ; std ; jmp rsp
0x000000000044bfbe : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484e48 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481b70 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488382 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488456 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b5d4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d1ae : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000484478 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000041917c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a0663], rax ; ret
0x000000000041915c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a067b], rax ; ret
0x00000000004017a0 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041786e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045ad1e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000047484e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047485e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047486e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047487e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000047488e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000047489e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004748ae : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047cba3 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041176e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000481a2e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c3be : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471e9e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041862e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d12e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d1be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d21e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d20e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d1ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004579ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2644a1] ; ret
0x000000000044f47e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26d4b1] ; ret
0x000000000041860e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a0b09] ; ret
0x000000000048aefe : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000473a6e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000413ce4 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d328 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000410402 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041863e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041dc0e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047fa0a : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000446eff : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b299 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040e991 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000491ffe : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000049175e : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000046eeff : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043553e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004563b7 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x456374
0x0000000000420256 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048db9e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004234be : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004b196a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xfa ; call qword ptr [rdx]
0x0000000000480ece : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048afb5 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f0b4 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045a35d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000459e5e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000412bbe : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004480ee : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043516e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043584e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004357de : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000048528c : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044bc9c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x0000000000474dbc : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x00000000004affce : add byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000044bed9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004b3ef2 : add byte ptr [rax], al ; or al, 0xcb ; cld ; call rdx
0x00000000004b30e6 : add byte ptr [rax], al ; or byte ptr [rsp + rdi*8], ah ; jmp qword ptr [rcx]
0x00000000004b0836 : add byte ptr [rax], al ; out dx, eax ; cld ; hlt ; jmp qword ptr [rbx]
0x00000000004b0e52 : add byte ptr [rax], al ; pop rax ; push rdi ; add byte ptr [rax], al ; mov byte ptr [rax], ah ; cli ; call qword ptr [rdi]
0x00000000004ac166 : add byte ptr [rax], al ; pop rax ; sub al, 0xf6 ; call qword ptr [rax]
0x00000000004af8b6 : add byte ptr [rax], al ; pop rax ; test cl, bh ; call qword ptr [rbx]
0x00000000004b1666 : add byte ptr [rax], al ; pop rax ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x000000000044a64e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400aa6 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000465f0b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000457b2a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000414193 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417145 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc8a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d76 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b163a : add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004af7b2 : add byte ptr [rax], al ; pop rsp ; jp 0x4af7b5 ; call rsp
0x00000000004af7b1 : add byte ptr [rax], al ; pop rsp ; jp 0x4af7b6 ; call rsp
0x00000000004b1356 : add byte ptr [rax], al ; pop rsp ; pop rsp ; add byte ptr [rax], al ; xor al, 0x74 ; cli ; jmp rax
0x00000000004ac162 : add byte ptr [rax], al ; push 0x5800000a ; sub al, 0xf6 ; call qword ptr [rax]
0x00000000004b1662 : add byte ptr [rax], al ; push 0x5800005f ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004ada5e : add byte ptr [rax], al ; push rax ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004b164e : add byte ptr [rax], al ; push rsp ; pop rdi ; add byte ptr [rax], al ; xchg rax, rbp ; cli ; call qword ptr [rcx]
0x00000000004b3eba : add byte ptr [rax], al ; push rsp ; retf 0xfffc
0x00000000004ac17a : add byte ptr [rax], al ; push rsp ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004b2e6e : add byte ptr [rax], al ; rcl byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x00000000004af4be : add byte ptr [rax], al ; rcr cl, 0xf8 ; call qword ptr [rax]
0x0000000000400a6e : add byte ptr [rax], al ; ret
0x0000000000498266 : add byte ptr [rax], al ; ret 0
0x000000000049f1de : add byte ptr [rax], al ; ret 0x10
0x00000000004a0eae : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1646 : add byte ptr [rax], al ; ret 0x1d5
0x000000000049feb6 : add byte ptr [rax], al ; ret 0x24
0x00000000004a03a6 : add byte ptr [rax], al ; ret 0x33
0x000000000049e9de : add byte ptr [rax], al ; ret 0xa
0x000000000049edde : add byte ptr [rax], al ; ret 0xd
0x00000000004a2282 : add byte ptr [rax], al ; ret 1
0x00000000004a2482 : add byte ptr [rax], al ; ret 2
0x00000000004a2682 : add byte ptr [rax], al ; ret 3
0x00000000004a2882 : add byte ptr [rax], al ; ret 4
0x00000000004a2a82 : add byte ptr [rax], al ; ret 5
0x000000000049e586 : add byte ptr [rax], al ; ret 6
0x00000000004a2e82 : add byte ptr [rax], al ; ret 7
0x00000000004a3082 : add byte ptr [rax], al ; ret 8
0x00000000004a3282 : add byte ptr [rax], al ; ret 9
0x000000000049828a : add byte ptr [rax], al ; retf
0x0000000000498286 : add byte ptr [rax], al ; retf 0
0x000000000049f33e : add byte ptr [rax], al ; retf 0x11
0x00000000004a0ee6 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1686 : add byte ptr [rax], al ; retf 0x1d5
0x000000000049fef6 : add byte ptr [rax], al ; retf 0x24
0x00000000004a03e6 : add byte ptr [rax], al ; retf 0x33
0x000000000049eb3e : add byte ptr [rax], al ; retf 0xb
0x000000000049ef3e : add byte ptr [rax], al ; retf 0xe
0x000000000049f55e : add byte ptr [rax], al ; retf 1
0x00000000004a2492 : add byte ptr [rax], al ; retf 2
0x00000000004a2692 : add byte ptr [rax], al ; retf 3
0x000000000049e3e6 : add byte ptr [rax], al ; retf 4
0x00000000004a2a92 : add byte ptr [rax], al ; retf 5
0x00000000004a2c92 : add byte ptr [rax], al ; retf 6
0x00000000004a2e92 : add byte ptr [rax], al ; retf 7
0x00000000004a3092 : add byte ptr [rax], al ; retf 8
0x00000000004a3292 : add byte ptr [rax], al ; retf 9
0x00000000004a287e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004afcca : add byte ptr [rax], al ; rol byte ptr [rbp], 1 ; add byte ptr [rax], al ; cwde ; stc ; jmp qword ptr [rcx]
0x000000000049ec86 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b3fba : add byte ptr [rax], al ; ror byte ptr [rax - 0x32000000], 0xfc ; jmp qword ptr [rsi]
0x00000000004b2cca : add byte ptr [rax], al ; sal byte ptr [rbp], 1 ; add al, dh ; or edi, esp ; jmp qword ptr [rax]
0x00000000004af4ba : add byte ptr [rax], al ; sar byte ptr [rip - 0x26400000], 0xf8 ; call qword ptr [rax]
0x00000000004b5c12 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0x5ec80000], ah ; std ; jmp qword ptr [rax]
0x000000000041ec8c : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004af826 : add byte ptr [rax], al ; sub al, 0x41 ; add byte ptr [rax], al ; xor al, 0x83 ; stc ; call qword ptr [rdx]
0x00000000004b1622 : add byte ptr [rax], al ; sub byte ptr [rdi], bl ; add byte ptr [rax], bh ; xchg eax, ebp ; cli ; call qword ptr [rdi]
0x00000000004abc22 : add byte ptr [rax], al ; sub byte ptr [rip - 0x65280000], al ; cmc ; call rax
0x000000000042cf2c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004179b6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000446a41 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000047b52d : add byte ptr [rax], al ; syscall
0x00000000004adfa2 : add byte ptr [rax], al ; test al, 0x28 ; add byte ptr [rax], al ; clc ; retf
0x00000000004abb86 : add byte ptr [rax], al ; test al, 0x94 ; cmc ; call qword ptr [rdx]
0x00000000004affe6 : add byte ptr [rax], al ; test al, 0xa5 ; stc ; jmp qword ptr [rcx]
0x00000000004b1956 : add byte ptr [rax], al ; test al, 0xb0 ; cli ; call qword ptr [rax]
0x00000000004ac0a2 : add byte ptr [rax], al ; test al, 9 ; add byte ptr [rax], al ; clc ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004af47e : add byte ptr [rax], al ; test byte ptr [rip - 0x69840000], bh ; clc ; jmp qword ptr [rsi]
0x000000000044bbf9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004b56ae : add byte ptr [rax], al ; test ebp, edi ; call qword ptr [rbx]
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042b82e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004b163e : add byte ptr [rax], al ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b1652 : add byte ptr [rax], al ; xchg rax, rbp ; cli ; call qword ptr [rcx]
0x00000000004b135a : add byte ptr [rax], al ; xor al, 0x74 ; cli ; jmp rax
0x00000000004af82a : add byte ptr [rax], al ; xor al, 0x83 ; stc ; call qword ptr [rdx]
0x00000000004b032a : add byte ptr [rax], al ; xor byte ptr [rax + rax], cl ; jo 0x4b02f4 ; stc ; jmp qword ptr [rcx]
0x000000000045c9b7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475cd6 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040ec73 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d335 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f226 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044984e : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042b77a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044a32a : add byte ptr [rax], al ; xor edi, edi ; syscall
0x00000000004578f6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000444afe : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400ba4 : add byte ptr [rax], bh ; leave ; ret
0x00000000004b0833 : add byte ptr [rax], bh ; push rcx ; add byte ptr [rax], al ; out dx, eax ; cld ; hlt ; jmp qword ptr [rbx]
0x0000000000480e0e : add byte ptr [rax], bh ; retf 0x850f
0x00000000004b1627 : add byte ptr [rax], bh ; xchg eax, ebp ; cli ; call qword ptr [rdi]
0x00000000004af2b7 : add byte ptr [rax], bl ; ret
0x00000000004abc23 : add byte ptr [rax], ch ; add eax, 0x9ad80000 ; cmc ; call rax
0x00000000004ae3b7 : add byte ptr [rax], ch ; push rsi ; jmp rsi
0x00000000004af903 : add byte ptr [rax], cl ; add byte ptr [rax], al ; cwde ; test ecx, edi ; call qword ptr [rbx]
0x00000000004b30e7 : add byte ptr [rax], cl ; and al, 0xfc ; jmp qword ptr [rcx]
0x000000000048b8fe : add byte ptr [rax], cl ; mov byte ptr [rip + 0x2308a9], 8 ; ret
0x000000000048b905 : add byte ptr [rax], cl ; ret
0x00000000004b032b : add byte ptr [rax], dh ; add byte ptr [rax], r8b ; jo 0x4b02f3 ; stc ; jmp qword ptr [rcx]
0x00000000004af88f : add byte ptr [rax], dh ; test cl, bh ; call qword ptr [rdx]
0x00000000004b15af : add byte ptr [rax], dl ; nop ; cli ; call qword ptr [rdx]
0x000000000044b18d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412f5d : add byte ptr [rax], r8b ; call 0x412859
0x000000000040dcdd : add byte ptr [rax], r8b ; hlt ; jmp 0x40dce8
0x00000000004b032d : add byte ptr [rax], r8b ; jo 0x4b02f1 ; stc ; jmp qword ptr [rcx]
0x00000000004236dd : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044a5bd : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x000000000047551d : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044a58d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x000000000041876d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000004182dd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044412d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044416d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000420255 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400aa5 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000484b9d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a6d : add byte ptr [rax], r8b ; ret
0x00000000004464fd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000449536 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000484faf : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e023 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004758ad : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x000000000044877e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481db4 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481cf4 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000041303a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004578f7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000481f15 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000484220 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a64f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449766 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047577b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000416397 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449af6 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000412677 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x0000000000465ff6 : add byte ptr [rbp + 0xa], dh ; jmp 0x466024
0x000000000041763a : add byte ptr [rbp + 0xb], dh ; jmp 0x41766a
0x0000000000482e4f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000482d3f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044a465 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x000000000048830a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000048777a : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045ac6e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000484ecc : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000419f1f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d158 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000048d070 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049edd7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000477e96 : add byte ptr [rbp + rcx*4 + 0x25], cl ; push rax ; ret 2
0x0000000000477e8f : add byte ptr [rbp + rcx*4 + 0x2d], cl ; pop rsi ; ret 2
0x000000000046751d : add byte ptr [rbp + rcx*4 + 0x35], cl ; sahf ; ret 3
0x000000000041ef7b : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047200e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000472108 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000472202 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004856ee : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487bec : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004af47f : add byte ptr [rbp + rdi - 0x69840000], al ; clc ; jmp qword ptr [rsi]
0x00000000004ac4ab : add byte ptr [rbp + rdi - 0xa], dl ; call qword ptr [rdi]
0x00000000004b1653 : add byte ptr [rbp + rdx*4 - 6], cl ; call qword ptr [rcx]
0x00000000004b4deb : add byte ptr [rbp + rsi - 3], dl ; jmp qword ptr [rdx]
0x00000000004900b4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044bbfa : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049f083 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000448dd7 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000486a74 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004829cf : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000468c89 : add byte ptr [rbp - 0x75], cl ; je 0x468cba ; and byte ptr [rax + 1], cl ; ret
0x00000000004271fd : add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d365 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f447 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x0000000000493f18 : add byte ptr [rbp - 7], ah ; push rax ; stc ; jmp rax
0x000000000043d0f9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000491443 : add byte ptr [rbx + 0x2283ca3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004852ad : add byte ptr [rbx + 0x236eac0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047fc95 : add byte ptr [rbx + 0x23a54b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000042385f : add byte ptr [rbx + 0x29858a15], cl ; add bh, dh ; ret 0
0x00000000004201cf : add byte ptr [rbx + 0x29963e3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004186a7 : add byte ptr [rbx + 0x2a366505], al ; add byte ptr [rcx], al ; ret
0x0000000000419c9f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000457b2b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000044413f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000443c6f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x0000000000434fdf : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000042195f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412348 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414194 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405d91 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fc8b : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459e5f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f49f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044a884 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x0000000000473c4a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004af87b : add byte ptr [rbx + rax*4 - 7], dl ; jmp rbx
0x00000000004af82b : add byte ptr [rbx + rax*4], dh ; stc ; call qword ptr [rdx]
0x000000000048d117 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000045c4de : add byte ptr [rbx + rcx*4 + 0x2d], cl ; retf 0x25fa
0x00000000004843f7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488217 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004b3ef3 : add byte ptr [rbx + rcx*8], cl ; cld ; call rdx
0x000000000044d36f : add byte ptr [rbx - 0x18], dl ; mov edx, 0x89000281 ; ret
0x0000000000448168 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000448176 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000044816f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000448184 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000044817d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000448161 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000471e59 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046ceff : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004483de : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000465f0c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000446126 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406ed5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040a9a1 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040ac06 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409db4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x0000000000410b48 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407c4c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000407002 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000040706e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000409e1f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000409ec2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000412bc7 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000048eebf : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x0000000000495e74 : add byte ptr [rbx - 5], ch ; jmp rax
0x000000000049484c : add byte ptr [rbx], 0xfa ; call qword ptr [rax]
0x000000000047b607 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000049461c : add byte ptr [rbx], dl ; cli ; call qword ptr [rax + 0x20fffa12]
0x000000000046039d : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004671c5 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000042a215 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000041153f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000004114a6 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000489972 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000047380f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040fd4d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000419140 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412bb0 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000047199c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042d97e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048afb6 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045a35e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042c1dc : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000443fb8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000460a11 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c7ca : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485966 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x00000000004694d8 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d74b : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000461d1e : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000466d77 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046bd8e : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044682f : add byte ptr [rcx + 1], cl ; ret
0x000000000040e0e5 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c205 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000041911d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000402192 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004af877 : add byte ptr [rcx + rax*2], bh ; add byte ptr [rbx + rax*4 - 7], dl ; jmp rbx
0x00000000004af827 : add byte ptr [rcx + rax*2], ch ; add byte ptr [rax], al ; xor al, 0x83 ; stc ; call qword ptr [rdx]
0x000000000047575c : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004ae037 : add byte ptr [rcx + rbp], bh ; add byte ptr [rax], al ; hlt ; sal esi, cl ; call qword ptr [rax]
0x0000000000416a44 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004b0077 : add byte ptr [rcx + rcx*2], bh ; add ah, al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x0000000000491fff : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473a6f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048db9f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000049175f : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423dff : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000041f5f8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f5c7 ; ret
0x00000000004941b8 : add byte ptr [rcx + rdi*8 - 0x64a1f01], dh ; call rax
0x000000000045540f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045ade2 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047f01b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f0b8 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e157 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044b29a : add byte ptr [rcx - 0x75], cl ; jge 0x44b2a5 ; call r12
0x000000000044b2ca : add byte ptr [rcx - 0x75], cl ; jge 0x44b2d5 ; call r12
0x000000000049210f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044bd67 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046c18e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046aca7 : add byte ptr [rcx - 0x77], al ; retf
0x000000000045859b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045e9e7 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047d0 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004917b2 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479c84 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000044bc6f : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x000000000048a93a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048aa49 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x000000000047145b : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000048ac4f : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x00000000004611ca : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045b1b7 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000042a2af : add byte ptr [rcx - 0x7d], cl ; jmp 0x42a2cb
0x000000000041cdd7 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041935f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045b42e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x000000000042603f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042494f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044a842 : add byte ptr [rcx - 0x7d], cl ; retf
0x0000000000493ef4 : add byte ptr [rcx - 7], bl ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x0000000000493ec8 : add byte ptr [rcx - 7], cl ; push qword ptr [rax] ; xor edi, ecx ; call qword ptr [rax]
0x000000000042ba02 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042ba28 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004557ce : add byte ptr [rcx], 0 ; add al, ch ; stc ; ret 0xfffa
0x0000000000455954 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000048b40a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x00000000004b3eb8 : add byte ptr [rcx], al ; add byte ptr [rax], al ; push rsp ; retf 0xfffc
0x0000000000446a3f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040eb5f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b1b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047fc9b : add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004186ad : add byte ptr [rcx], al ; ret
0x000000000044d37c : add byte ptr [rcx], bh ; ret
0x00000000004afffc : add byte ptr [rcx], cl ; add al, al ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x0000000000477f3c : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000044a515 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000422bc4 : add byte ptr [rcx], dh ; push qword ptr [rcx] ; shr al, 0xc2 ; int 0xfe
0x000000000040ec74 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b30c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000004758ea : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475921 ; ret
0x000000000041476f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x414789 ; ret
0x000000000044d39b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x0000000000432e2a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048ce85 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048cead : add byte ptr [rdi + 1], bh ; call rax
0x000000000048dbfc : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b164f : add byte ptr [rdi + rbx*2], dl ; add byte ptr [rbp + rdx*4 - 6], cl ; call qword ptr [rcx]
0x00000000004823c7 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000045994f : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000463345 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004b4eb7 : add byte ptr [rdi + rdx*4 + 0x36d40000], bh ; std ; jmp rsp
0x00000000004b0dc3 : add byte ptr [rdi + rdx], bh ; cli ; call rcx
0x0000000000493f84 : add byte ptr [rdi - 0x700f0007], cl ; stc ; jmp rax
0x000000000040db86 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000480fb6 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000494444 : add byte ptr [rdi], cl ; cli ; call qword ptr [rax + 0x20fffa0e]
0x00000000004347a6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000448037 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000004357df : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043584f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000045429b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x00000000004553a4 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045538f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000004553b9 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004480ef : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000425bef : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000412bbf : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042bf6f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042baaf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000462523 : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042b33f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b36f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b35f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042b34f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046c7c4 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047b963 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045889b : add byte ptr [rdi], cl ; ret 0xc083
0x00000000004655a3 : add byte ptr [rdi], cl ; retf 0x45e9
0x000000000042a20f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040db6b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000411056 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x0000000000421b6e : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000469938 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004205ce : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x00000000004767e3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000044f804 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004557cc : add byte ptr [rdx + 0x180], bh ; call 0x401ad8
0x00000000004557f3 : add byte ptr [rdx + 0x22f], bh ; call 0x401ad8
0x0000000000443c2f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000044247f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d087 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047c09c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047c9c4 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x000000000048584e : add byte ptr [rdx + 0xcc], bh ; call 0x401ad8
0x000000000048504f : add byte ptr [rdx + 5], bh ; jmp 0x401b28
0x0000000000412857 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000049e9d7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004ac177 : add byte ptr [rdx + rcx], bh ; add byte ptr [rsp + rbp - 0xa], dl ; call qword ptr [rdx]
0x0000000000457160 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045715f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000004af7b3 : add byte ptr [rdx + rdi*2 - 7], bl ; call rsp
0x0000000000494888 : add byte ptr [rdx + rdi*8], al ; push qword ptr [rax + 3] ; cli ; call qword ptr [rax]
0x0000000000494b14 : add byte ptr [rdx], bh ; cli ; call qword ptr [rax + 0x20fffa39]
0x0000000000494684 : add byte ptr [rip + 0x470fffa], al ; cli ; jmp rax
0x000000000044be07 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000004851e2 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c4e4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004633ea : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000041a307 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000046616a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x0000000000419d3f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000463413 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x00000000004633b1 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000046610c : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042b274 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041a306 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004243f1 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004af483 : add byte ptr [rsi + rdx*4 - 8], bh ; jmp qword ptr [rsi]
0x0000000000455f20 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000455f1f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000048528d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044bc9d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x0000000000474dbd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000494e6c : add byte ptr [rsi - 6], dl ; call qword ptr [rax]
0x00000000004243b7 : add byte ptr [rsi - 9], dh ; ret 0
0x000000000049493c : add byte ptr [rsi], dh ; cli ; call qword ptr [rax + 0x20fffa35]
0x0000000000417035 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004abb97 : add byte ptr [rsp + rax - 0x6b4c0000], bl ; cmc ; call rsp
0x00000000004ac17b : add byte ptr [rsp + rbp - 0xa], dl ; call qword ptr [rdx]
0x00000000004b1357 : add byte ptr [rsp + rbx*2], bl ; add byte ptr [rsp + rsi*2], dh ; cli ; jmp rax
0x0000000000400dae : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x0000000000452bdc : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004b12db : add byte ptr [rsp + rsi*2], al ; cli ; call qword ptr [rdx]
0x00000000004b135b : add byte ptr [rsp + rsi*2], dh ; cli ; jmp rax
0x0000000000448f05 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000044fd4b : add byte ptr es:[rax - 0x77], cl ; mov r8b, 0xe8 ; retf 0xffad
0x000000000044d364 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044bbf7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049ede3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004155a2 : add ch, al ; pop rax ; ret
0x00000000004156a9 : add ch, al ; push rcx ; ret 0xffff
0x000000000047361f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000004a98bc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a98bd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b3e85 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x0000000000471d1a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000422cfa : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000469513 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004aca97 : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000048bcf7 : add ch, cl ; retf 0xfffc
0x0000000000448118 : add cl, al ; call 0xffffffff84070a30
0x00000000004a8c8a : add cl, bl ; retf 0xea91
0x00000000004424a7 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000469cf2 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000045514e : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000469246 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004553a8 : add cl, byte ptr [rax + 0x39] ; retf
0x0000000000432a2a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000447e04 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041cfab : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cc08 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000042468c : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000411644 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411563 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000450cec : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x00000000004556e6 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x00000000004424a8 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000442415 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004854e5 : add cl, byte ptr [rax - 0x77] ; je 0x485516 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e634 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004182c2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000440c70 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000440cd3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000483fbd : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000048bcf3 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000471260 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000435622 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000458458 : add cl, byte ptr [rcx + 0x39] ; retf
0x000000000040359a : add cl, byte ptr [rcx + 0x5de8002b] ; retf 0xffbf
0x0000000000451e1a : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000404849 : add cl, byte ptr [rdi] ; retf 0x8b48
0x0000000000446b2b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000477e07 : add cl, ch ; jmp 0x477e11
0x0000000000413d87 : add cl, ch ; ret
0x000000000045ed2a : add cl, ch ; ret 0xfffa
0x0000000000454bc8 : add cl, ch ; ret 0xfffd
0x0000000000405cca : add cl, ch ; retf
0x000000000043b1aa : add cl, ch ; retf 0xfffe
0x0000000000400ba9 : add cl, cl ; ret
0x00000000004a8b43 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a8b42 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a2a8b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000469fe8 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e832 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004a797e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004a1ed7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004357d3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000400596 : add dh, bl ; ret
0x000000000042442e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004acfc9 : add dh, byte ptr [rbx + 0xa] ; ret
0x000000000041870e : add dh, byte ptr [rsi] ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b3fc0 : add dh, cl ; cld ; jmp qword ptr [rsi]
0x000000000041ad38 : add dh, dh ; ret
0x000000000045101e : add dh, dh ; ret 0x4801
0x000000000042266f : add dh, dh ; ret 0x4804
0x000000000047c548 : add dh, dh ; ret 0x7403
0x000000000044a4ff : add dh, dh ; ret 0x7404
0x0000000000444b57 : add dh, dh ; ret 0x7501
0x0000000000444b64 : add dh, dh ; ret 0x7502
0x0000000000444b71 : add dh, dh ; ret 0x7504
0x0000000000444b29 : add dh, dh ; ret 0x7510
0x0000000000444b36 : add dh, dh ; ret 0x7520
0x000000000042465c : add dh, dh ; ret 0x7540
0x0000000000422993 : add dh, dh ; ret 0xf02
0x000000000045a2b8 : add dh, dh ; ret 0xf04
0x000000000041ac69 : add dh, dh ; ret 0xf08
0x0000000000466bd1 : add dh, dh ; ret 0xf40
0x0000000000466bb7 : add dh, dh ; ret 0xf50
0x00000000004943cc : add dh, dl ; stc ; inc dword ptr [rax - 0x3f] ; stc ; call qword ptr [rax]
0x00000000004944f0 : add dl, byte ptr [rcx] ; cli ; call qword ptr [rdx + 0x22fffa10]
0x00000000004b3b5f : add dl, ch ; leave ; hlt ; jmp qword ptr [rcx]
0x0000000000494f64 : add dl, dh ; cli ; call qword ptr [rax]
0x000000000047990d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000046ff87 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046eda5 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000044fbd3 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000443c31 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000004657ca : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000046578f : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000456898 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000455715 : add dword ptr [rax + 0x39480750], ecx ; retf
0x0000000000416c3d : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047fad9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047faeb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045b47f : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x0000000000464baa : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045ce73 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045cdfd : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000455393 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000416f18 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x00000000004572d0 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048df13 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000048c4fe : add dword ptr [rax + 1], ecx ; retf
0x000000000047a789 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x0000000000481e87 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040daba : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000479105 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041dd6e : add dword ptr [rax + 9], ecx ; ret 0x8949
0x00000000004790d7 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044a887 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x0000000000475830 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a873b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a87a7 ; retf
0x000000000046124b : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000402bff : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000422d44 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000046ff88 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000442481 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000419031 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a07f7 ; ret
0x0000000000442412 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047f223 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d185 ; ret
0x000000000045e130 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000405f2c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000450137 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000414006 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045d24c : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000004858c2 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000047f222 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d185 ; ret
0x000000000040ee96 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000481493 : add dword ptr [rax - 0x7d], ecx ; ret 0x4118
0x0000000000481813 : add dword ptr [rax - 0x7d], ecx ; ret 0x4418
0x000000000045b8e9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046eda6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402c49 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000450726 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046f3f7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e3bb : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000469d59 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045e875 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000449bc5 : add dword ptr [rax - 1], edi ; jmp 0x449b96
0x0000000000405960 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000454d84 : add dword ptr [rax], eax ; add al, ch ; int 0xfa
0x0000000000454ebb : add dword ptr [rax], eax ; add al, ch ; or eax, 0x89fffacc ; retf 0xe283
0x00000000004557cf : add dword ptr [rax], eax ; add al, ch ; stc ; ret 0xfffa
0x00000000004100d4 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000447fa1 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x00000000004198ea : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000468103 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000455148 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000477f04 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041e9ad : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000470e3b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000475a3d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004493d9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e7da : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x00000000004563b6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048cd25 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000455955 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x0000000000446efe : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004718f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004111f8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000041eff0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004683d8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b6bc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456012 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042aee7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e645 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000042410e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043fe5f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af15 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d783 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000044e7f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a1eda : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a108a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a0eb2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0eaa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1642 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0eea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a0ee2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1682 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000048ce87 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048cddd : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048dbf9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48dc0a ; sbb eax, eax ; ret
0x000000000040f335 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40f302
0x000000000045cffd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x45cfca
0x0000000000460e65 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475d82 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000044bd4e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x0000000000449241 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000047e60d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d490 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000484476 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046eefd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000417143 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004867be : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047fca1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000468640 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044988b : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000413038 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004287d8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048cc76 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e012 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409e1d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000049210d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004611c8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000477f3a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444b55 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000444b62 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000444b6f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000444b27 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000444b34 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000444b41 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045a2b6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000424688 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000042384c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000004237b3 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000040fd4c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048504e : add dword ptr [rax], eax ; mov edx, 5 ; jmp 0x401b29
0x0000000000405d90 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044c641 : add dword ptr [rax], esp ; jmp rdx
0x00000000004a8c84 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000400b1c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000466690 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000448d79 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044b03d : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000045e6b2 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004a906a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435692 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a7c4a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046c1c5 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000488ff9 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d4ae : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004760ac : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x000000000046877f : add dword ptr [rcx + 0x2523a60d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000045c342 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044ad93 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044a846 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000040e0fa : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x00000000004424b1 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046eb9e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045429f : add dword ptr [rcx - 0x77], eax ; retf
0x0000000000459988 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044c435 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000467291 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x000000000047884b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000047564a : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000414c93 : add dword ptr [rcx], ecx ; retf 0xd284
0x00000000004646a3 : add dword ptr [rcx], edi ; retf
0x00000000004a8b95 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000447c92 : add dword ptr [rdi + 0x15], esi ; jb 0x447ca0 ; mov byte ptr [rdi], cl ; ret
0x00000000004b3e4d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b3de5 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b3e19 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b3df6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b3e2a : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3e5e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b04fd : add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000456890 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047e717 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000041e56b : add dword ptr [rdi], ecx ; ret 0x8948
0x00000000004483e1 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000454201 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000047990e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000446c8c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043851d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004852eb : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a886f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000044d399 : add dword ptr [rdx], 0x39d23100 ; ret
0x00000000004b2fdc : add dword ptr [rdx], 0x4a ; ret
0x00000000004b5a6c : add dword ptr [rdx], 0x55 ; ret
0x00000000004aef48 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5a28 : add dword ptr [rdx], 0x76 ; ret
0x00000000004acb3a : add dword ptr [rdx], eax ; retf
0x00000000004196af : add dword ptr [rdx], ebp ; add bl, dh ; ret
0x00000000004186a8 : add dword ptr [rip + 0x2a3665], 1 ; ret
0x00000000004aca93 : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000442492 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000417039 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000489f8d : add eax, 0x1489066 ; ret 0xb70f
0x000000000045ac70 : add eax, 0x18c48348 ; ret
0x00000000004247a9 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000423849 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x00000000004495ba : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042b7da : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424360 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x00000000004246e9 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x00000000004245a9 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000424449 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000424750 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000424610 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000048f561 : add eax, 0x22ce1e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048f451 : add eax, 0x22cf2e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004244b0 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x000000000042472f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x00000000004245ef : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x000000000042448f : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x00000000004237d0 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x00000000004876c0 : add eax, 0x235192 ; jne 0x4876f6 ; ret
0x000000000042451b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x0000000000485491 : add eax, 0x23742a ; ret
0x00000000004848f9 : add eax, 0x23776a ; ret
0x00000000004848de : add eax, 0x237785 ; add rsp, 8 ; ret
0x00000000004244fe : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x000000000042454f : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047f38c : add eax, 0x23d017 ; mov qword ptr [rsi], rax ; ret
0x000000000047f31b : add eax, 0x23d090 ; ret
0x000000000047f2e2 : add eax, 0x23d0c9 ; add rsp, 8 ; ret
0x000000000047f226 : add eax, 0x23d185 ; ret
0x000000000046c927 : add eax, 0x24a8f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c8d4 : add eax, 0x24a947 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c3a7 : add eax, 0x24a974 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c746 : add eax, 0x24aad5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c701 : add eax, 0x24ab1a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c6bc : add eax, 0x24ab5f ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c66d : add eax, 0x24abae ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460dc0 : add eax, 0x25585b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046116f : add eax, 0x2559ac ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461121 : add eax, 0x2559fa ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461072 : add eax, 0x255aa9 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461016 : add eax, 0x255b05 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460d76 : add eax, 0x255da5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460d28 : add eax, 0x255df3 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004608c7 : add eax, 0x255f54 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004579d2 : add eax, 0x2644a1 ; ret
0x000000000044d352 : add eax, 0x26cfa9 ; ret
0x000000000044f472 : add eax, 0x26d4b1 ; ret
0x000000000045292f : add eax, 0x29480000 ; ret 0x349
0x00000000004246c9 : add eax, 0x297722 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424589 : add eax, 0x297862 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424429 : add eax, 0x2979c2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f787 : add eax, 0x29a0d4 ; ret
0x000000000041f791 : add eax, 0x29c5d6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004196ad : add eax, 0x2a01ae ; ret
0x00000000004191a8 : add eax, 0x2a0643 ; ret
0x00000000004191bf : add eax, 0x2a0648 ; ret
0x0000000000419180 : add eax, 0x2a0663 ; ret
0x0000000000419160 : add eax, 0x2a067b ; ret
0x0000000000419056 : add eax, 0x2a07ed ; ret
0x0000000000419046 : add eax, 0x2a07f5 ; ret
0x0000000000418ff6 : add eax, 0x2a07fd ; ret
0x0000000000418fe6 : add eax, 0x2a0815 ; ret
0x0000000000418612 : add eax, 0x2a0b09 ; ret
0x0000000000419661 : add eax, 0x2a2706 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004191d5 : add eax, 0x2a2bba ; ret
0x000000000041870d : add eax, 0x2a3602 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401dee : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004b209c : add eax, 0x3400e4e ; ret
0x0000000000484ece : add eax, 0x38c48348 ; ret
0x000000000041cefe : add eax, 0x39480000 ; ret 0xf275
0x000000000042b7fa : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000494685 : add eax, 0x470fffa ; cli ; jmp rax
0x0000000000461017 : add eax, 0x4800255b ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000443cc8 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000004424f8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000004441c6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000494841 : add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x0000000000443d49 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000442539 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004946fd : add eax, 0x562fffa ; cli ; call rdx
0x0000000000485070 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a2a7d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000004718da : add eax, 0x5c415d5b ; ret
0x00000000004a2a8d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000042b81a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424779 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000424389 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x00000000004243ed : add eax, 0x79ee ; je 0x4243c2 ; ret
0x000000000042ab27 : add eax, 0x83480000 ; ret 0x4910
0x000000000043e451 : add eax, 0x83480000 ; ret 0xe910
0x000000000042ab55 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041cd9e : add eax, 0x83480000 ; retf 0x4901
0x000000000045f035 : add eax, 0x83ffffef ; ret
0x0000000000443ccb : add eax, 0x8428d48 ; ret
0x000000000040db88 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000458e53 : add eax, 0x89480000 ; ret 0x2948
0x00000000004917b0 : add eax, 0x89490000 ; ret 0x8349
0x0000000000428358 : add eax, 0x894d0000 ; retf
0x0000000000480fb8 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004abc25 : add eax, 0x9ad80000 ; cmc ; call rax
0x00000000004727e9 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000473bf9 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042d21a : add eax, 0xc0310000 ; ret
0x0000000000443d4d : add eax, 0xc428d48 ; ret
0x000000000044482d : add eax, 0xc478d48 ; ret
0x0000000000454f35 : add eax, 0xe8000003 ; xchg eax, edx ; retf
0x0000000000455412 : add eax, 0xe9000000 ; ret
0x00000000004727b9 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x000000000048d15a : add eax, 0xf7148948 ; ret
0x0000000000435683 : add eax, 0xf7f0ff3 ; ret
0x000000000048f46a : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044e7d5 : add eax, 1 ; push rax ; call rbx
0x0000000000474821 : add eax, 1 ; ret
0x0000000000474818 : add eax, 2 ; ret
0x0000000000474831 : add eax, 3 ; ret
0x000000000045ab89 : add eax, dword ptr [0] ; ret
0x000000000045576d : add eax, dword ptr [rax] ; add al, ch ; pop rbx ; ret
0x000000000048718e : add eax, dword ptr [rax] ; add al, ch ; retf 0xf98e
0x0000000000454f36 : add eax, dword ptr [rax] ; add al, ch ; xchg eax, edx ; retf
0x000000000047b608 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004897a1 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489dfc : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044cb8e : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041c398 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041ace6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000400ebb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041ae6a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041fb6a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041fd30 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042ad07 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e5f1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ad35 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044f3c4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a64c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000474873 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000449b5b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042acb8 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004483dc : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000489970 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000461d1c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044bd65 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044be05 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000047c546 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041ac67 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046ea84 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046f1cb : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046f239 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004480c0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d20c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b3df9 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008ca : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000004759fa : add eax, dword ptr [rcx + rdx] ; ret
0x00000000004542e0 : add eax, dword ptr [rcx - 0x77] ; retf
0x000000000040fd4b : add eax, dword ptr [rcx] ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004a4d6c : add eax, dword ptr [rdi + 0x7690fffd] ; std ; jmp rax
0x00000000004ad26a : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000486c33 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b3e2d : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3e61 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b1db2 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047c286 : add eax, dword ptr [rsi] ; call rax
0x000000000048ad96 : add eax, eax ; jmp rax
0x0000000000402194 : add eax, ebp ; jmp rax
0x0000000000487320 : add eax, ebp ; retf 0xfff3
0x000000000047c5a7 : add eax, ebx ; call rax
0x000000000044d45c : add eax, ebx ; jmp rax
0x0000000000440778 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ea8b : add eax, ecx ; jmp rax
0x000000000042b129 : add eax, ecx ; ret
0x0000000000440add : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b656 : add eax, ecx ; vzeroupper ; ret
0x000000000042b126 : add eax, edi ; add rax, rcx ; ret
0x000000000042b653 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f0bb : add eax, edi ; jmp rax
0x000000000046f38f : add eax, edi ; mov rdx, r8 ; jmp 0x46f363
0x000000000042b354 : add eax, edi ; ret
0x0000000000485220 : add eax, edi ; sub rax, r8 ; ret
0x0000000000440b95 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446b3a : add eax, edi ; sub rax, rsi ; ret
0x000000000042b7ca : add eax, edi ; vzeroupper ; ret
0x0000000000401f2a : add eax, edx ; jmp rax
0x0000000000440a86 : add eax, edx ; sub rax, rdi ; ret
0x000000000047451b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000044806c : add eax, esi ; jmp rax
0x000000000041836d : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048c00d : add eax, esp ; jmp rax
0x0000000000463028 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004a77d7 : add ebp, ebp ; retf
0x000000000047c282 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048a3ba : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004885f0 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000416a81 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b3e1e : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044e02f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44e098 ; pop r12 ; ret
0x00000000004826c1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042bf3b : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000435843 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447c77 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x447c6c ; ret
0x00000000004424e5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000045730d : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004553bd : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040e05e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045116a : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44d3c8
0x00000000004424e9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e6d7 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x000000000044fcc3 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x0000000000434664 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048bacf : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ea51 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000480c9a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483190 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x00000000004355b2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b3dea : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000444164 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000004424e6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000448d7f : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448ddd : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004abf39 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000465e59 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000453945 : add ecx, ebp ; retf 0xfff6
0x000000000042d84b : add ecx, ebx ; jmp r9
0x000000000042c1e2 : add ecx, ebx ; jmp rcx
0x0000000000448094 : add ecx, esi ; jmp rcx
0x000000000048e01e : add edi, dword ptr [rax + 4] ; jne 0x48e049 ; ret
0x000000000045a364 : add edi, ebx ; jmp rdi
0x000000000042d848 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000049484d : add edi, edx ; call qword ptr [rax]
0x0000000000494791 : add edi, edx ; call rsp
0x0000000000494651 : add edi, edx ; jmp qword ptr [rax]
0x00000000004b0bfd : add edi, edx ; jmp qword ptr [rdx]
0x000000000040d53c : add edi, edx ; jmp rdi
0x000000000049478d : add edi, edx ; ljmp [rsi] ; add edi, edx ; call rsp
0x00000000004870e4 : add edx, eax ; jmp 0x4870f2
0x00000000004833f2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000004121b0 : add edx, ecx ; jmp 0x4121c2
0x000000000040d253 : add edx, edi ; jmp rdx
0x0000000000468df8 : add edx, esp ; call qword ptr [r10 + rax*8]
0x00000000004542da : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x0000000000458716 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000459e65 : add esi, eax ; jmp rsi
0x0000000000435763 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000446e95 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044956c : add esi, ebx ; ret
0x000000000041ec90 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004ab1a1 : add esi, edi ; call rsp
0x000000000044819e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042d845 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004165b1 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004107b1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449b9f : add esp, 0x10 ; pop rbx ; ret
0x0000000000411eb5 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446a3d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482598 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dbce : add esp, 0x118 ; ret
0x000000000045aeba : add esp, 0x148 ; ret
0x000000000041a0c9 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f37b : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041f996 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044d17a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411845 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045ac72 : add esp, 0x18 ; ret
0x0000000000423450 : add esp, 0x20 ; call 0x40ff35
0x00000000004170bd : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416c9d : add esp, 0x20 ; pop rbx ; jmp rax
0x00000000004170f6 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482619 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416a0f : add esp, 0x20 ; pop rbx ; ret
0x0000000000448bc2 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044953a : add esp, 0x28 ; ret
0x000000000044f558 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004847ef : add esp, 0x30 ; pop rbx ; ret
0x000000000048ab86 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040da84 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004160be : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004758b1 : add esp, 0x38 ; ret
0x000000000048841c : add esp, 0x40 ; pop rbx ; ret
0x0000000000481b2c : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000449212 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488503 : add esp, 0x50 ; pop rbx ; ret
0x0000000000481aba : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000044976a : add esp, 0x58 ; ret
0x000000000044965c : add esp, 0x68 ; ret
0x0000000000473d14 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004499ef : add esp, 0x78 ; ret
0x00000000004687be : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000475393 : add esp, 0x80 ; pop rbx ; ret
0x0000000000415988 : add esp, 0x80 ; ret
0x000000000044bb4d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d72 : add esp, 0x88 ; pop rbx ; ret
0x00000000004014ef : add esp, 0x98 ; ret
0x00000000004754b3 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000457b26 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000040faf7 : add esp, 0xd0 ; pop rbx ; ret
0x000000000040fc86 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f754 : add esp, 0xd8 ; ret
0x0000000000411bbf : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fbab : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041001e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b180 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a3bc : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416669 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488359 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000413674 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401b83 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000423819 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a8ecb : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004556ca : add qword ptr [rax + 0x39], rcx ; retf
0x000000000045429e : add qword ptr [rcx - 0x77], r8 ; retf
0x0000000000435842 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004357d2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435762 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000042ad34 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004542df : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000042d84a : add r9, r11 ; jmp r9
0x00000000004a8c89 : add r9b, bl ; retf 0xea91
0x00000000004572ee : add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045730c : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000465e58 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000474820 : add rax, 1 ; ret
0x0000000000474817 : add rax, 2 ; ret
0x0000000000474830 : add rax, 3 ; ret
0x000000000045ab88 : add rax, qword ptr [0] ; ret
0x000000000047c285 : add rax, qword ptr [r14] ; call rax
0x000000000047d20b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000486c32 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045ab87 : add rax, qword ptr fs:[0] ; ret
0x000000000047c5a6 : add rax, r11 ; call rax
0x000000000048c00c : add rax, r12 ; jmp rax
0x0000000000402193 : add rax, r13 ; jmp rax
0x000000000048c90d : add rax, r14 ; jmp rax
0x000000000048afbb : add rax, r15 ; jmp rax
0x000000000048ad95 : add rax, r8 ; jmp rax
0x000000000048c545 : add rax, r9 ; jmp rax
0x000000000044d4d3 : add rax, rbp ; jmp rax
0x000000000044d45b : add rax, rbx ; jmp rax
0x0000000000440777 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ea8a : add rax, rcx ; jmp rax
0x000000000042b128 : add rax, rcx ; ret
0x0000000000440adc : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b655 : add rax, rcx ; vzeroupper ; ret
0x000000000042b125 : add rax, rdi ; add rax, rcx ; ret
0x000000000042b652 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f0ba : add rax, rdi ; jmp rax
0x000000000042b353 : add rax, rdi ; ret
0x000000000048521f : add rax, rdi ; sub rax, r8 ; ret
0x0000000000440b94 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446b39 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042b7c9 : add rax, rdi ; vzeroupper ; ret
0x0000000000401f29 : add rax, rdx ; jmp rax
0x0000000000440a85 : add rax, rdx ; sub rax, rdi ; ret
0x000000000044806b : add rax, rsi ; jmp rax
0x000000000047c281 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x00000000004556e9 : add rcx, qword ptr [rax + 0x39] ; retf
0x000000000042c1e1 : add rcx, r11 ; jmp rcx
0x0000000000448093 : add rcx, rsi ; jmp rcx
0x000000000040d53b : add rdi, r10 ; jmp rdi
0x000000000045a363 : add rdi, r11 ; jmp rdi
0x000000000042d847 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000468df7 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x00000000004833f1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004870e3 : add rdx, rax ; jmp 0x4870f3
0x00000000004121af : add rdx, rcx ; jmp 0x4121c3
0x000000000040d252 : add rdx, rdi ; jmp rdx
0x0000000000459e64 : add rsi, r8 ; jmp rsi
0x00000000004165b0 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004107b0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449b9e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482597 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dbcd : add rsp, 0x118 ; ret
0x000000000045aeb9 : add rsp, 0x148 ; ret
0x000000000041a0c8 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f37a : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041f995 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000411844 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045ac71 : add rsp, 0x18 ; ret
0x000000000042344f : add rsp, 0x20 ; call 0x40ff36
0x00000000004170bc : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416c9c : add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004170f5 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482618 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416a0e : add rsp, 0x20 ; pop rbx ; ret
0x0000000000449539 : add rsp, 0x28 ; ret
0x000000000044f557 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004847ee : add rsp, 0x30 ; pop rbx ; ret
0x000000000048ab85 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004160bd : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004758b0 : add rsp, 0x38 ; ret
0x000000000048841b : add rsp, 0x40 ; pop rbx ; ret
0x0000000000481b2b : add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488502 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481ab9 : add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000449769 : add rsp, 0x58 ; ret
0x000000000044965b : add rsp, 0x68 ; ret
0x0000000000473d13 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004499ee : add rsp, 0x78 ; ret
0x0000000000475392 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000415987 : add rsp, 0x80 ; ret
0x000000000044bb4c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d71 : add rsp, 0x88 ; pop rbx ; ret
0x00000000004014ee : add rsp, 0x98 ; ret
0x00000000004754b2 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000040faf6 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000040fc85 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f753 : add rsp, 0xd8 ; ret
0x0000000000411bbe : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fbaa : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041001d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b17f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a3bb : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416668 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488358 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401b82 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000423818 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000424687 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004852ea : add word ptr [rdx + rax*2], 1 ; ret
0x000000000046b781 : and al, 0 ; jmp rax
0x000000000046c3aa : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d1f8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004882f1 : and al, 0x10 ; call 0x484d24
0x000000000048edb0 : and al, 0x10 ; call r14
0x000000000044a7a8 : and al, 0x10 ; call rax
0x000000000048255b : and al, 0x10 ; call rdx
0x000000000041c94c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000409528 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x406039
0x0000000000472012 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048eb98 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004239f1 : and al, 0x18 ; call 0x40047c
0x00000000004239f0 : and al, 0x18 ; call 0x40047d
0x0000000000401125 : and al, 0x18 ; call rax
0x00000000004756d0 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000044e758 : and al, 0x18 ; mov r9, r13 ; call rbx
0x0000000000471f2d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047422f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000482556 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004741bb : and al, 0x20 ; call 0x400444
0x0000000000450ea7 : and al, 0x20 ; call r15
0x00000000004530de : and al, 0x20 ; call rax
0x0000000000473ef0 : and al, 0x20 ; call rbx
0x0000000000449ad6 : and al, 0x20 ; je 0x449b09 ; mov eax, 0x48 ; syscall
0x0000000000450d72 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7a04 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041f993 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000450ea2 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000422843 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000451783 : and al, 0x30 ; call r14
0x000000000045195b : and al, 0x30 ; call rbx
0x00000000004740de : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000452bda : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000451c45 : and al, 0x38 ; call r12
0x000000000045227d : and al, 0x38 ; call r14
0x0000000000455241 : and al, 0x38 ; call r15
0x000000000045148b : and al, 0x38 ; call rbx
0x0000000000473dc8 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x0000000000451197 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045177e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451956 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004672cc : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045715e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000455f1e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000481b29 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481ab7 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004536bc : and al, 0x40 ; call r15
0x0000000000455e68 : and al, 0x40 ; call rbx
0x00000000004530d9 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000451c40 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452278 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045523c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451486 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000486c31 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x00000000004165d8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048ac68 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048a96c : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000004132b4 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048dc9e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x00000000004536b7 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455e63 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048dc4f : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489bb7 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b65 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x000000000045116e : and al, 0x50 ; call 0x44d3c4
0x000000000045116d : and al, 0x50 ; call 0x44d3c5
0x00000000004010d3 : and al, 0x60 ; call 0x40dae4
0x0000000000404931 : and al, 0x60 ; jmp 0x4043ac
0x00000000004741b6 : and al, 0x60 ; lea r14, [rsp + 0x20] ; call 0x400449
0x000000000042025b : and al, 0x68 ; call rax
0x0000000000478dac : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x000000000046399e : and al, 0x83 ; ret
0x000000000041703b : and al, 0x83 ; retf 0x4c01
0x000000000045781d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419143 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004047cc : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000045169e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000491ffb : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049175b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000045212b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000451b20 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004578f3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048cddb : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000449b9c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449b1f : and al, 0xc ; jne 0x449af0 ; neg eax ; jmp 0x449af0
0x0000000000449b1e : and al, 0xc ; jne 0x449af1 ; neg eax ; jmp 0x449af1
0x0000000000449a43 : and al, 0xc ; mov eax, 0x48 ; syscall
0x00000000004165c2 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x412858
0x0000000000401120 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479c80 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416b9c : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000048ad68 : and al, 0xd8 ; ret
0x00000000004181b3 : and al, 0xe9 ; ret 0xfffd
0x000000000045253e : and al, 0xf6 ; ret
0x0000000000493e5d : and al, 0xf9 ; call qword ptr [rax]
0x00000000004b30e9 : and al, 0xfc ; jmp qword ptr [rcx]
0x0000000000416ccd : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000040952d : and al, 8 ; call 0x406034
0x000000000040952c : and al, 8 ; call 0x406035
0x000000000041cf66 : and al, 8 ; call 0x419204
0x000000000040deff : and al, 8 ; call rax
0x000000000041c951 : and al, 8 ; call rcx
0x00000000004039be : and al, 8 ; je 0x4039fb ; mov rdi, rax ; call 0x4004c9
0x000000000048e89c : and al, 8 ; jmp 0x48e8b6
0x000000000044a7a3 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004111e0 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000048f454 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004900b3 : and al, byte ptr [rax] ; jne 0x49009d ; pop rbx ; ret
0x000000000048f446 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f457 ; ret
0x000000000048f556 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f567 ; ret
0x0000000000440cea : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004919a0 : and al, ch ; mov ah, ch ; idiv edi ; call 0x40dc08
0x0000000000449017 : and al, ch ; ret
0x000000000049428c : and bh, 0xf9 ; call qword ptr [rax]
0x0000000000469511 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004530df : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000493e55 : and bh, cl ; call rax
0x000000000046f0fb : and bl, ch ; retf 0x9066
0x0000000000411479 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004114a9 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041be1f : and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000041140e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042b666 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000044068a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042b7dc : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000004114aa : and byte ptr [rax + 1], cl ; ret
0x0000000000400ec1 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004663ce : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000440958 : and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000440a7d : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047384e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000450d73 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000477223 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045a564 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45a578 ; call rax
0x000000000044fa56 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048d2d6 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000467e04 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041be20 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412dd2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004af010 : and byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x00000000004600fb : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048d2a9 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b3eb4 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; push rsp ; retf 0xfffc
0x000000000044817a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000494868 : and byte ptr [rax], cl ; cli ; jmp qword ptr [rax + 0x20fffa07]
0x0000000000494138 : and byte ptr [rbp - 0x48ff0007], dh ; stc ; jmp rax
0x00000000004922bc : and byte ptr [rbp - 0x77], cl ; ret
0x0000000000492187 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004a97a8 : and byte ptr [rbx + 0x3d], bh ; retf
0x000000000048261b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000468063 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x000000000041147a : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000494104 : and byte ptr [rbx - 0x42df0007], bh ; stc ; jmp qword ptr [rax]
0x0000000000493f10 : and byte ptr [rbx - 7], ah ; call qword ptr [rax]
0x0000000000494654 : and byte ptr [rbx], cl ; cli ; jmp qword ptr [rax + 0x10fffa0a]
0x000000000045dd20 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004170bf : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x000000000041140f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000494860 : and byte ptr [rcx], cl ; cli ; jmp qword ptr [rax + 0x20fffa08]
0x000000000047f4c4 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000494870 : and byte ptr [rdi], al ; cli ; jmp qword ptr [rax + 0x20fffa06]
0x00000000004470e1 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000040fcab : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000444b30 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000494e74 : and byte ptr [rdx - 6], bl ; push qword ptr [rax] ; pop rsp ; cli ; call rax
0x00000000004ad26d : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000042c27a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b1db5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000494234 : and byte ptr [rsi - 0x582f0007], 0xf9 ; jmp qword ptr [rax]
0x0000000000494878 : and byte ptr [rsi], al ; cli ; jmp qword ptr [rax + 0x20fffa05]
0x0000000000474812 : and ch, 0xf ; je 0x474839 ; add rax, 2 ; ret
0x0000000000448138 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042468a : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000047359b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000004747fd : and cl, 0xf ; je 0x474825 ; ret
0x000000000041770a : and cl, byte ptr [rax + 0x39] ; retf
0x000000000044c731 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047f2c4 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000423e03 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000042babd : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000473bfa : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000049432c : and dh, 0xf9 ; call qword ptr [rax]
0x0000000000448fad : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044bfa9 : and dh, al ; sub byte ptr [rcx], al ; ret
0x0000000000469510 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000494dc9 : and dl, bh ; call qword ptr [rax]
0x00000000004b0e59 : and dl, bh ; call qword ptr [rdi]
0x0000000000469088 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000469089 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9522 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000493fac : and dword ptr [rbx - 0x6c5e0007], edx ; stc ; jmp qword ptr [rcx]
0x00000000004178c7 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041791f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041874e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x0000000000493fa4 : and dword ptr [rdx - 0x6d5e0007], edx ; stc ; jmp qword ptr [rcx]
0x0000000000424362 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a65d9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9521 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045ab8b : and eax, 0 ; ret
0x000000000048421c : and eax, 0x28 ; jne 0x484266 ; leave ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x000000000040e968 : and eax, 0x30 ; call rax
0x000000000040e8a2 : and eax, 0x30 ; call rdx
0x000000000040e98e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004480bd : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000448108 : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004608ca : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000458197 : and eax, 0x4cffff52 ; mov edi, ebp ; call r12
0x00000000004481b3 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x0000000000448157 : and eax, 0x7ff80000 ; ret
0x0000000000453b3b : and eax, 0x833fe283 ; retf 0x4180
0x00000000004547a7 : and eax, 0x89fffad3 ; retf 0xe283
0x000000000044bde7 : and eax, 0xc ; cmp eax, 4 ; je 0x44bdf8 ; ret
0x000000000045ab2c : and eax, 0xf3087400 ; ret
0x00000000004826bc : and eax, 2 ; sub eax, 1 ; ret
0x0000000000487778 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047f2e5 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004852e8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004876c3 : and eax, dword ptr [rax] ; jne 0x4876f3 ; ret
0x0000000000484d3a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004848f5 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x23776a], rax ; ret
0x000000000047f38f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047f229 : and eax, dword ptr [rax] ; ret
0x000000000047ba92 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000045292e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x00000000004178c8 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417920 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044bd82 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44bd95 ; ret
0x00000000004a7cd4 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042d7f5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042cf28 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044b4ca : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x000000000041763e : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf 0x2a46
0x0000000000493e59 : and edi, ecx ; push rax ; and al, 0xf9 ; call qword ptr [rax]
0x00000000004121ac : and edx, 0xfffffffc ; add rdx, rcx ; jmp 0x4121c6
0x00000000004121ab : and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4121c7
0x000000000044bfa8 : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000474357 : bnd je 0x474366 ; test edx, edx ; jne 0x474358 ; ret
0x000000000042b42a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042b350 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042b841 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042b360 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042b370 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042b340 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042b29f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000440303 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000440926 : bsf eax, edx ; ret
0x0000000000474407 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000440a82 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000440420 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000440972 : bsf rax, rdx ; ret
0x0000000000474406 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000473237 : bsr eax, eax ; add rax, rdi ; ret
0x00000000004734bb : bsr eax, esi ; add rax, rdi ; ret
0x00000000004733c9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x00000000004732c5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000473236 : bsr rax, rax ; add rax, rdi ; ret
0x00000000004734ba : bsr rax, rsi ; add rax, rdi ; ret
0x00000000004733c8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000004732c4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000047dbdb : call 0x110a5f2b
0x0000000000469be6 : call 0x21469be4
0x0000000000469d5c : call 0x21469d5a
0x0000000000469feb : call 0x21469fe9
0x000000000046a4b0 : call 0x2146a4ae
0x000000000046a66e : call 0x2146a66c
0x000000000046ac3f : call 0x2146ac3d
0x000000000046ae78 : call 0x2146ae76
0x00000000004abfe4 : call 0x384abff8
0x00000000004039ed : call 0x40043a
0x000000000045d514 : call 0x40043e
0x00000000004741bd : call 0x400442
0x00000000004239f3 : call 0x40047a
0x0000000000478a08 : call 0x40048f
0x00000000004489ec : call 0x4004ae
0x0000000000468972 : call 0x4004af
0x00000000004039c5 : call 0x4004c2
0x0000000000461ba5 : call 0x4004c6
0x00000000004557d2 : call 0x401ad2
0x00000000004866c1 : call 0x401ad8
0x000000000040952f : call 0x406032
0x00000000004010d5 : call 0x40dae2
0x00000000004919a6 : call 0x40dc02
0x000000000040e1ab : call 0x40de46
0x0000000000422bc9 : call 0x40f998
0x0000000000423453 : call 0x40ff32
0x00000000004156aa : call 0x411902
0x00000000004165c8 : call 0x412852
0x0000000000412f60 : call 0x412856
0x000000000041cf68 : call 0x419202
0x00000000004219e5 : call 0x41dc22
0x00000000004920cd : call 0x41ebd2
0x0000000000402d9a : call 0x41f7a2
0x0000000000405cc6 : call 0x420066
0x00000000004839f8 : call 0x43fce7
0x00000000004007f8 : call 0x448026
0x00000000004006c1 : call 0x4484e6
0x000000000044d302 : call 0x448f88
0x000000000040fa72 : call 0x44bd12
0x000000000040fad8 : call 0x44bd42
0x000000000045fb53 : call 0x44be32
0x0000000000451170 : call 0x44d3c2
0x00000000004613fa : call 0x45d692
0x000000000047760a : call 0x47e3b6
0x000000000044ca6a : call 0x47f9f8
0x00000000004b03e4 : call 0x484b043c
0x00000000004882f3 : call 0x484d22
0x00000000004897c2 : call 0x488597
0x0000000000400b11 : call 0x48f6c7
0x000000000045d076 : call 0x490859ca
0x00000000004a8f1a : call 0x4c14b8d5
0x0000000000450427 : call 0x4d078d7b
0x0000000000434dca : call 0x4fc25dc8
0x0000000000434dc9 : call 0x4fc25dc9
0x00000000004378ea : call 0x4fc288e8
0x00000000004378e9 : call 0x4fc288e9
0x0000000000482b71 : call 0x781264c1
0x000000000047b571 : call 0x86c0205
0x000000000046d88a : call 0xa3f5bc6
0x00000000004538ab : call 0xffffffff810fbbd1
0x0000000000453b56 : call 0xffffffff810fbe7c
0x000000000044811a : call 0xffffffff84070a2e
0x00000000004a8e7a : call 0xffffffffab585970
0x00000000004a7043 : call 0xffffffffaf0d0eb9
0x0000000000464ba9 : call 0xffffffffc27f93b3
0x000000000041dd20 : call 0xffffffffc2cb2539
0x000000000041ee60 : call 0xffffffffc2cb3679
0x000000000041fc1a : call 0xffffffffc2cb4433
0x000000000042171d : call 0xffffffffc2cb5f36
0x0000000000421c22 : call 0xffffffffc2cb643b
0x000000000042215e : call 0xffffffffc2cb6977
0x000000000044d56c : call 0xffffffffc2cdd59b
0x000000000047e1ca : call 0xffffffffc2d12dd4
0x000000000041dba0 : call 0xffffffffc37b23aa
0x000000000041ef69 : call 0xffffffffc37b3773
0x000000000046aa7e : call 0xffffffffc3caaa86
0x0000000000440dd7 : call 0xffffffffc4149728
0x0000000000440cf7 : call 0xffffffffc43c9648
0x00000000004842d4 : call 0xffffffffca94ce29
0x00000000004880f4 : call 0xffffffffca950c49
0x00000000004842e1 : call 0xffffffffce9cce3b
0x0000000000488101 : call 0xffffffffce9d0c5b
0x000000000044b185 : call 0xffffffffe1440ee8
0x00000000004b2ce4 : call 0xfffffffff84b2d65
0x00000000004658fc : call 0xfffffffffc114208
0x0000000000403592 : call 2
0x000000000048f7b3 : call 9
0x0000000000468dfa : call qword ptr [r10 + rax*8]
0x0000000000489a10 : call qword ptr [r14]
0x00000000004018c0 : call qword ptr [r15 + rbx*8]
0x0000000000494677 : call qword ptr [rax + 0x10fffa06]
0x000000000049466f : call qword ptr [rax + 0x10fffa07]
0x0000000000494667 : call qword ptr [rax + 0x10fffa08]
0x000000000049465f : call qword ptr [rax + 0x10fffa09]
0x0000000000494dd3 : call qword ptr [rax + 0x10fffa0d]
0x0000000000494d97 : call qword ptr [rax + 0x10fffa0e]
0x0000000000494ddb : call qword ptr [rax + 0x10fffa10]
0x0000000000494d9f : call qword ptr [rax + 0x10fffa11]
0x0000000000494de3 : call qword ptr [rax + 0x10fffa13]
0x0000000000494da7 : call qword ptr [rax + 0x10fffa14]
0x0000000000494deb : call qword ptr [rax + 0x10fffa16]
0x0000000000494daf : call qword ptr [rax + 0x10fffa17]
0x0000000000494df3 : call qword ptr [rax + 0x10fffa19]
0x0000000000494db7 : call qword ptr [rax + 0x10fffa1a]
0x0000000000494dfb : call qword ptr [rax + 0x10fffa1c]
0x0000000000494dbf : call qword ptr [rax + 0x10fffa1d]
0x0000000000494e03 : call qword ptr [rax + 0x10fffa1f]
0x0000000000494dc7 : call qword ptr [rax + 0x10fffa20]
0x0000000000493d5b : call qword ptr [rax + 0x20fff8f5]
0x00000000004940ab : call qword ptr [rax + 0x20fff9bf]
0x0000000000494447 : call qword ptr [rax + 0x20fffa0e]
0x000000000049461f : call qword ptr [rax + 0x20fffa12]
0x000000000049493f : call qword ptr [rax + 0x20fffa35]
0x0000000000494b17 : call qword ptr [rax + 0x20fffa39]
0x0000000000494f47 : call qword ptr [rax + 0x20fffaaf]
0x000000000049436f : call qword ptr [rax + 0x40fff9d8]
0x000000000040e1ee : call qword ptr [rax + 0x458b41]
0x00000000004a4d6f : call qword ptr [rax - 0x1f00028a]
0x00000000004943f3 : call qword ptr [rax - 0x1f000632]
0x000000000049439f : call qword ptr [rax - 0x1f000639]
0x0000000000494227 : call qword ptr [rax - 0x1f00065e]
0x00000000004941d3 : call qword ptr [rax - 0x1f000665]
0x00000000004940a7 : call qword ptr [rax - 0x6f000643]
0x000000000041ed23 : call qword ptr [rax]
0x000000000040100e : call qword ptr [rbx + 0x10]
0x000000000040ea60 : call qword ptr [rbx]
0x0000000000489bc0 : call qword ptr [rcx]
0x00000000004018c1 : call qword ptr [rdi + rbx*8]
0x000000000049268b : call qword ptr [rdi]
0x00000000004944f3 : call qword ptr [rdx + 0x22fffa10]
0x00000000004949eb : call qword ptr [rdx + 0x22fffa37]
0x00000000004956af : call qword ptr [rdx + 0x27fffb3e]
0x0000000000468dfb : call qword ptr [rdx + rax*8]
0x00000000004944d3 : call qword ptr [rdx]
0x0000000000493ff7 : call qword ptr [rsi + 0x26fff994]
0x0000000000494987 : call qword ptr [rsi + 0x26fffa34]
0x0000000000489a11 : call qword ptr [rsi]
0x000000000047c667 : call r10
0x000000000040093c : call r11
0x000000000044a6a0 : call r12
0x000000000044ea60 : call r14
0x000000000044abe2 : call r15
0x00000000004941e3 : call rax
0x000000000040093d : call rbx
0x000000000041c953 : call rcx
0x000000000044abe3 : call rdi
0x000000000040e8a7 : call rdx
0x000000000044ea61 : call rsi
0x000000000044a6a1 : call rsp
0x0000000000428e07 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048c544 : cdq ; add rax, r9 ; jmp rax
0x0000000000494ef9 : cdq ; cli ; jmp rax
0x00000000004a8d80 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000040fa73 : cdq ; ret 3
0x000000000040706b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000047d6f9 : clc ; add al, 0x75 ; retf
0x0000000000477ee4 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000469cf1 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041cfaa : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cc07 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e633 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d4ad : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004885ef : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000044fcc2 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042b127 : clc ; add rax, rcx ; ret
0x000000000042b654 : clc ; add rax, rcx ; vzeroupper ; ret
0x0000000000493d5a : clc ; call qword ptr [rax + 0x20fff8f5]
0x00000000004af472 : clc ; call qword ptr [rax]
0x0000000000493d56 : clc ; call rax
0x0000000000495019 : clc ; cli ; call qword ptr [rax]
0x0000000000495011 : clc ; cli ; call rax
0x000000000049500d : clc ; cli ; inc eax ; clc ; cli ; call rax
0x0000000000495015 : clc ; cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000422d48 : clc ; cmovne rax, rcx ; ret
0x000000000042d799 : clc ; cmp rcx, rax ; jne 0x42d7cb ; xor eax, eax ; ret
0x000000000042d798 : clc ; cmp rcx, rax ; jne 0x42d7cc ; xor eax, eax ; ret
0x0000000000476906 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047f8b0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423710 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000472820 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047fad4 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048ca2e : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401a5c : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046fd39 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000004111fd : clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000478a0b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004920f5 : clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004619c6 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045f96e : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000045ed23 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000459792 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000044815a : clc ; jg 0x448129 ; mov eax, 0x80 ; pop rbx ; ret
0x00000000004481b6 : clc ; jg 0x4481b6 ; int1 ; mov eax, eax ; ret
0x0000000000454037 : clc ; jg 0x453fc6 ; ret 0xdb76
0x0000000000454037 : clc ; jg 0x453fca ; ret 0xdb76
0x0000000000493d5e : clc ; jmp qword ptr [rax]
0x00000000004af486 : clc ; jmp qword ptr [rsi]
0x00000000004608cf : clc ; jmp rax
0x000000000048d4d3 : clc ; leave ; ret
0x00000000004a79e2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004128d4 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f297 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fc07 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b57 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fe07 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ac7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430007 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a37 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2b3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000447c9e : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000447e1d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004384ec : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000446f2a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d651 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046f390 : clc ; mov rdx, r8 ; jmp 0x46f362
0x00000000004128ec : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ab16 : clc ; pop rbp ; pop r12 ; ret
0x00000000004718d7 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000475483 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000490ee8 : clc ; push rbx ; ret
0x0000000000412905 : clc ; ret
0x000000000041050f : clc ; ret 0x2a
0x00000000004adfa8 : clc ; retf
0x000000000043ec74 : clc ; rol ch, 1 ; jns 0x43ec55 ; retf 0xead3
0x000000000043edc4 : clc ; rol ch, 1 ; jns 0x43eda5 ; retf 0xead3
0x000000000043ef14 : clc ; rol ch, 1 ; jns 0x43eef5 ; retf 0xead3
0x000000000043f064 : clc ; rol ch, 1 ; jns 0x43f045 ; retf 0xead3
0x000000000043f1b4 : clc ; rol ch, 1 ; jns 0x43f195 ; retf 0xead3
0x000000000043f304 : clc ; rol ch, 1 ; jns 0x43f2e5 ; retf 0xead3
0x000000000043f454 : clc ; rol ch, 1 ; jns 0x43f435 ; retf 0xead3
0x000000000043f5a4 : clc ; rol ch, 1 ; jns 0x43f585 ; retf 0xead3
0x000000000043f6f4 : clc ; rol ch, 1 ; jns 0x43f6d5 ; retf 0xead3
0x000000000043f844 : clc ; rol ch, 1 ; jns 0x43f825 ; retf 0xead3
0x000000000043f994 : clc ; rol ch, 1 ; jns 0x43f975 ; retf 0xead3
0x000000000043fae4 : clc ; rol ch, 1 ; jns 0x43fac5 ; retf 0xead3
0x000000000043fc34 : clc ; rol ch, 1 ; jns 0x43fc15 ; retf 0xead3
0x000000000043fd84 : clc ; rol ch, 1 ; jns 0x43fd65 ; retf 0xead3
0x000000000043fed4 : clc ; rol ch, 1 ; jns 0x43feb5 ; retf 0xead3
0x0000000000482d8a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047451f : clc ; shr rax, 2 ; ret
0x00000000004819fd : clc ; std ; jbe 0x481a0d ; ret
0x00000000004ac0a8 : clc ; sub esi, esi ; jmp qword ptr [rax]
0x0000000000485221 : clc ; sub rax, r8 ; ret
0x0000000000440b96 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446b3b : clc ; sub rax, rsi ; ret
0x000000000042b7cb : clc ; vzeroupper ; ret
0x00000000004480bf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004121ae : cld ; add rdx, rcx ; jmp 0x4121c4
0x00000000004b3ef6 : cld ; call rdx
0x00000000004b0839 : cld ; hlt ; jmp qword ptr [rbx]
0x000000000047bbee : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000044819c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044810a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b2cd2 : cld ; jmp qword ptr [rax]
0x00000000004b2cea : cld ; jmp qword ptr [rbx]
0x00000000004b30ea : cld ; jmp qword ptr [rcx]
0x00000000004b3fc2 : cld ; jmp qword ptr [rsi]
0x00000000004b2c8a : cld ; jmp rdx
0x00000000004a8765 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a8734 ; retf
0x000000000042fa22 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fc25 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fe25 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430025 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447ca6 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000447e28 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004384fe : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000446f38 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000446f32 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f656 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ce6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f836 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c66 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fa16 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434be6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f476 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d66 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000449ca7 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004944cc : cld ; or eax, 0xda2fffa ; cli ; call qword ptr [rdx]
0x00000000004b0bf8 : cld ; push rsp ; add byte ptr [rax], al ; in al, 3 ; cli ; jmp qword ptr [rdx]
0x000000000042f301 : cld ; ret
0x0000000000409530 : cld ; retf 0xffff
0x00000000004a6e83 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004b2ad9 : cld ; sti ; jmp qword ptr [rbx]
0x00000000004a6e96 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004477c2 : cld ; vzeroupper ; ret
0x00000000004155a1 : cli ; add ch, al ; pop rax ; ret
0x00000000004156a8 : cli ; add ch, al ; push rcx ; ret 0xffff
0x0000000000469245 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000411562 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000447c91 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x447ca1 ; mov byte ptr [rdi], cl ; ret
0x0000000000446c8b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043851c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448d7e : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448ddc : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004a8e79 : cli ; call 0xffffffffab585971
0x0000000000494676 : cli ; call qword ptr [rax + 0x10fffa06]
0x000000000049466e : cli ; call qword ptr [rax + 0x10fffa07]
0x0000000000494666 : cli ; call qword ptr [rax + 0x10fffa08]
0x000000000049465e : cli ; call qword ptr [rax + 0x10fffa09]
0x0000000000494dd2 : cli ; call qword ptr [rax + 0x10fffa0d]
0x0000000000494d96 : cli ; call qword ptr [rax + 0x10fffa0e]
0x0000000000494dda : cli ; call qword ptr [rax + 0x10fffa10]
0x0000000000494d9e : cli ; call qword ptr [rax + 0x10fffa11]
0x0000000000494de2 : cli ; call qword ptr [rax + 0x10fffa13]
0x0000000000494da6 : cli ; call qword ptr [rax + 0x10fffa14]
0x0000000000494dea : cli ; call qword ptr [rax + 0x10fffa16]
0x0000000000494dae : cli ; call qword ptr [rax + 0x10fffa17]
0x0000000000494df2 : cli ; call qword ptr [rax + 0x10fffa19]
0x0000000000494db6 : cli ; call qword ptr [rax + 0x10fffa1a]
0x0000000000494dfa : cli ; call qword ptr [rax + 0x10fffa1c]
0x0000000000494dbe : cli ; call qword ptr [rax + 0x10fffa1d]
0x0000000000494e02 : cli ; call qword ptr [rax + 0x10fffa1f]
0x0000000000494dc6 : cli ; call qword ptr [rax + 0x10fffa20]
0x0000000000494446 : cli ; call qword ptr [rax + 0x20fffa0e]
0x000000000049461e : cli ; call qword ptr [rax + 0x20fffa12]
0x000000000049493e : cli ; call qword ptr [rax + 0x20fffa35]
0x0000000000494b16 : cli ; call qword ptr [rax + 0x20fffa39]
0x0000000000494f46 : cli ; call qword ptr [rax + 0x20fffaaf]
0x0000000000494426 : cli ; call qword ptr [rax]
0x00000000004b1942 : cli ; call qword ptr [rbx]
0x00000000004b1642 : cli ; call qword ptr [rcx]
0x00000000004b0e5a : cli ; call qword ptr [rdi]
0x00000000004944f2 : cli ; call qword ptr [rdx + 0x22fffa10]
0x00000000004949ea : cli ; call qword ptr [rdx + 0x22fffa37]
0x00000000004944d2 : cli ; call qword ptr [rdx]
0x0000000000494986 : cli ; call qword ptr [rsi + 0x26fffa34]
0x000000000049446e : cli ; call qword ptr [rsi]
0x0000000000494416 : cli ; call rax
0x00000000004b0dc6 : cli ; call rcx
0x0000000000494502 : cli ; call rdx
0x000000000049445e : cli ; call rsi
0x00000000004945ca : cli ; call rsp
0x000000000044c255 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045d47e : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f450 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045c435 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471b27 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000049460a : cli ; dec edx ; or eax, 0xd70fffa ; cli ; jmp rax
0x000000000049462a : cli ; inc dword ptr [rax + 0x11] ; cli ; call rax
0x0000000000494412 : cli ; inc dword ptr [rax + 0x14] ; cli ; call rax
0x000000000049494a : cli ; inc dword ptr [rax + 0x34] ; cli ; call rsi
0x0000000000494b22 : cli ; inc dword ptr [rax + 0x38] ; cli ; call rax
0x0000000000494f12 : cli ; inc dword ptr [rax - 0x2f000562] ; lahf ; cli ; jmp qword ptr [rax]
0x0000000000494f42 : cli ; inc dword ptr [rax - 0x52] ; cli ; call qword ptr [rax + 0x20fffaaf]
0x000000000049461a : cli ; inc dword ptr [rax] ; adc edi, edx ; call qword ptr [rax + 0x20fffa12]
0x0000000000494886 : cli ; inc dword ptr [rax] ; add al, 0xfa ; push qword ptr [rax + 3] ; cli ; call qword ptr [rax]
0x0000000000494682 : cli ; inc dword ptr [rax] ; add eax, 0x470fffa ; cli ; jmp rax
0x000000000049493a : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax + 0x20fffa35]
0x0000000000494f62 : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494f9e : cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000494b12 : cli ; inc dword ptr [rax] ; cmp bh, dl ; call qword ptr [rax + 0x20fffa39]
0x0000000000494fbe : cli ; inc dword ptr [rax] ; hlt ; cli ; jmp qword ptr [rax]
0x0000000000494e6a : cli ; inc dword ptr [rax] ; push rsi ; cli ; call qword ptr [rax]
0x0000000000494abe : cli ; inc dword ptr [rbp + rsi - 6] ; call rsp
0x000000000045978f : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004524ed : cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004557d5 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004949f6 : cli ; inc dword ptr [rdx + 0x36] ; cli ; call rdx
0x00000000004944fe : cli ; inc dword ptr [rdx + 0xf] ; cli ; call rdx
0x00000000004944ee : cli ; inc dword ptr [rdx] ; adc edx, edi ; call qword ptr [rdx + 0x22fffa10]
0x00000000004949e6 : cli ; inc dword ptr [rdx] ; cmp dl, bh ; call qword ptr [rdx + 0x22fffa37]
0x000000000049445a : cli ; inc dword ptr [rsi + 0x13] ; cli ; call rsi
0x0000000000494952 : cli ; inc dword ptr [rsi + 0x3a] ; cli ; call rsi
0x00000000004945c6 : cli ; inc dword ptr [rsi + rcx - 6] ; call rsp
0x0000000000494982 : cli ; inc dword ptr [rsi] ; xor eax, 0x3496fffa ; cli ; jmp qword ptr [rsi]
0x000000000049500e : cli ; inc eax ; clc ; cli ; call rax
0x0000000000494e5a : cli ; inc eax ; cli ; call rax
0x0000000000494f92 : cli ; inc eax ; cli ; jmp rax
0x0000000000494fe6 : cli ; inc eax ; idiv edx ; call rax
0x0000000000494f52 : cli ; inc eax ; int1 ; cli ; call rax
0x000000000049464a : cli ; inc eax ; or eax, 0x360fffa ; cli ; jmp qword ptr [rax]
0x00000000004384d7 : cli ; jg 0x4384ea ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446c56 : cli ; jg 0x446c68 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447289 : cli ; jg 0x44729c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004476f1 : cli ; jg 0x447704 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447e12 : cli ; jg 0x447e22 ; vzeroupper ; ret
0x0000000000447fe8 : cli ; jg 0x447ff8 ; vzeroupper ; ret
0x0000000000494842 : cli ; jmp qword ptr [rax + 0x10fffa04]
0x0000000000494656 : cli ; jmp qword ptr [rax + 0x10fffa0a]
0x000000000049487a : cli ; jmp qword ptr [rax + 0x20fffa05]
0x0000000000494872 : cli ; jmp qword ptr [rax + 0x20fffa06]
0x000000000049486a : cli ; jmp qword ptr [rax + 0x20fffa07]
0x0000000000494862 : cli ; jmp qword ptr [rax + 0x20fffa08]
0x000000000049485a : cli ; jmp qword ptr [rax + 0x20fffa09]
0x000000000049444a : cli ; jmp qword ptr [rax]
0x00000000004944ce : cli ; jmp qword ptr [rdx + 0x12fffa0d]
0x00000000004944f6 : cli ; jmp qword ptr [rdx]
0x0000000000494452 : cli ; jmp qword ptr [rsi]
0x000000000049443a : cli ; jmp rax
0x000000000040d254 : cli ; jmp rdx
0x0000000000494482 : cli ; jmp rsi
0x00000000004945ae : cli ; jmp rsp
0x000000000049478a : cli ; lcall [rsi + 0x2efffa03] ; add edi, edx ; call rsp
0x0000000000494bce : cli ; ljmp [rcx + rbp - 6] ; call qword ptr [rdx]
0x0000000000494d0a : cli ; ljmp [rdx + 0x3afffa29] ; sub edx, edi ; jmp rax
0x000000000049478e : cli ; ljmp [rsi] ; add edi, edx ; call rsp
0x0000000000454e4c : cli ; loopne 0x454ec9 ; jae 0x454ddf ; retf 0xb941
0x000000000042fe28 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004039e9 : cli ; mov rdi, rax ; call 0x40043e
0x000000000040d536 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042bad8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042a586 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000461122 : cli ; pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a9301 : cli ; push 0x6e ; ja 0x4a928e ; ret 0x48f
0x0000000000494626 : cli ; push qword ptr [rax + 0x40fffa11] ; adc edx, edi ; call rax
0x0000000000494946 : cli ; push qword ptr [rax + 0x40fffa34] ; xor al, 0xfa ; call rsi
0x0000000000494b1e : cli ; push qword ptr [rax + 0x40fffa38] ; cmp dl, bh ; call rax
0x000000000049460e : cli ; push qword ptr [rax + 0xd] ; cli ; jmp rax
0x000000000049488a : cli ; push qword ptr [rax + 3] ; cli ; call qword ptr [rax]
0x0000000000494686 : cli ; push qword ptr [rax + 4] ; cli ; jmp rax
0x0000000000494c96 : cli ; push qword ptr [rax + rsi - 6] ; jmp rsp
0x000000000049500a : cli ; push qword ptr [rax - 0x3f000508] ; clc ; cli ; call rax
0x0000000000494f8e : cli ; push qword ptr [rax - 0x3f00050e] ; cli ; jmp rax
0x0000000000494f4e : cli ; push qword ptr [rax - 0x3f00050f] ; int1 ; cli ; call rax
0x0000000000494e56 : cli ; push qword ptr [rax - 0x3f0005b5] ; cli ; call rax
0x0000000000494ef2 : cli ; push qword ptr [rax - 0x69] ; cli ; call qword ptr [rax]
0x0000000000494ed2 : cli ; push qword ptr [rax - 0x76] ; cli ; call qword ptr [rax]
0x000000000049483e : cli ; push qword ptr [rax] ; add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x0000000000494856 : cli ; push qword ptr [rax] ; or bh, dl ; jmp qword ptr [rax + 0x20fffa09]
0x0000000000494e76 : cli ; push qword ptr [rax] ; pop rsp ; cli ; call rax
0x0000000000494d4e : cli ; push qword ptr [rax] ; sub edx, edi ; call rax
0x0000000000494eea : cli ; push qword ptr [rax] ; xchg eax, esp ; cli ; call rax
0x0000000000494eca : cli ; push qword ptr [rax] ; xchg edx, edi ; call rax
0x0000000000494aba : cli ; push qword ptr [rbp + rsi + 0x3544fffa] ; cli ; call rsp
0x00000000004949f2 : cli ; push qword ptr [rdx + 0x42fffa36] ; cli ; call rdx
0x00000000004946d6 : cli ; push qword ptr [rdx + 0xa] ; cli ; jmp rdx
0x0000000000494456 : cli ; push qword ptr [rsi + 0x46fffa13] ; adc edi, edx ; call rsi
0x00000000004945c2 : cli ; push qword ptr [rsi + rcx + 0xe44fffa] ; cli ; call rsp
0x0000000000495016 : cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000494f9a : cli ; push rax ; cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000494ff2 : cli ; push rax ; idiv edx ; call qword ptr [rax]
0x0000000000494f5e : cli ; push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494d8e : cli ; push rax ; or edi, edx ; call qword ptr [rax]
0x0000000000494636 : cli ; push rax ; psubd mm7, mm7 ; or byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x0000000000494e66 : cli ; push rax ; push rbx ; cli ; inc dword ptr [rax] ; push rsi ; cli ; call qword ptr [rax]
0x0000000000495036 : cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x00000000004946d2 : cli ; push rdx ; or bh, dl ; push qword ptr [rdx + 0xa] ; cli ; jmp rdx
0x0000000000494c92 : cli ; push rsp ; xor dl, bh ; push qword ptr [rax + rsi - 6] ; jmp rsp
0x0000000000447bc9 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7da5 : cli ; ret 0xac65
0x000000000044bd0b : cli ; setae al ; ret
0x00000000004b0a41 : cli ; std ; jmp qword ptr [rdx]
0x00000000004a7c50 : cli ; test bh, dl ; retf 0xdf7f
0x00000000004409c9 : cli ; test rdx, rdx ; je 0x4409e9 ; bsf rax, rdx ; ret
0x00000000004737a8 : cli ; test rdx, rdx ; je 0x4737d9 ; bsf rax, rdx ; ret
0x00000000004a69ea : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000044d363 : cmc ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x00000000004abb8a : cmc ; call qword ptr [rdx]
0x00000000004abc2a : cmc ; call rax
0x00000000004abb9e : cmc ; call rsp
0x00000000004af4e9 : cmc ; clc ; call qword ptr [rax]
0x0000000000493d5d : cmc ; clc ; jmp qword ptr [rax]
0x00000000004524ec : cmc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004abd42 : cmc ; jmp qword ptr [rax]
0x00000000004a9729 : cmc ; mov ch, 0xab ; ret
0x0000000000434c6a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f6ae : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000046fdf7 : cmc ; mov rbp, rax ; jmp 0x46fdc4
0x0000000000446013 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a65d7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004674f3 : cmc ; ret 3
0x00000000004b1819 : cmc ; std ; call rdx
0x0000000000446017 : cmc ; sub eax, edx ; ret
0x00000000004a8d65 : cmc ; xlatb ; ret 0x4e27
0x0000000000418fc9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000418fc8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004480e4 : cmove eax, ecx ; pop rbx ; ret
0x0000000000471e81 : cmove eax, ecx ; ret
0x0000000000423713 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000004480ac : cmove eax, edx ; pop rbx ; ret
0x000000000042384f : cmove eax, edx ; ret
0x0000000000414a1f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e738 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000471e80 : cmove r8, rcx ; ret
0x00000000004480e3 : cmove rax, rcx ; pop rbx ; ret
0x0000000000423712 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000004480ab : cmove rax, rdx ; pop rbx ; ret
0x000000000042384e : cmove rax, rdx ; ret
0x000000000047e737 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000041640b : cmovg eax, ecx ; test rdx, rdx ; jne 0x416409 ; ret
0x000000000047099b : cmovg eax, ecx ; test rdx, rdx ; jne 0x470999 ; ret
0x0000000000422d4a : cmovne eax, ecx ; ret
0x000000000044813c : cmovne eax, edx ; pop rbx ; ret
0x000000000042374f : cmovne eax, edx ; ret
0x0000000000440554 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000422d49 : cmovne rax, rcx ; ret
0x000000000044813b : cmovne rax, rdx ; pop rbx ; ret
0x000000000042374e : cmovne rax, rdx ; ret
0x0000000000440553 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000042b0e8 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x0000000000450b4c : cmovs eax, edx ; ret
0x000000000048db48 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000471be8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x471be9 ; lea eax, [rdx + rdi] ; ret
0x000000000044808e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000448120 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000446b28 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004af2fd : cmp al, 0 ; add al, ah ; retf 0xfff7
0x00000000004b0dc4 : cmp al, 0x17 ; cli ; call rcx
0x0000000000488380 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000455972 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044f802 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004165d7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004165c6 : cmp al, 0x24 ; call 0x412854
0x000000000048dc9d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004ae038 : cmp al, 0x29 ; add byte ptr [rax], al ; hlt ; sal esi, cl ; call qword ptr [rax]
0x000000000048d16c : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d0fd : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a79e0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a68e3 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004a93cb : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000045a361 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040d539 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000044b5ad : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004464d6 : cmp al, byte ptr [rsi - 1] ; jne 0x4464fc ; xor eax, eax ; ret
0x000000000042b346 : cmp al, dh ; ret
0x000000000042b345 : cmp al, r14b ; ret
0x000000000048aee6 : cmp bh, 0x10 ; jne 0x48af0f ; xor eax, eax ; ret
0x000000000048e086 : cmp bh, 0x10 ; jne 0x48e0a5 ; xor eax, eax ; ret
0x000000000048eee6 : cmp bh, 0x10 ; jne 0x48ef05 ; xor eax, eax ; ret
0x000000000048f956 : cmp bh, 0x10 ; jne 0x48f97f ; xor eax, eax ; ret
0x000000000048e06c : cmp bh, 0x30 ; jne 0x48e0a1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048eecc : cmp bh, 0x30 ; jne 0x48ef01 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000494b15 : cmp bh, dl ; call qword ptr [rax + 0x20fffa39]
0x0000000000494955 : cmp bh, dl ; call rsi
0x0000000000410942 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004122ff : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000476d2b : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000045e647 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000412da9 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040167b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000048280e : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042b387 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000470505 : cmp byte ptr [rax + 1], cl ; ret
0x000000000046ff90 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045859f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045afc7 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000451198 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045b144 : cmp byte ptr [rax - 0x75], cl ; jl 0x45b175 ; and byte ptr [rax + 1], cl ; ret
0x0000000000410943 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000047e159 : cmp byte ptr [rax - 0x77], cl ; retf
0x00000000004111d0 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x000000000046fd36 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000452aa4 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042b376 : cmp byte ptr [rax], ah ; ret
0x0000000000416a43 : cmp byte ptr [rax], al ; je 0x416a55 ; ret
0x000000000048d06f : cmp byte ptr [rax], al ; je 0x48d098 ; add rsp, 0x18 ; ret
0x0000000000446ac2 : cmp byte ptr [rax], al ; retf 0xf66
0x00000000004400f0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042b366 : cmp byte ptr [rax], dl ; ret
0x000000000042b365 : cmp byte ptr [rax], r10b ; ret
0x000000000042b375 : cmp byte ptr [rax], r12b ; ret
0x00000000004400ef : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004b3e29 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b3e5d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b3df5 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048ab88 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040da86 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004160c0 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004acb34 : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x00000000004b5a34 : cmp byte ptr [rbx - 0x65d80000], ah ; std ; call qword ptr [rdx]
0x0000000000471910 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d16b : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d17e ; mov qword ptr [rax], rdx ; ret
0x0000000000403f3b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x00000000004582c7 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000480026 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000049491c : cmp byte ptr [rcx], 0xfa ; call qword ptr [rax]
0x00000000004491b1 : cmp byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004b0834 : cmp byte ptr [rcx], dl ; add bh, ch ; cld ; hlt ; jmp qword ptr [rbx]
0x0000000000416a08 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042cc6d : cmp byte ptr [rdi], dl ; ret
0x000000000042d780 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d769 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d752 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c20e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d0fc : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d125 ; mov rax, qword ptr [rax] ; ret
0x0000000000494d10 : cmp ch, byte ptr [rcx] ; cli ; jmp rax
0x000000000048c6a4 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000488c62 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042de51 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042dfa1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042e0f1 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042e241 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042e391 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042e4e1 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042e631 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042e781 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042e8d1 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042ea21 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042eb71 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000042ecc1 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000042ee11 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000042ef61 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000042f0b1 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000043308a : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043320a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x000000000043338a : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043350a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x000000000043368a : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043380a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x000000000043398a : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000433b0a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000433c8a : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433e0a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000433f8a : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043410a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000043428a : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043440a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x000000000043458a : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004a97a6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004047f7 : cmp cl, ch ; ret 0xfffb
0x0000000000440551 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000447fca : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000048aee5 : cmp dil, 0x10 ; jne 0x48af10 ; xor eax, eax ; ret
0x000000000048e085 : cmp dil, 0x10 ; jne 0x48e0a6 ; xor eax, eax ; ret
0x000000000048eee5 : cmp dil, 0x10 ; jne 0x48ef06 ; xor eax, eax ; ret
0x000000000048f955 : cmp dil, 0x10 ; jne 0x48f980 ; xor eax, eax ; ret
0x0000000000447c90 : cmp dl, 1 ; ja 0x447cb3 ; jb 0x447ca2 ; mov byte ptr [rdi], cl ; ret
0x000000000043851b : cmp dl, 1 ; jb 0x43852d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446c8a : cmp dl, 1 ; jb 0x446c98 ; mov byte ptr [rdi], cl ; ret
0x0000000000422db5 : cmp dl, al ; jne 0x422da8 ; sub rax, 0x10 ; ret
0x00000000004949e9 : cmp dl, bh ; call qword ptr [rdx + 0x22fffa37]
0x0000000000494965 : cmp dl, bh ; call qword ptr [rsi]
0x0000000000494b25 : cmp dl, bh ; call rax
0x0000000000494b21 : cmp dl, bh ; inc dword ptr [rax + 0x38] ; cli ; call rax
0x0000000000494aa5 : cmp dl, bh ; jmp rsp
0x0000000000494250 : cmp dl, bl ; stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x0000000000494b24 : cmp dl, dil ; call rax
0x0000000000422db4 : cmp dl, r8b ; jne 0x422da9 ; sub rax, 0x10 ; ret
0x00000000004718b8 : cmp dword ptr [rax + 0x30], 0 ; je 0x4718c7 ; ret
0x0000000000429c67 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a447 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040ea31 : cmp dword ptr [rax - 0x39], ecx ; ret
0x00000000004347a8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000488f0d : cmp dword ptr [rbx], esp ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000416a41 : cmp dword ptr [rdi + 0x38], 0 ; je 0x416a57 ; ret
0x0000000000424551 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000045e733 : cmp dword ptr [rip + 0x39480001], ebx ; ret
0x000000000047f8af : cmp eax, -1 ; cmove rax, rdx ; ret
0x00000000004718d6 : cmp eax, -1 ; je 0x4718e9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004819fc : cmp eax, -3 ; jbe 0x481a0e ; ret
0x0000000000487775 : cmp eax, 0x2317fd ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000460e11 : cmp eax, 0x25590a ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000412852 : cmp eax, 0x2a6750 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040382a : cmp eax, 0x2b5730 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004035df : cmp eax, 0x2b88bc ; call 7
0x0000000000403599 : cmp eax, 0x2b8902 ; call 7
0x00000000004956a1 : cmp eax, 0x3d84fffb ; sti ; call qword ptr [rax]
0x00000000004956e9 : cmp eax, 0x3d94fffb ; sti ; jmp rbx
0x000000000049574d : cmp eax, 0x3deafffb ; sti ; call rsi
0x000000000044a6c2 : cmp eax, 0x7d8b48 ; call r12
0x000000000044c42f : cmp eax, 0x83482f74 ; ret
0x000000000044c256 : cmp eax, 0x83497174 ; ret
0x0000000000473524 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000454e42 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004af481 : cmp eax, 0x967c0000 ; clc ; jmp qword ptr [rsi]
0x00000000004af46d : cmp eax, 0x96800000 ; clc ; call qword ptr [rax]
0x00000000004a6ccb : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004af495 : cmp eax, 0xb8980000 ; clc ; call qword ptr [rax]
0x00000000004af4bd : cmp eax, 0xd9c00000 ; clc ; call qword ptr [rax]
0x00000000004af4e5 : cmp eax, 0xf5480000 ; clc ; call qword ptr [rax]
0x0000000000449566 : cmp eax, 0xfffff000 ; ja 0x449578 ; ret
0x00000000004495b4 : cmp eax, 0xfffff000 ; ja 0x4495c8 ; ret
0x00000000004497bf : cmp eax, 0xfffff000 ; ja 0x449828 ; ret
0x0000000000449855 : cmp eax, 0xfffff000 ; ja 0x449868 ; ret
0x0000000000449892 : cmp eax, 0xfffff000 ; ja 0x4498f8 ; ret
0x0000000000449928 : cmp eax, 0xfffff000 ; ja 0x449940 ; ret
0x0000000000449958 : cmp eax, 0xfffff000 ; ja 0x449970 ; ret
0x0000000000449b62 : cmp eax, 0xfffff000 ; ja 0x449bb0 ; ret
0x0000000000449bd8 : cmp eax, 0xfffff000 ; ja 0x449bf0 ; ret
0x000000000044a331 : cmp eax, 0xfffff000 ; ja 0x44a348 ; ret
0x000000000045af4e : cmp eax, 0xfffff000 ; ja 0x45af68 ; ret
0x0000000000475576 : cmp eax, 0xfffff000 ; ja 0x475588 ; ret
0x00000000004755ca : cmp eax, 0xfffff000 ; ja 0x4755e0 ; ret
0x00000000004494d8 : cmp eax, 0xfffff001 ; jae 0x4494e7 ; ret
0x000000000044a568 : cmp eax, 0xfffff001 ; jae 0x44a577 ; ret
0x000000000044a598 : cmp eax, 0xfffff001 ; jae 0x44a5a7 ; ret
0x000000000044a5c8 : cmp eax, 0xfffff001 ; jae 0x44a5d7 ; ret
0x000000000044bc7b : cmp eax, 0xfffff001 ; jae 0x44bc8a ; ret
0x000000000044bca8 : cmp eax, 0xfffff001 ; jae 0x44bcb7 ; ret
0x00000000004754f8 : cmp eax, 0xfffff001 ; jae 0x475507 ; ret
0x0000000000488528 : cmp eax, 0xfffff001 ; jae 0x488537 ; ret
0x000000000044864b : cmp eax, 2 ; je 0x44865f ; xor eax, eax ; ret
0x000000000044bdea : cmp eax, 4 ; je 0x44bdf5 ; ret
0x00000000004af2b5 : cmp eax, dword ptr [rax] ; add byte ptr [rax], bl ; ret
0x00000000004a8b97 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000046f38b : cmp eax, ecx ; jg 0x46f3a8 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f367
0x0000000000446adf : cmp eax, ecx ; jle 0x446b1f ; movsxd rax, ecx ; ret
0x00000000004464f3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041874b : cmp eax, edx ; jae 0x418777 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487ca4 : cmp eax, esi ; je 0x487cb5 ; ret
0x0000000000462ecf : cmp eax, esp ; je 0x462d06 ; jmp 0x462ea4
0x000000000046f38a : cmp eax, r9d ; jg 0x46f3a9 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f368
0x00000000004564ec : cmp ebp, ebx ; jb 0x45655e ; mov rdx, rax ; jmp 0x4564b5
0x000000000044bd86 : cmp ebx, 0xa ; je 0x44bd91 ; ret
0x000000000044d39e : cmp ebx, eax ; setne dl ; jmp 0x44d38a
0x0000000000473c45 : cmp ecx, 0xc00 ; je 0x473c59 ; ret
0x000000000044bfb1 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44bfa6 ; ret
0x00000000004870de : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x4870ef ; add rdx, rax ; jmp 0x4870f8
0x00000000004824c8 : cmp ecx, dword ptr [rax - 0x77] ; retf 0x2fe8
0x000000000044e8b2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000041ec04 : cmp ecx, dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call rax
0x000000000047f8f8 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f8a8 ; xor eax, eax ; ret
0x0000000000471e7e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d79b : cmp ecx, eax ; jne 0x42d7c9 ; xor eax, eax ; ret
0x000000000047e688 : cmp ecx, eax ; jne 0x47e632 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000484222 : cmp ecx, ecx ; ret
0x0000000000471bea : cmp ecx, esi ; jne 0x471be7 ; lea eax, [rdx + rdi] ; ret
0x000000000047e676 : cmp ecx, esi ; jne 0x47e655 ; ret
0x00000000004900b1 : cmp edi, dword ptr [rdx + 0x5be17500] ; ret
0x0000000000465e40 : cmp edi, eax ; ja 0x465e27 ; mov eax, r9d ; ret
0x00000000004758ee : cmp edi, edx ; ja 0x47591d ; ret
0x0000000000446e92 : cmp edi, edx ; jb 0x446e9f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000465e3f : cmp edi, r8d ; ja 0x465e28 ; mov eax, r9d ; ret
0x000000000041f5fa : cmp edx, eax ; jne 0x41f5c5 ; ret
0x0000000000447c7b : cmp edx, ecx ; jne 0x447c68 ; ret
0x0000000000447de2 : cmp edx, ecx ; jne 0x447dce ; vzeroupper ; ret
0x0000000000447fa5 : cmp edx, ecx ; jne 0x447f89 ; vzeroupper ; ret
0x000000000049491d : cmp edx, edi ; call qword ptr [rax]
0x0000000000494b19 : cmp edx, edi ; jmp qword ptr [rax]
0x00000000004949dd : cmp edx, edi ; jmp rdx
0x000000000044bd0a : cmp edx, edi ; setae al ; ret
0x0000000000474356 : cmp edx, esi ; je 0x474367 ; test edx, edx ; jne 0x474359 ; ret
0x0000000000418789 : cmp esi, -1 ; setne al ; neg eax ; ret
0x0000000000458714 : cmp esi, 3 ; je 0x458726 ; ret
0x0000000000447275 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a8d64 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00000000004179aa : cmp esi, ecx ; jne 0x4179a7 ; lea eax, [rdx + rdi] ; ret
0x00000000004718b7 : cmp qword ptr [rax + 0x30], 0 ; je 0x4718c8 ; ret
0x0000000000416a40 : cmp qword ptr [rdi + 0x38], 0 ; je 0x416a58 ; ret
0x000000000044bd85 : cmp r11d, 0xa ; je 0x44bd92 ; ret
0x00000000004564eb : cmp r13, r11 ; jb 0x45655f ; mov rdx, rax ; jmp 0x4564b6
0x0000000000494954 : cmp r15b, dl ; call rsi
0x0000000000449565 : cmp rax, -0x1000 ; ja 0x449579 ; ret
0x00000000004495b3 : cmp rax, -0x1000 ; ja 0x4495c9 ; ret
0x00000000004497be : cmp rax, -0x1000 ; ja 0x449829 ; ret
0x0000000000449854 : cmp rax, -0x1000 ; ja 0x449869 ; ret
0x0000000000449891 : cmp rax, -0x1000 ; ja 0x4498f9 ; ret
0x0000000000449927 : cmp rax, -0x1000 ; ja 0x449941 ; ret
0x0000000000449957 : cmp rax, -0x1000 ; ja 0x449971 ; ret
0x0000000000449b61 : cmp rax, -0x1000 ; ja 0x449bb1 ; ret
0x0000000000449bd7 : cmp rax, -0x1000 ; ja 0x449bf1 ; ret
0x000000000044a330 : cmp rax, -0x1000 ; ja 0x44a349 ; ret
0x000000000045af4d : cmp rax, -0x1000 ; ja 0x45af69 ; ret
0x0000000000475575 : cmp rax, -0x1000 ; ja 0x475589 ; ret
0x00000000004755c9 : cmp rax, -0x1000 ; ja 0x4755e1 ; ret
0x00000000004494d7 : cmp rax, -0xfff ; jae 0x4494e8 ; ret
0x000000000044a567 : cmp rax, -0xfff ; jae 0x44a578 ; ret
0x000000000044a597 : cmp rax, -0xfff ; jae 0x44a5a8 ; ret
0x000000000044a5c7 : cmp rax, -0xfff ; jae 0x44a5d8 ; ret
0x000000000044bc7a : cmp rax, -0xfff ; jae 0x44bc8b ; ret
0x000000000044bca7 : cmp rax, -0xfff ; jae 0x44bcb8 ; ret
0x00000000004754f7 : cmp rax, -0xfff ; jae 0x475508 ; ret
0x0000000000488527 : cmp rax, -0xfff ; jae 0x488538 ; ret
0x000000000047f8ae : cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004819fb : cmp rax, -3 ; jbe 0x481a0f ; ret
0x000000000041874a : cmp rax, rdx ; jae 0x418778 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487ca3 : cmp rax, rsi ; je 0x487cb6 ; ret
0x000000000044bfb0 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44bfa7 ; ret
0x000000000047f8f7 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47f8a9 ; xor eax, eax ; ret
0x0000000000471e7d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e687 : cmp rcx, r8 ; jne 0x47e633 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042d79a : cmp rcx, rax ; jne 0x42d7ca ; xor eax, eax ; ret
0x0000000000471be9 : cmp rcx, rsi ; jne 0x471be8 ; lea eax, [rdx + rdi] ; ret
0x000000000047e675 : cmp rcx, rsi ; jne 0x47e656 ; ret
0x00000000004758ed : cmp rdi, rdx ; ja 0x47591e ; ret
0x0000000000446e91 : cmp rdi, rdx ; jb 0x446ea0 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041f5f9 : cmp rdx, r8 ; jne 0x41f5c6 ; ret
0x0000000000447c7a : cmp rdx, rcx ; jne 0x447c69 ; ret
0x0000000000447c79 : cmp rdx, rcx ; jne 0x447c6a ; ret
0x0000000000447de1 : cmp rdx, rcx ; jne 0x447dcf ; vzeroupper ; ret
0x0000000000447fa4 : cmp rdx, rcx ; jne 0x447f8a ; vzeroupper ; ret
0x000000000044bd09 : cmp rdx, rdi ; setae al ; ret
0x00000000004179a9 : cmp rsi, rcx ; jne 0x4179a8 ; lea eax, [rdx + rdi] ; ret
0x000000000042d219 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004a6d96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6d62 ; mov ecx, 0x5b92ac50 ; retf
0x000000000043df06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a8eb1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000494235 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rax
0x00000000004b007d : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x000000000041cd9d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x000000000047c9c8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000410879 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004a687f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x00000000004235e5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000494239 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp qword ptr [rax]
0x0000000000400b19 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000048af60 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a03c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048aff5 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000041087a : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000045169f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000491ffc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049175c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b1818 : cwde ; cmc ; std ; call rdx
0x00000000004af494 : cwde ; cmp eax, 0xb8980000 ; clc ; call qword ptr [rax]
0x00000000004596b4 : cwde ; fiadd dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004afcd1 : cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b4e88 : cwde ; std ; jmp qword ptr [rcx]
0x00000000004af908 : cwde ; test ecx, edi ; call qword ptr [rbx]
0x00000000004421f1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000004421f2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004477bd : dec byte ptr [rax + 0x7f] ; jl 0x4477e2 ; cld ; vzeroupper ; ret
0x000000000045dc79 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x0000000000480cff : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x9de8
0x00000000004726d0 : dec byte ptr [rax - 0x77] ; ret
0x0000000000480c9d : dec byte ptr [rax - 0x7d] ; ret
0x000000000044a812 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e3d6 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044aea3 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x000000000040df87 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004819f9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x481a11 ; ret
0x0000000000456893 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000041442e : dec dword ptr [rax + 0x21] ; retf 0x2148
0x000000000041120d : dec dword ptr [rax + 0x29] ; ret
0x0000000000442332 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004829c1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482b01 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041e685 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000047630b : dec dword ptr [rax + 0x39] ; ret
0x000000000041303d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004891c9 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041da25 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041d9f7 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x00000000004846be : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x00000000004956bb : dec dword ptr [rax + 0x5afffb3e] ; sti ; call qword ptr [rdx]
0x000000000045edac : dec dword ptr [rax + 0x63] ; retf
0x00000000004a4df7 : dec dword ptr [rax + 0x7e] ; std ; jmp rax
0x000000000046eda2 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x00000000004734b9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047f8b1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423711 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473c69 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045afcb : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000472821 : dec dword ptr [rax + 1] ; ret
0x0000000000402ff3 : dec dword ptr [rax - 0x39] ; ret
0x000000000044945f : dec dword ptr [rax - 0x39] ; ret 0
0x0000000000449404 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045dce0 : dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000449377 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000468976 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004496f5 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004492cc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000048bd0f : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x00000000004567a4 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047fad5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041ead8 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c202 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044f04c : dec dword ptr [rax - 0x75] ; jne 0x44efe6 ; call rsi
0x000000000046918b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048ca2f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044aaa5 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000481c3c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000041f784 : dec dword ptr [rax - 0x77] ; add eax, 0x29a0d4 ; ret
0x000000000048a3b7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f451 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000401a5d : dec dword ptr [rax - 0x77] ; ret
0x00000000004758de : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000041ef7f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000046dcf6 : dec dword ptr [rax - 0x77] ; ret 0x29e8
0x000000000042432b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000047583d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041ecfc : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000423687 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045adf2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046d988 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x00000000004491f6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047866c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000423da6 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044a525 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x0000000000449351 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000047cc87 : dec dword ptr [rax - 0x77] ; ret 0xa8e8
0x00000000004567bd : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044933d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x00000000004241b8 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046ba99 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000475e1c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000046fd3a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040580f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000004111fe : dec dword ptr [rax - 0x77] ; retf
0x0000000000477e0c : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x0000000000461f7c : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000410b79 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000477d6d : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000046cedf : dec dword ptr [rax - 0x77] ; retf 0xc148
0x000000000040345c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x0000000000469983 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004819fa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x481a10 ; ret
0x000000000040475f : dec dword ptr [rax - 0x7d] ; ret
0x00000000004545c1 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452cab : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405d5b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000456894 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048dff7 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040d98c : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x0000000000459398 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044b5b0 : dec dword ptr [rax - 0x7f] ; ret
0x00000000004347ac : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000477037 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x000000000048e9f4 : dec dword ptr [rax - 9] ; ret
0x0000000000458515 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000461be4 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x00000000004776b7 : dec dword ptr [rbp + rcx*4 + 0xd] ; retf
0x0000000000467e0d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000045141d : dec dword ptr [rbp - 0x77] ; retf
0x000000000045c436 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423fe3 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400dd4 : dec dword ptr [rbx + 0x2bb02115] ; add bh, dh ; ret 0
0x0000000000422cfd : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x000000000045cb34 : dec dword ptr [rbx + rcx*4 + 0x15] ; in al, dx ; ret 0x25
0x0000000000471b28 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004710bb : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048c628 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x000000000048c646 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x000000000048c6a7 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000460423 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000461b3f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047c329 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048ac9a : dec dword ptr [rcx + 0x39] ; retf
0x000000000048c6b2 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046b2a5 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046ae27 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046d5ce : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x000000000040218d : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000048c67b : dec dword ptr [rcx + 1] ; retf 0x8948
0x000000000048c670 : dec dword ptr [rcx + 9] ; retf 0x8948
0x000000000047c5a5 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x000000000045819a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000044f049 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004582f1 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x00000000004585cf : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045dad6 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000046ce03 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x000000000041be1c : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000004920f6 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000489427 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e24f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000460387 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c670 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x00000000004047a1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047d010 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046adf4 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041c1b6 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000046018f : dec dword ptr [rcx - 0x7d] ; ret
0x000000000046068b : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x0000000000450b4b : dec dword ptr [rdi] ; ret 0x41c3
0x00000000004531af : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000446380 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045f96f : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d76a : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004600f7 : dec dword ptr [rdi] ; xchg byte ptr [rdx], dl ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042128c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000041878b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000049460b : dec edx ; or eax, 0xd70fffa ; cli ; jmp rax
0x00000000004ab637 : dec esi ; adc dh, bh ; jmp rcx
0x000000000045b4e8 : dec qword ptr [r13 - 0x77] ; retf
0x0000000000442331 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000004736a2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047e6d5 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000458711 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x458729 ; ret
0x00000000004511e2 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000465e56 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000046fdf6 : div ebp ; mov rbp, rax ; jmp 0x46fdc5
0x00000000004481b8 : div ecx ; mov eax, eax ; ret
0x000000000044819f : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000480d08 : div edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000046fdf5 : div r13 ; mov rbp, rax ; jmp 0x46fdc6
0x0000000000465e55 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042b877 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047e630 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004464f4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000048374b : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x00000000004421ee : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044232e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004760a0 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042b657 : enter -0x73b, 0x77 ; ret
0x00000000004056c7 : enter -0x76b3, -0x19 ; jmp 0x40569c
0x000000000047e73a : enter -0x76b8, -0x38 ; ret
0x000000000046469f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x000000000042c024 : enter -2, -1 ; ret
0x00000000004943a5 : enter -7, 0x30 ; retf 0xfff9
0x000000000049e03c : enter 0, 0 ; retf
0x00000000004a2090 : enter 0, 0 ; retf 0
0x000000000049f1e8 : enter 0x10, 0 ; retf
0x000000000046f38c : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x46f366
0x0000000000440779 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046bcd9 : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000484511 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000440ade : enter 0x2948, -0x30 ; vzeroupper ; ret
0x0000000000425bdd : enter 0x31c3, -0x40 ; ret
0x0000000000446ae0 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004a951c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000049e9e8 : enter 0xa, 0 ; retf
0x000000000049ede8 : enter 0xd, 0 ; retf
0x000000000042d2c6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440141 : enter 0xf66, -0x15 ; ret
0x00000000004a2290 : enter 1, 0 ; retf 1
0x000000000049f5a0 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a2490 : enter 2, 0 ; retf 2
0x00000000004a2690 : enter 3, 0 ; retf 3
0x00000000004a2890 : enter 4, 0 ; retf 4
0x00000000004a2a90 : enter 5, 0 ; retf 5
0x00000000004a2c90 : enter 6, 0 ; retf 6
0x00000000004a2e90 : enter 7, 0 ; retf 7
0x00000000004a3090 : enter 8, 0 ; retf 8
0x00000000004a3290 : enter 9, 0 ; retf 9
0x000000000048d113 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000040fc88 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f756 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004580c5 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x0000000000465e43 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000042ce11 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048ff24 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8b58 : fcmovb st(0), st(3) ; ret
0x0000000000440bfb : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045eb56 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048d119 : fcomi st(3) ; ret
0x0000000000414733 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000410406 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a3c1 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004a98d9 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000043465c : fcomp dword ptr [rdx + 0x28] ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004b12d8 : fcomp qword ptr [rbx] ; add byte ptr [rsp + rsi*2], al ; cli ; call qword ptr [rdx]
0x00000000004a7b40 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000488418 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004884ff : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004b2ad4 : fdiv dword ptr [rbx] ; add al, cl ; cld ; sti ; jmp qword ptr [rbx]
0x000000000047281f : fdiv st(0), st(0) ; dec dword ptr [rax + 1] ; ret
0x0000000000494319 : fdiv st(1), st(0) ; call rax
0x0000000000494255 : fdiv st(1), st(0) ; jmp rax
0x000000000048ad69 : fdiv st(3) ; ret
0x0000000000494371 : fdivr st(1) ; inc dword ptr [rax - 0x26] ; stc ; call qword ptr [rax]
0x00000000004a6e95 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004464f8 : fdivr st(7) ; ret
0x0000000000400591 : fiadd dword ptr [rax] ; test dl, dl ; jne 0x4005a0 ; ret
0x000000000040efe8 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000471263 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x00000000004596b5 : fiadd dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000041248a : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000004a9726 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000488075 : fidivr dword ptr [rax + 1] ; ret
0x0000000000424641 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000464c32 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x0000000000424642 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000419c2c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000455359 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000480cf7 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x00000000004657cd : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000486764 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x0000000000465792 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000042a3a6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046c14d : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000404984 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x0000000000450cef : fimul word ptr [rax + 1] ; ret
0x000000000048439c : fimul word ptr [rbp + 0x11] ; retf
0x000000000048435e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4843b8
0x000000000048817e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4881d8
0x00000000004219e1 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41dc26
0x00000000004498bf : fistp qword ptr [rax + 1] ; syscall
0x000000000041666e : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000470d90 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000048589e : fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x4858bc
0x0000000000458927 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000483351 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046661c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f4c6 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000477f3e : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c540 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000048336b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000455037 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d5e4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000420e7b : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405d7e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000457c8a : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000480d02 : fisttp word ptr [rax - 0x77] ; ret 0x9de8
0x00000000004781f3 : fisttp word ptr [rax - 0x7d] ; in al, dx ; or al, ch ; retf
0x00000000004018c3 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000004833ef : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000449b7d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x00000000004239ed : fisttp word ptr [rcx + rcx*4 + 0x44] ; and al, 0x18 ; call 0x400480
0x000000000043f23d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042d1e1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cee1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041b9bf : fisubr word ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000483664 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7b81 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004734f2 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x0000000000473552 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b289 : fldenv [rsi + 0xf] ; je 0x42b2e6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b567 : fldenv [rsi + 0xf] ; je 0x42b5c4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d261 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b181 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000454d43 : fldl2t ; retf 0xfffd
0x000000000046863c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000484404 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041ad2f : fmul dword ptr [rax + 0x39] ; ret
0x00000000004467c7 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000412108 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e061 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489974 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044c47c : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000047703a : fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x0000000000469020 : fmul dword ptr [rdi] ; ret
0x0000000000486c02 : fmul qword ptr [rax - 0x77] ; ret
0x000000000048efae : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x0000000000424999 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438ebf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000045f74f : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457e88 : fmul qword ptr [rdi] ; ret 0xc389
0x00000000004734f0 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000004244ff : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004564ed : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x4564b4
0x00000000004a93ca : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dad9 : fpatan ; ret
0x00000000004af4c1 : fprem ; call qword ptr [rax]
0x000000000042cfe1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a7867 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7be0 : fstp st(0) ; ret 0xde5d
0x00000000004a6dab : fstp st(3), st(0) ; retf 0xeb83
0x00000000004494e8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000449578 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042d2e1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000441064 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004a9198 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000044690b : fsub qword ptr [rsi + 0xf] ; jmp 0x4468d7
0x000000000042d0e1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044025c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000402b1a : fsubp st(0) ; out 1, eax ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000494bcc : fsubr qword ptr [rcx] ; cli ; ljmp [rcx + rbp - 6] ; call qword ptr [rdx]
0x0000000000449b24 : fsubr st(3) ; ret 0xf66
0x00000000004a98b8 : fucom st(5) ; loop 0x4a9911 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047a171 : fucomi st(3) ; ret 0x1f0f
0x0000000000471ff7 : fucomip st(0) ; ret
0x000000000048b411 : fucomip st(1) ; ret
0x00000000004a8efe : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494311 : fyl2xp1 ; call qword ptr [rax]
0x0000000000494331 : fyl2xp1 ; call rax
0x000000000044abe1 : hlt ; call r15
0x0000000000493d59 : hlt ; clc ; call qword ptr [rax + 0x20fff8f5]
0x0000000000493d55 : hlt ; clc ; call rax
0x0000000000494fc1 : hlt ; cli ; jmp qword ptr [rax]
0x000000000040dce0 : hlt ; jmp 0x40dce5
0x00000000004a7c68 : hlt ; jmp 0x4a7c3d
0x00000000004b083a : hlt ; jmp qword ptr [rbx]
0x00000000004b3b62 : hlt ; jmp qword ptr [rcx]
0x0000000000434bea : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f89e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000448fae : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000446003 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a6a : hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004484a4 : hlt ; retf
0x00000000004ae03c : hlt ; sal esi, cl ; call qword ptr [rax]
0x00000000004a7da3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000446007 : hlt ; sub eax, edx ; ret
0x000000000046c928 : hlt ; test al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004b3ef0 : hlt ; xchg dword ptr [rax], eax ; add byte ptr [rbx + rcx*8], cl ; cld ; call rdx
0x0000000000494c94 : hlt ; xor dl, bh ; push qword ptr [rax + rsi - 6] ; jmp rsp
0x000000000045dadc : idiv bh ; call rax
0x000000000045ed24 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045e836 : idiv bh ; jmp qword ptr [rax]
0x00000000004ad116 : idiv bh ; retf
0x0000000000450b46 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004919a4 : idiv edi ; call 0x40dc04
0x000000000045ddf6 : idiv edi ; call qword ptr [rax]
0x000000000045edaa : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045dcde : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000046a7c1 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469a1d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000494ff5 : idiv edx ; call qword ptr [rax]
0x0000000000494fe9 : idiv edx ; call rax
0x0000000000494fe5 : idiv edx ; inc eax ; idiv edx ; call rax
0x0000000000494fed : idiv edx ; jmp rax
0x0000000000494ff1 : idiv edx ; push rax ; idiv edx ; call qword ptr [rax]
0x0000000000478a07 : imul al ; jnp 0x478a8d ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000459117 : imul eax ; ret
0x0000000000412d2f : imul eax ; retf
0x0000000000444b61 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000004287d7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000468102 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x00000000004281d7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000429537 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042a717 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000427ed7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004ad26f : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000495e41 : imul edi, ebx, -1 ; adc al, 0x69 ; sti ; call rax
0x0000000000495e71 : imul edi, ebx, -1 ; add byte ptr [rbx - 5], ch ; jmp rax
0x0000000000404934 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004278d7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x00000000004275d7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x00000000004272d7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000403459 : imul edx, eax, -1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x00000000004181fe : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000443fdc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004a91e1 : in al, 0x4c ; pop rax ; retf
0x0000000000440cec : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044c253 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x000000000045e3d0 : in al, 0xf ; lahf ; ret
0x0000000000434bca : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000447c7e : in al, 0xf3 ; ret
0x0000000000494349 : in al, 0xf9 ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x00000000004b0bfc : in al, 3 ; cli ; jmp qword ptr [rdx]
0x000000000041ec07 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call rax
0x000000000040fa6d : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; cdq ; ret 3
0x000000000046faa7 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rdi ; ret 0xfffd
0x000000000041f673 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000421144 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2ab
0x000000000041e344 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x000000000045e874 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045e6b1 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000414a21 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f89a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434fca : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004781f6 : in al, dx ; or al, ch ; retf
0x000000000041ed1f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042a794 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045cb38 : in al, dx ; ret 0x25
0x00000000004a93cd : in al, dx ; retf 0xae32
0x000000000048dcf9 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a774 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a92fe : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9291 ; ret 0x48f
0x00000000004a92fd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9292 ; ret 0x48f
0x0000000000449246 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x000000000045c4da : in eax, 0x18 ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2d], cl ; retf 0x25fa
0x00000000004a7a03 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004846c2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a6c99 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048c23a : in eax, 0x83 ; call qword ptr [rcx]
0x00000000004a4df4 : in eax, 0x87 ; std ; dec dword ptr [rax + 0x7e] ; std ; jmp rax
0x000000000046361d : in eax, 0xdf ; loopne 0x4635ae ; ret
0x00000000004a98b9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a7a5a : in eax, 0xe5 ; retf 0x2a91
0x0000000000474813 : in eax, 0xf ; je 0x474838 ; add rax, 2 ; ret
0x0000000000448139 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000434c4a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a8d81 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047613e : in eax, 2 ; add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000042468b : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000466bc8 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000469d58 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000044a69a : in eax, dx ; jne 0x44a6b7 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b205 : in eax, dx ; jne 0x44b22f ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b238 : in eax, dx ; jne 0x44b288 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b264 : in eax, dx ; jne 0x44b2e8 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000048ff6f : in eax, dx ; jne 0x48ff51 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004901c2 : in eax, dx ; jne 0x4901af ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490d7c : in eax, dx ; jne 0x490d67 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446822 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000042f6aa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043504a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000482b37 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000416412 : in eax, dx ; ret
0x00000000004a77d8 : in eax, dx ; retf
0x0000000000469981 : in eax, dx ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446972 : in eax, dx ; sub rax, 1 ; ret
0x0000000000446c88 : inc bl ; cmp dl, 1 ; jb 0x446c9a ; mov byte ptr [rdi], cl ; ret
0x0000000000416a02 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044a82c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x0000000000458715 : inc byte ptr [rbx] ; je 0x458725 ; ret
0x000000000047f178 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049432b : inc dword ptr [rax + 0x10fff9e6] ; fyl2xp1 ; call rax
0x000000000049462b : inc dword ptr [rax + 0x11] ; cli ; call rax
0x0000000000494413 : inc dword ptr [rax + 0x14] ; cli ; call rax
0x000000000049494b : inc dword ptr [rax + 0x34] ; cli ; call rsi
0x0000000000494b23 : inc dword ptr [rax + 0x38] ; cli ; call rax
0x000000000049412f : inc dword ptr [rax + 0x40fff9b1] ; mov bl, 0xf9 ; jmp qword ptr [rax]
0x0000000000493f0b : inc dword ptr [rax + 0x4b] ; stc ; jmp qword ptr [rax]
0x000000000049434b : inc dword ptr [rax - 0x1a] ; stc ; call rax
0x0000000000494347 : inc dword ptr [rax - 0x1c] ; stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x00000000004942db : inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x0000000000494373 : inc dword ptr [rax - 0x26] ; stc ; call qword ptr [rax]
0x0000000000494f13 : inc dword ptr [rax - 0x2f000562] ; lahf ; cli ; jmp qword ptr [rax]
0x00000000004943ff : inc dword ptr [rax - 0x2f00062e] ; sar ecx, cl ; jmp qword ptr [rax]
0x0000000000494233 : inc dword ptr [rax - 0x2f00065a] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp qword ptr [rax]
0x00000000004943ef : inc dword ptr [rax - 0x33] ; stc ; call qword ptr [rax - 0x1f000632]
0x000000000049439b : inc dword ptr [rax - 0x3a] ; stc ; call qword ptr [rax - 0x1f000639]
0x00000000004943cf : inc dword ptr [rax - 0x3f] ; stc ; call qword ptr [rax]
0x00000000004940ff : inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x0000000000494133 : inc dword ptr [rax - 0x4d] ; stc ; jmp qword ptr [rax]
0x000000000049414f : inc dword ptr [rax - 0x4f] ; stc ; inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000494f43 : inc dword ptr [rax - 0x52] ; cli ; call qword ptr [rax + 0x20fffaaf]
0x0000000000494223 : inc dword ptr [rax - 0x5f] ; stc ; call qword ptr [rax - 0x1f00065e]
0x0000000000494287 : inc dword ptr [rax - 0x7f00061b] ; out 0xf9, eax ; call qword ptr [rax]
0x0000000000494327 : inc dword ptr [rax - 0x7f00061c] ; out 0xf9, al ; call qword ptr [rax]
0x0000000000404b6a : inc dword ptr [rax - 0x80] ; jmp qword ptr [rax + rcx*2 - 0x73]
0x000000000046a4ad : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045ed65 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x000000000049461b : inc dword ptr [rax] ; adc edi, edx ; call qword ptr [rax + 0x20fffa12]
0x0000000000494887 : inc dword ptr [rax] ; add al, 0xfa ; push qword ptr [rax + 3] ; cli ; call qword ptr [rax]
0x0000000000460399 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000045ed26 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004480df : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042d7f7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000494683 : inc dword ptr [rax] ; add eax, 0x470fffa ; cli ; jmp rax
0x000000000049493b : inc dword ptr [rax] ; cli ; call qword ptr [rax + 0x20fffa35]
0x0000000000494f63 : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494f9f : inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000494b13 : inc dword ptr [rax] ; cmp bh, dl ; call qword ptr [rax + 0x20fffa39]
0x0000000000494253 : inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x0000000000494fbf : inc dword ptr [rax] ; hlt ; cli ; jmp qword ptr [rax]
0x00000000004941b7 : inc dword ptr [rax] ; mov ah, 0xf9 ; jmp rax
0x000000000049413b : inc dword ptr [rax] ; mov bh, 0xf9 ; jmp rax
0x0000000000494153 : inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000493ef3 : inc dword ptr [rax] ; pop rcx ; stc ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x0000000000494e6b : inc dword ptr [rax] ; push rsi ; cli ; call qword ptr [rax]
0x0000000000493ec7 : inc dword ptr [rax] ; stc ; push qword ptr [rax] ; xor edi, ecx ; call qword ptr [rax]
0x0000000000493f17 : inc dword ptr [rax] ; stc ; push rax ; stc ; jmp rax
0x0000000000455034 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000004056c3 : inc dword ptr [rbp + 0x4dc879c0] ; mov edi, esp ; jmp 0x4056a0
0x000000000047bbef : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000049569f : inc dword ptr [rbp + rdi + 0x3d84fffb] ; sti ; call qword ptr [rax]
0x000000000049590b : inc dword ptr [rbp + rdi + 0x3deafffb] ; sti ; call rsi
0x0000000000494abf : inc dword ptr [rbp + rsi - 6] ; call rsp
0x000000000048254c : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402720 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400937 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040d4ab : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e269 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x0000000000459790 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048c463 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045ece4 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x000000000044819d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044810b : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a4d6b : inc dword ptr [rbx] ; xchg ebp, edi ; call qword ptr [rax - 0x1f00028a]
0x000000000047f179 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004600b2 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046ce09 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x0000000000487fa4 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000480eb2 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x00000000004126eb : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x000000000046f831 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x46f807
0x0000000000493fbb : inc dword ptr [rcx - 0x6b] ; stc ; call rcx
0x00000000004524ee : inc dword ptr [rcx - 0x77] ; ret
0x00000000004557d6 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000459793 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046dbf6 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044a517 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000469a1f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000046512f : inc dword ptr [rcx] ; retf
0x00000000004949f7 : inc dword ptr [rdx + 0x36] ; cli ; call rdx
0x00000000004944ff : inc dword ptr [rdx + 0xf] ; cli ; call rdx
0x00000000004944ef : inc dword ptr [rdx] ; adc edx, edi ; call qword ptr [rdx + 0x22fffa10]
0x00000000004949e7 : inc dword ptr [rdx] ; cmp dl, bh ; call qword ptr [rdx + 0x22fffa37]
0x000000000043fa1d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000049445b : inc dword ptr [rsi + 0x13] ; cli ; call rsi
0x0000000000494953 : inc dword ptr [rsi + 0x3a] ; cli ; call rsi
0x00000000004945c7 : inc dword ptr [rsi + rcx - 6] ; call rsp
0x0000000000494003 : inc dword ptr [rsi - 0x6a] ; stc ; jmp rsi
0x000000000048e042 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x0000000000493ff3 : inc dword ptr [rsi] ; xchg eax, esp ; stc ; call qword ptr [rsi + 0x26fff994]
0x0000000000494983 : inc dword ptr [rsi] ; xor eax, 0x3496fffa ; cli ; jmp qword ptr [rsi]
0x000000000049500f : inc eax ; clc ; cli ; call rax
0x0000000000494e5b : inc eax ; cli ; call rax
0x0000000000494f93 : inc eax ; cli ; jmp rax
0x0000000000494fe7 : inc eax ; idiv edx ; call rax
0x0000000000494f53 : inc eax ; int1 ; cli ; call rax
0x00000000004941ef : inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000049464b : inc eax ; or eax, 0x360fffa ; cli ; jmp qword ptr [rax]
0x00000000004943bb : inc eax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000494243 : inc eax ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x000000000042c14c : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000471e8c : inc ebx ; nop ; xor eax, eax ; ret
0x00000000004464f9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042477b : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042af14 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e89b : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x48e8b7
0x00000000004a98be : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000045d475 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004a8c86 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000494bd0 : insb byte ptr [rdi], dx ; sub edx, edi ; call qword ptr [rdx]
0x0000000000424490 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004ab608 : insd dword ptr [rdi], dx ; adc dh, bh ; jmp qword ptr [rcx]
0x00000000004531a6 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000409ebf : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000042438b : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000048fff2 : insd dword ptr [rdi], dx ; js 0x49006f ; ret 0x8b48
0x00000000004a98bf : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a7c6d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004a8b7f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000450d05 : int 0x19
0x00000000004680fa : int 0x80
0x0000000000455576 : int 0xf
0x0000000000454d89 : int 0xfa
0x0000000000474236 : int1 ; call rbx
0x0000000000490ee7 : int1 ; clc ; push rbx ; ret
0x0000000000494f55 : int1 ; cli ; call rax
0x0000000000494f61 : int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494f51 : int1 ; cli ; inc eax ; int1 ; cli ; call rax
0x0000000000494f59 : int1 ; cli ; jmp rax
0x00000000004563b2 : int1 ; je 0x456561 ; mov rdx, rax ; jmp 0x456379
0x00000000004567b7 : int1 ; je 0x456561 ; mov rdx, rax ; jmp 0x45677e
0x000000000045682e : int1 ; je 0x456561 ; mov rdx, rax ; jmp 0x4567f5
0x0000000000446c0b : int1 ; jl 0x446c5c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446c2c : int1 ; jl 0x446c7d ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446c3f : int1 ; jl 0x446c90 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d14 : int1 ; jl 0x446d65 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d6c : int1 ; jl 0x446dbd ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446e09 : int1 ; jl 0x446e5a ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000448095 : int1 ; jmp rcx
0x0000000000471beb : int1 ; jne 0x471be6 ; lea eax, [rdx + rdi] ; ret
0x000000000047e677 : int1 ; jne 0x47e654 ; ret
0x00000000004a8b44 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004481b9 : int1 ; mov eax, eax ; ret
0x0000000000434a3b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fe6f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000445fd3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004481a0 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a9296 : int1 ; ret 0x5803
0x0000000000438b2b : int1 ; ret 5
0x0000000000445fd7 : int1 ; sub eax, edx ; ret
0x0000000000400936 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x00000000004943b9 : iretd ; stc ; inc eax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000405d8d : ja 0x405d6e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438943 : ja 0x438947 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000444127 : ja 0x44412d ; ret
0x0000000000444143 : ja 0x44414d ; mov dword ptr [rdi], ecx ; ret
0x0000000000444184 : ja 0x444193 ; mov qword ptr [rdi], rcx ; ret
0x0000000000444209 : ja 0x44421d ; ret
0x000000000044425f : ja 0x444277 ; ret
0x00000000004442e1 : ja 0x4442fd ; ret
0x0000000000444747 : ja 0x444751 ; lea rax, [rdi + 2] ; ret
0x0000000000444763 : ja 0x444771 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004447b4 : ja 0x4447c7 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000444899 : ja 0x4448b1 ; lea rax, [rdi + 0x10] ; ret
0x000000000044490f : ja 0x44492b ; lea rax, [rdi + 0x14] ; ret
0x0000000000444991 : ja 0x4449b1 ; lea rax, [rdi + 0x18] ; ret
0x0000000000446f14 : ja 0x446f45 ; jb 0x446f26 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447274 : ja 0x4472ba ; jb 0x447286 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004476c4 : ja 0x447722 ; jb 0x4476d6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447c93 : ja 0x447cb0 ; jb 0x447c9f ; mov byte ptr [rdi], cl ; ret
0x0000000000447e01 : ja 0x447e38 ; jb 0x447e10 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000447fc9 : ja 0x44800e ; jb 0x447fd8 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448fac : ja 0x448fd8 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044956b : ja 0x449573 ; ret
0x00000000004495b9 : ja 0x4495c3 ; ret
0x00000000004497c4 : ja 0x449823 ; ret
0x000000000044985a : ja 0x449863 ; ret
0x0000000000449897 : ja 0x4498f3 ; ret
0x000000000044992d : ja 0x44993b ; ret
0x000000000044995d : ja 0x44996b ; ret
0x0000000000449b67 : ja 0x449bab ; ret
0x0000000000449bdd : ja 0x449beb ; ret
0x000000000044a336 : ja 0x44a343 ; ret
0x000000000044c730 : ja 0x44c75d ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d455 : ja 0x44d4a9 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045af53 : ja 0x45af63 ; ret
0x0000000000465e42 : ja 0x465e25 ; mov eax, r9d ; ret
0x0000000000474cf9 : ja 0x474cc7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047557b : ja 0x475583 ; ret
0x00000000004755cf : ja 0x4755db ; ret
0x00000000004758f0 : ja 0x47591b ; ret
0x000000000047d754 : ja 0x47d760 ; add byte ptr [rax + 0x15], bh ; syscall
0x0000000000482dee : ja 0x482e40 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048dbfd : ja 0x48dc06 ; sbb eax, eax ; ret
0x0000000000496418 : ja 0x49648f ; sti ; jmp qword ptr [rcx]
0x00000000004a9304 : ja 0x4a928b ; ret 0x48f
0x00000000004b2e6d : ja 0x4b2e75 ; add al, dl ; adc al, 0xfc ; jmp qword ptr [rax]
0x000000000041874d : jae 0x418775 ; movzx eax, byte ptr [rax] ; ret
0x0000000000432e11 : jae 0x432e40 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004494dd : jae 0x4494e2 ; ret
0x000000000044a56d : jae 0x44a572 ; ret
0x000000000044a59d : jae 0x44a5a2 ; ret
0x000000000044a5cd : jae 0x44a5d2 ; ret
0x000000000044bc80 : jae 0x44bc85 ; ret
0x000000000044bcad : jae 0x44bcb2 ; ret
0x000000000044bfb4 : jae 0x44bfa3 ; ret
0x0000000000454e4f : jae 0x454ddc ; retf 0xb941
0x000000000045acfe : jae 0x45ad45 ; xor eax, eax ; pop rbx ; ret
0x00000000004754fd : jae 0x475502 ; ret
0x000000000047f8fb : jae 0x47f8a5 ; xor eax, eax ; ret
0x0000000000484d14 : jae 0x484d3d ; add cl, ch ; retf
0x0000000000488074 : jae 0x488057 ; mov eax, 1 ; ret
0x000000000048852d : jae 0x488532 ; ret
0x000000000048eb86 : jae 0x48eb99 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004a78c2 : jae 0x4a78a4 ; jo 0x4a7940 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a875e : jae 0x4a8739 ; push rsi ; pop rdx ; je 0x4a872e ; ret 0xacfc
0x00000000004acfca : jae 0x4acfd8 ; ret
0x00000000004b2ad5 : jae 0x4b2add ; add al, cl ; cld ; sti ; jmp qword ptr [rbx]
0x00000000004b2aed : jae 0x4b2af5 ; add al, ah ; cld ; sti ; jmp qword ptr [rbx]
0x000000000041dbd7 : jb 0x41dbc1 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042de7a : jb 0x42de8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042dfca : jb 0x42dfda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e11a : jb 0x42e12a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e26a : jb 0x42e27a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e3ba : jb 0x42e3ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e50a : jb 0x42e51a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e65a : jb 0x42e66a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e7aa : jb 0x42e7ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e8fa : jb 0x42e90a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea4a : jb 0x42ea5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eb9a : jb 0x42ebaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ecea : jb 0x42ecfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee3a : jb 0x42ee4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ef8a : jb 0x42ef9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f0da : jb 0x42f0ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043084a : jb 0x43085a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043099a : jb 0x4309aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aea : jb 0x430afa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c3a : jb 0x430c4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d8a : jb 0x430d9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430eda : jb 0x430eea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043102a : jb 0x43103a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043117a : jb 0x43118a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312ca : jb 0x4312da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043141a : jb 0x43142a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043156a : jb 0x43157a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316ba : jb 0x4316ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043180a : jb 0x43181a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043195a : jb 0x43196a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431aaa : jb 0x431aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043851e : jb 0x43852a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446c75 : jb 0x446c84 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000446c80 : jb 0x446c93 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000446c8d : jb 0x446c95 ; mov byte ptr [rdi], cl ; ret
0x0000000000446e94 : jb 0x446e9d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000446f16 : jb 0x446f24 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446f15 : jb 0x446f25 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447276 : jb 0x447284 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004476c6 : jb 0x4476d4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447c95 : jb 0x447c9d ; mov byte ptr [rdi], cl ; ret
0x0000000000447e03 : jb 0x447e0e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000447fcb : jb 0x447fd6 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004564ee : jb 0x45655c ; mov rdx, rax ; jmp 0x4564b3
0x00000000004946d8 : jb 0x4946e7 ; cli ; jmp rdx
0x0000000000496419 : jb 0x496418 ; jmp qword ptr [rcx]
0x0000000000496415 : jb 0x496418 ; push qword ptr [rdi + 0x72] ; sti ; jmp qword ptr [rcx]
0x00000000004a8f18 : jb 0x4a8f72 ; call 0x4c14b8d7
0x00000000004017a4 : jbe 0x4017b8 ; syscall
0x000000000040f331 : jbe 0x40f2f1 ; mov r11d, 1 ; jmp 0x40f306
0x00000000004107af : jbe 0x410802 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422197 : jbe 0x4221c7 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000042b386 : jbe 0x42b3c5 ; add rax, rdi ; ret
0x000000000042b396 : jbe 0x42b3c7 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b3a6 : jbe 0x42b3c7 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b3b6 : jbe 0x42b3c7 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042b7c7 : jbe 0x42b838 ; add rax, rdi ; vzeroupper ; ret
0x0000000000455f22 : jbe 0x455f1c ; ret
0x000000000045cff9 : jbe 0x45cfb9 ; mov r11d, 1 ; jmp 0x45cfce
0x00000000004819ff : jbe 0x481a0b ; ret
0x0000000000490ee6 : jbe 0x490ede ; clc ; push rbx ; ret
0x00000000004a4d71 : jbe 0x4a4d72 ; jmp rax
0x00000000004a919c : jbe 0x4a916f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004a919b : jbe 0x4a9170 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a99 : je 0x400ab0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000400adb : je 0x400af0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x00000000004039c0 : je 0x4039f9 ; mov rdi, rax ; call 0x4004c7
0x000000000040595e : je 0x40596e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004122fd : je 0x412328 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000412858 : je 0x41285f ; ret
0x000000000041442c : je 0x414463 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x00000000004165c1 : je 0x4165f0 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x412859
0x0000000000416a45 : je 0x416a53 ; ret
0x0000000000418f63 : je 0x418f68 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422842 : je 0x42286e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000422d33 : je 0x422d46 ; lea rax, [rdx - 0x10] ; ret
0x0000000000422f40 : je 0x422ecd ; retf 0x4c89
0x0000000000422f3f : je 0x422ece ; retf 0x4c89
0x00000000004243f2 : je 0x4243bd ; ret
0x000000000042a173 : je 0x42a13d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b05a : je 0x42b062 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042b28c : je 0x42b2e3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b56a : je 0x42b5c1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042bf35 : je 0x42bf47 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042d557 : je 0x42d561 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043cf93 : je 0x43cf5d ; lea r10, [r10 + r9] ; jmp r10
0x000000000043eb23 : je 0x43eaed ; lea r10, [r10 + r9] ; jmp r10
0x0000000000440301 : je 0x440319 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000440924 : je 0x44092e ; bsf eax, edx ; ret
0x0000000000440924 : je 0x44092f ; bsf eax, edx ; ret
0x00000000004409cd : je 0x4409e5 ; bsf rax, rdx ; ret
0x00000000004409cd : je 0x4409e6 ; bsf rax, rdx ; ret
0x000000000044096c : je 0x4409f9 ; bsf rax, rdx ; ret
0x0000000000446fa3 : je 0x446fc4 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044864e : je 0x44865c ; xor eax, eax ; ret
0x0000000000448649 : je 0x448669 ; cmp eax, 2 ; je 0x448661 ; xor eax, eax ; ret
0x000000000044869d : je 0x448683 ; ret
0x000000000044902e : je 0x449030 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000449ad8 : je 0x449b07 ; mov eax, 0x48 ; syscall
0x0000000000449e97 : je 0x449ec2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044a3fa : je 0x44a401 ; ret
0x000000000044bd89 : je 0x44bd8e ; ret
0x000000000044bded : je 0x44bdf2 ; ret
0x000000000044c63c : je 0x44c64f ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000044d368 : je 0x44d373 ; ret
0x000000000044d384 : je 0x44d399 ; mov dword ptr [rip + 0x26b72c], edx ; pop rbx ; ret
0x0000000000451485 : je 0x4514b3 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000451c3f : je 0x451c6e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451f2f : je 0x451f5e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452277 : je 0x4522a6 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004524b6 : je 0x4524e5 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452b1e : je 0x452b4c ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004536b6 : je 0x4536e5 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000454742 : je 0x454771 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045523b : je 0x45526a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004555e3 : je 0x455612 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455a27 : je 0x455a56 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455e62 : je 0x455e90 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000456424 : je 0x456453 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004563b3 : je 0x456560 ; mov rdx, rax ; jmp 0x456378
0x00000000004567b8 : je 0x456560 ; mov rdx, rax ; jmp 0x45677d
0x000000000045682f : je 0x456560 ; mov rdx, rax ; jmp 0x4567f4
0x0000000000456753 : je 0x456782 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456c67 : je 0x456c96 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004570a2 : je 0x4570d0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000458717 : je 0x458723 ; ret
0x0000000000458712 : je 0x458728 ; cmp esi, 3 ; je 0x458728 ; ret
0x000000000045906a : je 0x459070 ; call rsi
0x0000000000459166 : je 0x45916c ; call rax
0x000000000045a56b : je 0x45a571 ; call rax
0x000000000045ab2e : je 0x45ab3b ; ret
0x0000000000462ed1 : je 0x462d04 ; jmp 0x462ea2
0x0000000000468c8c : je 0x468cb7 ; and byte ptr [rax + 1], cl ; ret
0x000000000046c3a8 : je 0x46c35b ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000470a66 : je 0x470ab6 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000470a65 : je 0x470ab7 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004718bc : je 0x4718c3 ; ret
0x00000000004718d9 : je 0x4718e6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471913 : je 0x471975 ; pop rbp ; pop r12 ; ret
0x000000000047199f : je 0x471a01 ; pop rbp ; pop r12 ; ret
0x0000000000471b2a : je 0x471b54 ; or al, 0xeb ; ret 0x5590
0x00000000004737ac : je 0x4737d5 ; bsf rax, rdx ; ret
0x00000000004737ac : je 0x4737d6 ; bsf rax, rdx ; ret
0x000000000047373c : je 0x4737e9 ; bsf rax, rdx ; ret
0x0000000000473c4b : je 0x473c53 ; ret
0x000000000047422e : je 0x47425d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000474358 : je 0x474365 ; test edx, edx ; jne 0x474357 ; ret
0x00000000004747f9 : je 0x474819 ; mov cl, dl ; and cl, 0xf ; je 0x474829 ; ret
0x0000000000474800 : je 0x474822 ; ret
0x0000000000474815 : je 0x474836 ; add rax, 2 ; ret
0x000000000047575d : je 0x47578f ; mov eax, 0x101 ; syscall
0x0000000000475cd2 : je 0x475dd1 ; xor eax, eax ; leave ; ret
0x000000000047e6d6 : je 0x47e6e3 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000480ead : je 0x480dff ; sub eax, r8d ; ret
0x0000000000484fe2 : je 0x484ff6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004854e8 : je 0x485513 ; or byte ptr [rax + 1], cl ; ret
0x00000000004870dd : je 0x487122 ; shl rdx, 5 ; add rdx, rax ; jmp 0x4870f9
0x0000000000487ca6 : je 0x487cb3 ; ret
0x000000000048aaed : je 0x48ab18 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d088 : je 0x48d072 ; add rsp, 0x18 ; ret
0x000000000048d071 : je 0x48d096 ; add rsp, 0x18 ; ret
0x000000000048d118 : je 0x48d0f8 ; ret
0x000000000048d159 : je 0x48d166 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f44a : je 0x48f453 ; ret
0x000000000048f483 : je 0x48f494 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f499 ; ret
0x000000000048f55a : je 0x48f563 ; ret
0x0000000000490cf3 : je 0x490cfe ; call rax
0x0000000000494c98 : je 0x494ccd ; cli ; jmp rsp
0x00000000004a6ccc : je 0x4a6cfa ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a7a28 : je 0x4a79f3 ; xor al, 0xd8 ; ret
0x00000000004a7c67 : je 0x4a7c64 ; jmp 0x4a7c3e
0x00000000004a8762 : je 0x4a872a ; ret 0xacfc
0x00000000004aa78a : je 0x4aa78e ; ret
0x00000000004b12dd : je 0x4b12db ; call qword ptr [rdx]
0x00000000004b135d : je 0x4b135b ; jmp rax
0x0000000000416a42 : jg 0x416a82 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000042fa59 : jg 0x42faac ; ret
0x000000000042faa0 : jg 0x42faf0 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000042faa5 : jg 0x42faf8 ; retf
0x000000000042fadf : jg 0x42fb2a ; ret
0x000000000042fb1f : jg 0x42fb6a ; retf
0x000000000042fc59 : jg 0x42fcac ; ret 0x894c
0x000000000042fca0 : jg 0x42fcf0 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000042fca5 : jg 0x42fcf8 ; retf 0x894c
0x000000000042fcdf : jg 0x42fd2a ; ret 0x894c
0x000000000042fd1b : jg 0x42fd66 ; retf 0x894c
0x0000000000432429 : jg 0x43247c ; ret
0x0000000000432470 : jg 0x4324c0 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000432475 : jg 0x4324c8 ; retf
0x00000000004324af : jg 0x4324fa ; ret
0x00000000004324ef : jg 0x43253a ; retf
0x0000000000432629 : jg 0x43267c ; ret 0x894c
0x0000000000432670 : jg 0x4326c0 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000432675 : jg 0x4326c8 ; retf 0x894c
0x00000000004326af : jg 0x4326fa ; ret 0x894c
0x00000000004326eb : jg 0x432736 ; retf 0x894c
0x0000000000434a18 : jg 0x434a69 ; loope 0x434a17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a8f : jg 0x434ada ; ret 0xff2
0x0000000000434aa8 : jg 0x434af9 ; loop 0x434aa7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b1f : jg 0x434b6a ; ret
0x0000000000434b38 : jg 0x434b89 ; jrcxz 0x434b37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bc8 : jg 0x434c19 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c48 : jg 0x434c99 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434cc8 : jg 0x434d19 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d48 : jg 0x434d99 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434dc8 : jg 0x434e19 ; call 0x4fc25dca
0x0000000000434e48 : jg 0x434e99 ; jmp 0x4fc25e4a
0x0000000000434ea5 : jg 0x434ef5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000434eaf : jg 0x434efa ; retf 0xff2
0x0000000000434f25 : jg 0x434f75 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000434f2f : jg 0x434f7a ; retf
0x0000000000434fc8 : jg 0x435019 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435048 : jg 0x435099 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004350d8 : jg 0x435129 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435158 : jg 0x4351a9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004351cc : jg 0x4351d7 ; ret
0x0000000000435226 : jg 0x435239 ; ret
0x0000000000435221 : jg 0x435271 ; psllq mm1, qword ptr [rdi] ; jg 0x43523e ; ret
0x0000000000435296 : jg 0x4352a9 ; ret
0x0000000000435306 : jg 0x435319 ; ret
0x0000000000435301 : jg 0x435351 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435376 : jg 0x435389 ; ret
0x0000000000435371 : jg 0x4353c1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353e6 : jg 0x4353f9 ; ret
0x00000000004353e1 : jg 0x435431 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435456 : jg 0x435469 ; ret
0x0000000000435451 : jg 0x4354a1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004354c6 : jg 0x4354d9 ; ret
0x00000000004354c1 : jg 0x435511 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435536 : jg 0x435549 ; ret
0x0000000000435531 : jg 0x435581 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355a6 : jg 0x4355b9 ; ret
0x0000000000435616 : jg 0x435629 ; ret
0x0000000000435686 : jg 0x435699 ; ret
0x0000000000435681 : jg 0x4356d1 ; add eax, 0xf7f0ff3 ; ret
0x00000000004356f6 : jg 0x435709 ; ret
0x00000000004356f1 : jg 0x435741 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435766 : jg 0x435779 ; ret
0x0000000000435761 : jg 0x4357b1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004357d6 : jg 0x4357e9 ; ret
0x00000000004357d1 : jg 0x435821 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435846 : jg 0x435859 ; ret
0x0000000000435841 : jg 0x435891 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437538 : jg 0x437589 ; loope 0x437537 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004375af : jg 0x4375fa ; ret 0xff2
0x00000000004375c8 : jg 0x437619 ; loop 0x4375c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043763f : jg 0x43768a ; ret
0x0000000000437658 : jg 0x4376a9 ; jrcxz 0x437657 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004376e8 : jg 0x437739 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437768 : jg 0x4377b9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377e8 : jg 0x437839 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437868 : jg 0x4378b9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004378e8 : jg 0x437939 ; call 0x4fc288ea
0x0000000000437968 : jg 0x4379b9 ; jmp 0x4fc2896a
0x00000000004379c5 : jg 0x437a15 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004379cf : jg 0x437a1a ; retf 0xff2
0x0000000000437a45 : jg 0x437a95 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000437a4f : jg 0x437a9a ; retf
0x0000000000437ae8 : jg 0x437b39 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437b68 : jg 0x437bb9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437bf8 : jg 0x437c49 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437c78 : jg 0x437cc9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437cec : jg 0x437cf7 ; ret
0x0000000000437d46 : jg 0x437d59 ; ret
0x0000000000437d41 : jg 0x437d91 ; psllq mm1, qword ptr [rdi] ; jg 0x437d5e ; ret
0x0000000000437db6 : jg 0x437dc9 ; ret
0x0000000000437e26 : jg 0x437e39 ; ret
0x0000000000437e21 : jg 0x437e71 ; or eax, 0xf7f0ff3 ; ret
0x0000000000437e96 : jg 0x437ea9 ; ret
0x0000000000437e91 : jg 0x437ee1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437f06 : jg 0x437f19 ; ret
0x0000000000437f01 : jg 0x437f51 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437f76 : jg 0x437f89 ; ret
0x0000000000437f71 : jg 0x437fc1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437fe6 : jg 0x437ff9 ; ret
0x0000000000437fe1 : jg 0x438031 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438056 : jg 0x438069 ; ret
0x0000000000438051 : jg 0x4380a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004380c6 : jg 0x4380d9 ; ret
0x0000000000438136 : jg 0x438149 ; ret
0x00000000004381a6 : jg 0x4381b9 ; ret
0x00000000004381a1 : jg 0x4381f1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000438216 : jg 0x438229 ; ret
0x0000000000438211 : jg 0x438261 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438286 : jg 0x438299 ; ret
0x0000000000438281 : jg 0x4382d1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004382f6 : jg 0x438309 ; ret
0x00000000004382f1 : jg 0x438341 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438366 : jg 0x438379 ; ret
0x0000000000438361 : jg 0x4383b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004384c4 : jg 0x4384d5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004384d8 : jg 0x4384e9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043894a : jg 0x438946 ; ret
0x00000000004441f6 : jg 0x444201 ; ret
0x0000000000444206 : jg 0x444214 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044421a : jg 0x444229 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444239 : jg 0x444247 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444249 : jg 0x444257 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444259 : jg 0x44426a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044427a : jg 0x444289 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044429a : jg 0x4442a9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004442ba : jg 0x4442c9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004442da : jg 0x4442ec ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044431d : jg 0x44432f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044433d : jg 0x44434f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044435b : jg 0x44436b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044437b : jg 0x44438b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044439b : jg 0x4443ab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004443bb : jg 0x4443cb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444886 : jg 0x444895 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444896 : jg 0x4448a8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000004448c9 : jg 0x4448db ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000004448e9 : jg 0x4448fb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000444a0f : jg 0x444a6f ; or eax, 0x1c478d48 ; ret
0x0000000000446c57 : jg 0x446c67 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000446c4d : jg 0x446c6d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004470e4 : jg 0x44711c ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004471b2 : jg 0x4471ea ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044728a : jg 0x44729b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044741b : jg 0x447445 ; vzeroupper ; ret
0x00000000004474c2 : jg 0x4474cc ; vzeroupper ; ret
0x000000000044754e : jg 0x447578 ; vzeroupper ; ret
0x00000000004475de : jg 0x4475e8 ; vzeroupper ; ret
0x00000000004476f2 : jg 0x447703 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004478d6 : jg 0x447900 ; vzeroupper ; ret
0x00000000004478d5 : jg 0x447901 ; vzeroupper ; ret
0x000000000044799c : jg 0x4479a6 ; vzeroupper ; ret
0x000000000044799b : jg 0x4479a7 ; vzeroupper ; ret
0x0000000000447a6f : jg 0x447a99 ; vzeroupper ; ret
0x0000000000447a6e : jg 0x447a9a ; vzeroupper ; ret
0x0000000000447b42 : jg 0x447b4c ; vzeroupper ; ret
0x0000000000447b41 : jg 0x447b4d ; vzeroupper ; ret
0x0000000000447bac : jg 0x447bb7 ; ret
0x0000000000447bfc : jg 0x447c07 ; ret
0x0000000000447c73 : jg 0x447cbf ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000447d04 : jg 0x447d12 ; vzeroupper ; ret
0x0000000000447d54 : jg 0x447d62 ; vzeroupper ; ret
0x0000000000447e13 : jg 0x447e21 ; vzeroupper ; ret
0x0000000000447e91 : jg 0x447e9f ; vzeroupper ; ret
0x0000000000447e90 : jg 0x447ea0 ; vzeroupper ; ret
0x0000000000447ef1 : jg 0x447eff ; vzeroupper ; ret
0x0000000000447ef0 : jg 0x447f00 ; vzeroupper ; ret
0x0000000000447fdb : jg 0x447fe9 ; vzeroupper ; ret
0x0000000000447fe9 : jg 0x447ff7 ; vzeroupper ; ret
0x0000000000448040 : jg 0x44807d ; ret 0x2b77
0x000000000044815b : jg 0x448128 ; mov eax, 0x80 ; pop rbx ; ret
0x00000000004481b7 : jg 0x4481b5 ; int1 ; mov eax, eax ; ret
0x000000000044e326 : jg 0x44e2ad ; retf
0x0000000000454038 : jg 0x453fc5 ; ret 0xdb76
0x0000000000454038 : jg 0x453fc9 ; ret 0xdb76
0x000000000045f032 : jg 0x45f04b ; test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000469602 : jg 0x46961b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046aa7a : jg 0x46aa93 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046ab77 : jg 0x46ab90 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000046f38d : jg 0x46f3a6 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f365
0x000000000047f367 : jg 0x47f379 ; test rdi, rdi ; jne 0x47f348 ; ret
0x000000000048a938 : jg 0x48a942 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000403a2d : jge 0x403a5e ; add al, ch ; retf
0x000000000040defa : jge 0x40df03 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a6c5 : jge 0x44a6ca ; call r12
0x000000000044a6ed : jge 0x44a6f2 ; call r12
0x000000000044abdd : jge 0x44ab8d ; mov r12d, r14d ; call r15
0x000000000044b23d : jge 0x44b242 ; call r12
0x000000000044b269 : jge 0x44b26e ; call r12
0x000000000044b29d : jge 0x44b2a2 ; call r12
0x000000000044b2cd : jge 0x44b2d2 ; call r12
0x000000000044b2f5 : jge 0x44b2fa ; call r12
0x000000000044b325 : jge 0x44b32a ; call r12
0x000000000048d4d2 : jge 0x48d4cf ; leave ; ret
0x000000000048d650 : jge 0x48d653 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d79c : jge 0x48d799 ; leave ; ret
0x000000000048d7e8 : jge 0x48d7eb ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d977 : jge 0x48d97a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dad7 : jge 0x48dad4 ; leave ; ret
0x000000000048db28 : jge 0x48db2b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000494eb9 : jge 0x494eb7 ; call rax
0x00000000004a6d2a : jge 0x4a6d0b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a8674 : jge 0x4a86e5 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000040111f : jl 0x40114d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000404a36 : jl 0x404a61 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d428 : jl 0x40d453 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000416f12 : jl 0x416f2e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041e95b : jl 0x41e955 ; ret 0x7508
0x0000000000421c5a : jl 0x421c8a ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000423fe0 : jl 0x423faf ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000438444 : jl 0x438493 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438480 : jl 0x4384cf ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043867e : jl 0x4386cd ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004387e5 : jl 0x438834 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000438947 : jl 0x438996 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000446c0c : jl 0x446c5b ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446c2d : jl 0x446c7c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446c40 : jl 0x446c8f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d15 : jl 0x446d64 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d6d : jl 0x446dbc ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446e0a : jl 0x446e59 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004477c0 : jl 0x4477df ; cld ; vzeroupper ; ret
0x000000000044a7a2 : jl 0x44a7d0 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450d71 : jl 0x450d9f ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451196 : jl 0x4511c4 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004530d8 : jl 0x453106 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004536bb : jl 0x4536e5 ; call r15
0x000000000045410a : jl 0x454138 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000455a2c : jl 0x455a56 ; call r15
0x0000000000455e67 : jl 0x455e90 ; call rbx
0x0000000000455f1d : jl 0x455f4a ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000045664d : jl 0x456677 ; or al, 0xe9 ; ret
0x0000000000456c6c : jl 0x456c96 ; call r15
0x00000000004570a7 : jl 0x4570d0 ; call rbx
0x000000000045715d : jl 0x45718a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045b147 : jl 0x45b172 ; and byte ptr [rax + 1], cl ; ret
0x000000000045b5be : jl 0x45b5e9 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045b906 : jl 0x45b931 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004672cb : jl 0x4672f8 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004689b5 : jl 0x4689e0 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004756cf : jl 0x4756fd ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047b565 : jl 0x47b590 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000482555 : jl 0x482583 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004a8872 : jl 0x4a88d1 ; leave ; retf
0x00000000004ac178 : jl 0x4ac18b ; add byte ptr [rax], al ; push rsp ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004af484 : jl 0x4af41f ; clc ; jmp qword ptr [rsi]
0x000000000044096e : jle 0x440977 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044096e : jle 0x440978 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000446ae1 : jle 0x446b1d ; movsxd rax, ecx ; ret
0x0000000000458762 : jle 0x458775 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004a4df9 : jle 0x4a4dfa ; jmp rax
0x00000000004a4df8 : jle 0x4a4dfb ; jmp rax
0x00000000004a6d22 : jle 0x4a6cbb ; xlatb ; retf 0xa1eb
0x00000000004a88e5 : jle 0x4a8920 ; pop rsp ; sbb ebp, ebx ; retf
0x000000000042486d : jmp 0x100c71b9
0x0000000000424916 : jmp 0x100c7262
0x0000000000424a56 : jmp 0x100c73a2
0x0000000000424b96 : jmp 0x100c74e2
0x0000000000424cd6 : jmp 0x100c7622
0x0000000000424e16 : jmp 0x100c7762
0x0000000000424f56 : jmp 0x100c78a2
0x0000000000425096 : jmp 0x100c79e2
0x00000000004251d6 : jmp 0x100c7b22
0x0000000000425316 : jmp 0x100c7c62
0x0000000000425456 : jmp 0x100c7da2
0x0000000000425596 : jmp 0x100c7ee2
0x00000000004256d6 : jmp 0x100c8022
0x0000000000425816 : jmp 0x100c8162
0x0000000000425956 : jmp 0x100c82a2
0x0000000000425a96 : jmp 0x100c83e2
0x0000000000425f5d : jmp 0x100c88a9
0x0000000000426006 : jmp 0x100c8952
0x0000000000426126 : jmp 0x100c8a72
0x0000000000426246 : jmp 0x100c8b92
0x0000000000426366 : jmp 0x100c8cb2
0x0000000000426486 : jmp 0x100c8dd2
0x00000000004265a6 : jmp 0x100c8ef2
0x00000000004266c6 : jmp 0x100c9012
0x00000000004267e6 : jmp 0x100c9132
0x0000000000426906 : jmp 0x100c9252
0x0000000000426a26 : jmp 0x100c9372
0x0000000000426b46 : jmp 0x100c9492
0x0000000000426c66 : jmp 0x100c95b2
0x0000000000426d86 : jmp 0x100c96d2
0x0000000000426ea6 : jmp 0x100c97f2
0x0000000000426fc6 : jmp 0x100c9912
0x00000000004271dd : jmp 0x100c9b29
0x00000000004272b6 : jmp 0x100c9c02
0x0000000000427436 : jmp 0x100c9d82
0x00000000004275b6 : jmp 0x100c9f02
0x0000000000427736 : jmp 0x100ca082
0x00000000004278b6 : jmp 0x100ca202
0x0000000000427a36 : jmp 0x100ca382
0x0000000000427bb6 : jmp 0x100ca502
0x0000000000427d36 : jmp 0x100ca682
0x0000000000427eb6 : jmp 0x100ca802
0x0000000000428036 : jmp 0x100ca982
0x00000000004281b6 : jmp 0x100cab02
0x0000000000428336 : jmp 0x100cac82
0x00000000004284b6 : jmp 0x100cae02
0x0000000000428636 : jmp 0x100caf82
0x00000000004287b6 : jmp 0x100cb102
0x0000000000428a2d : jmp 0x100cb379
0x0000000000428b06 : jmp 0x100cb452
0x0000000000428c76 : jmp 0x100cb5c2
0x0000000000428de6 : jmp 0x100cb732
0x0000000000428f56 : jmp 0x100cb8a2
0x00000000004290c6 : jmp 0x100cba12
0x0000000000429236 : jmp 0x100cbb82
0x00000000004293a6 : jmp 0x100cbcf2
0x0000000000429516 : jmp 0x100cbe62
0x0000000000429686 : jmp 0x100cbfd2
0x00000000004297f6 : jmp 0x100cc142
0x0000000000429966 : jmp 0x100cc2b2
0x0000000000429ad6 : jmp 0x100cc422
0x0000000000429c46 : jmp 0x100cc592
0x0000000000429db6 : jmp 0x100cc702
0x0000000000429f26 : jmp 0x100cc872
0x000000000042a199 : jmp 0x100ccae5
0x000000000042a246 : jmp 0x100ccb92
0x000000000042a336 : jmp 0x100ccc82
0x000000000042a426 : jmp 0x100ccd72
0x000000000042a516 : jmp 0x100cce62
0x000000000042a606 : jmp 0x100ccf52
0x000000000042a6f6 : jmp 0x100cd042
0x000000000042a7e6 : jmp 0x100cd132
0x000000000042a8d6 : jmp 0x100cd222
0x000000000042a9c6 : jmp 0x100cd312
0x000000000042aab6 : jmp 0x100cd402
0x000000000042aba6 : jmp 0x100cd4f2
0x000000000042ac96 : jmp 0x100cd5e2
0x000000000042ad86 : jmp 0x100cd6d2
0x000000000042ae76 : jmp 0x100cd7c2
0x000000000042af66 : jmp 0x100cd8b2
0x0000000000438c77 : jmp 0x100db5c3
0x0000000000438dfc : jmp 0x100db748
0x000000000043900c : jmp 0x100db958
0x000000000043921c : jmp 0x100dbb68
0x000000000043942c : jmp 0x100dbd78
0x000000000043963c : jmp 0x100dbf88
0x000000000043984c : jmp 0x100dc198
0x0000000000439a5c : jmp 0x100dc3a8
0x0000000000439c6c : jmp 0x100dc5b8
0x0000000000439e7c : jmp 0x100dc7c8
0x000000000043a08c : jmp 0x100dc9d8
0x000000000043a29c : jmp 0x100dcbe8
0x000000000043a4ac : jmp 0x100dcdf8
0x000000000043a6bc : jmp 0x100dd008
0x000000000043a8cc : jmp 0x100dd218
0x000000000043aadc : jmp 0x100dd428
0x000000000043aeb7 : jmp 0x100dd803
0x000000000043b03c : jmp 0x100dd988
0x000000000043b23c : jmp 0x100ddb88
0x000000000043b43c : jmp 0x100ddd88
0x000000000043b63c : jmp 0x100ddf88
0x000000000043b83c : jmp 0x100de188
0x000000000043ba3c : jmp 0x100de388
0x000000000043bc3c : jmp 0x100de588
0x000000000043be3c : jmp 0x100de788
0x000000000043c03c : jmp 0x100de988
0x000000000043c23c : jmp 0x100deb88
0x000000000043c43c : jmp 0x100ded88
0x000000000043c63c : jmp 0x100def88
0x000000000043c83c : jmp 0x100df188
0x000000000043ca3c : jmp 0x100df388
0x000000000043cc3c : jmp 0x100df588
0x000000000043cfff : jmp 0x100df94b
0x000000000043d168 : jmp 0x100dfab4
0x000000000043d308 : jmp 0x100dfc54
0x000000000043d4a8 : jmp 0x100dfdf4
0x000000000043d648 : jmp 0x100dff94
0x000000000043d7e8 : jmp 0x100e0134
0x000000000043d988 : jmp 0x100e02d4
0x000000000043db28 : jmp 0x100e0474
0x000000000043dcc8 : jmp 0x100e0614
0x000000000043de68 : jmp 0x100e07b4
0x000000000043e008 : jmp 0x100e0954
0x000000000043e1a8 : jmp 0x100e0af4
0x000000000043e348 : jmp 0x100e0c94
0x000000000043e4e8 : jmp 0x100e0e34
0x000000000043e688 : jmp 0x100e0fd4
0x000000000043e828 : jmp 0x100e1174
0x000000000043eb75 : jmp 0x100e14c1
0x000000000043ec7e : jmp 0x100e15ca
0x000000000043edce : jmp 0x100e171a
0x000000000043ef1e : jmp 0x100e186a
0x000000000043f06e : jmp 0x100e19ba
0x000000000043f1be : jmp 0x100e1b0a
0x000000000043f30e : jmp 0x100e1c5a
0x000000000043f45e : jmp 0x100e1daa
0x000000000043f5ae : jmp 0x100e1efa
0x000000000043f6fe : jmp 0x100e204a
0x000000000043f84e : jmp 0x100e219a
0x000000000043f99e : jmp 0x100e22ea
0x000000000043faee : jmp 0x100e243a
0x000000000043fc3e : jmp 0x100e258a
0x000000000043fd8e : jmp 0x100e26da
0x000000000043fede : jmp 0x100e282a
0x0000000000485055 : jmp 0x401b22
0x0000000000404933 : jmp 0x4043aa
0x00000000004056cb : jmp 0x405698
0x000000000040dce1 : jmp 0x40dce4
0x000000000040f339 : jmp 0x40f2fe
0x0000000000412f61 : jmp 0x412f60
0x00000000004146a2 : jmp 0x414668
0x000000000041763d : jmp 0x417667
0x000000000041bf07 : jmp 0x41bc82
0x0000000000420749 : jmp 0x4204b0
0x00000000004236f5 : jmp 0x4236c3
0x000000000042a2b2 : jmp 0x42a2c8
0x000000000042c668 : jmp 0x42c636
0x000000000042c6e6 : jmp 0x42c6b4
0x000000000042cb78 : jmp 0x42cb46
0x000000000042cbf6 : jmp 0x42cbc4
0x0000000000440144 : jmp 0x44010a
0x0000000000440298 : jmp 0x44025d
0x000000000044035c : jmp 0x440322
0x00000000004404a8 : jmp 0x44046d
0x00000000004467ce : jmp 0x446794
0x000000000044689f : jmp 0x446865
0x000000000044690e : jmp 0x4468d4
0x0000000000448458 : jmp 0x448426
0x0000000000449373 : jmp 0x449201
0x00000000004496f1 : jmp 0x44964e
0x0000000000449a81 : jmp 0x4499e1
0x0000000000449b25 : jmp 0x449aea
0x0000000000449bcb : jmp 0x449b90
0x000000000044f463 : jmp 0x44f164
0x000000000044fd49 : jmp 0x44fd17
0x000000000045698a : jmp 0x4566ee
0x000000000044e0f2 : jmp 0x45abe2
0x000000000045d001 : jmp 0x45cfc6
0x000000000045d09e : jmp 0x45d062
0x000000000045f3e3 : jmp 0x45f3e8
0x0000000000462ed7 : jmp 0x462e9c
0x0000000000465ff9 : jmp 0x466021
0x000000000046b341 : jmp 0x46966b
0x000000000046a7f8 : jmp 0x46a7be
0x000000000046b333 : jmp 0x46b301
0x000000000046f104 : jmp 0x46f0c9
0x000000000046f103 : jmp 0x46f0ca
0x000000000046f835 : jmp 0x46f803
0x000000000046fa45 : jmp 0x46f95a
0x000000000046fb7e : jmp 0x46fb1c
0x000000000046fdfb : jmp 0x46fdc0
0x00000000004724b3 : jmp 0x472479
0x0000000000475711 : jmp 0x475663
0x0000000000477b0a : jmp 0x477624
0x0000000000477e09 : jmp 0x477e0f
0x00000000004786c1 : jmp 0x478626
0x000000000047a172 : jmp 0x47a137
0x000000000047e3a8 : jmp 0x47e375
0x0000000000484362 : jmp 0x4843b4
0x0000000000485afa : jmp 0x485ac0
0x00000000004866a2 : jmp 0x4865a9
0x0000000000488182 : jmp 0x4881d4
0x000000000048e89e : jmp 0x48e8b4
0x00000000004a6f2a : jmp 0x4a6f69
0x00000000004a7c69 : jmp 0x4a7c3c
0x00000000004a88e9 : jmp 0x4a88b7
0x00000000004a8c60 : jmp 0x4a8bf4
0x00000000004a8c5f : jmp 0x4a8bf5
0x00000000004a8e36 : jmp 0x4a8e04
0x0000000000434e4a : jmp 0x4fc25e48
0x0000000000434e49 : jmp 0x4fc25e49
0x000000000043796a : jmp 0x4fc28968
0x0000000000437969 : jmp 0x4fc28969
0x00000000004a6ed7 : jmp 0xffffffff911488ae
0x000000000044d517 : jmp 0xffffffffc2cdd546
0x0000000000482df1 : jmp 0xffffffffc357b746
0x0000000000461ba7 : jmp 0xffffffffcc301ba9
0x000000000047b959 : jmp 0xffffffffeb097be9
0x0000000000475493 : jmp 0xfffffffff6791723
0x0000000000411a92 : jmp 0xfffffffffef59eaf
0x0000000000494843 : jmp qword ptr [rax + 0x10fffa04]
0x0000000000494657 : jmp qword ptr [rax + 0x10fffa0a]
0x000000000049487b : jmp qword ptr [rax + 0x20fffa05]
0x0000000000494873 : jmp qword ptr [rax + 0x20fffa06]
0x000000000049486b : jmp qword ptr [rax + 0x20fffa07]
0x0000000000494863 : jmp qword ptr [rax + 0x20fffa08]
0x000000000049485b : jmp qword ptr [rax + 0x20fffa09]
0x0000000000404b6d : jmp qword ptr [rax + rcx*2 - 0x73]
0x0000000000493e3b : jmp qword ptr [rax - 0x1f0006e8]
0x0000000000493e2b : jmp qword ptr [rax - 0x1f0006ed]
0x0000000000493e1b : jmp qword ptr [rax - 0x1f0006f2]
0x000000000040e301 : jmp qword ptr [rax]
0x0000000000478f17 : jmp qword ptr [rbx]
0x0000000000493f9f : jmp qword ptr [rcx + 0x21fff991]
0x0000000000493fa7 : jmp qword ptr [rcx + 0x21fff992]
0x0000000000493faf : jmp qword ptr [rcx + 0x21fff993]
0x0000000000492613 : jmp qword ptr [rcx]
0x00000000004956b3 : jmp qword ptr [rdi]
0x00000000004944cf : jmp qword ptr [rdx + 0x12fffa0d]
0x00000000004696d5 : jmp qword ptr [rdx + rax*8]
0x00000000004ab2cf : jmp qword ptr [rdx + rdx + 0x12d4fffe]
0x000000000049261f : jmp qword ptr [rdx - 0x29000906]
0x00000000004944f7 : jmp qword ptr [rdx]
0x0000000000493f8f : jmp qword ptr [rip - 0x2e000672]
0x00000000004482f9 : jmp qword ptr [rsi + 0xf]
0x00000000004ab293 : jmp qword ptr [rsi + rcx + 0x12d4fffe]
0x00000000004ab2ab : jmp qword ptr [rsi + rcx + 0xea4fffe]
0x0000000000493ffb : jmp qword ptr [rsi]
0x0000000000424849 : jmp r10
0x0000000000480020 : jmp r11
0x000000000042d84d : jmp r9
0x0000000000400aa1 : jmp rax
0x0000000000480021 : jmp rbx
0x00000000004223b2 : jmp rcx
0x000000000040d53e : jmp rdi
0x000000000040d255 : jmp rdx
0x0000000000459e67 : jmp rsi
0x000000000046d44d : jmp rsp
0x0000000000400595 : jne 0x40059c ; ret
0x0000000000405dac : jne 0x405dc0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dad8 : jne 0x40dab6 ; ret
0x000000000040dbcb : jne 0x40dbf5 ; add rsp, 0x118 ; ret
0x000000000040f751 : jne 0x40f764 ; add rsp, 0xd8 ; ret
0x000000000040f802 : jne 0x40f815 ; add rsp, 0xd8 ; ret
0x0000000000414775 : jne 0x414783 ; ret
0x0000000000416398 : jne 0x4163ec ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000416411 : jne 0x416403 ; ret
0x000000000041732e : jne 0x417323 ; ret
0x000000000041763b : jne 0x41764f ; jmp 0x417669
0x0000000000417961 : jne 0x417927 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004179ac : jne 0x4179a5 ; lea eax, [rdx + rdi] ; ret
0x00000000004182c6 : jne 0x4182bb ; ret
0x0000000000418ecc : jne 0x418ed1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000419f20 : jne 0x419f2f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041f5fc : jne 0x41f5c3 ; ret
0x0000000000422aaa : jne 0x422a31 ; ret
0x0000000000422db7 : jne 0x422da6 ; sub rax, 0x10 ; ret
0x0000000000425e9c : jne 0x425e86 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042b337 : jne 0x42b394 ; xor eax, eax ; ret
0x000000000042b307 : jne 0x42b3b8 ; xor eax, eax ; ret
0x000000000042b7b3 : jne 0x42b7d7 ; xor eax, eax ; vzeroupper ; ret
0x000000000042beea : jne 0x42bef5 ; vzeroupper ; ret
0x000000000042bfe4 : jne 0x42bef6 ; ret
0x000000000042c12f : jne 0x42bef9 ; vzeroupper ; ret
0x000000000042d79d : jne 0x42d7c7 ; xor eax, eax ; ret
0x000000000042cd91 : jne 0x42d7cb ; xor eax, eax ; ret
0x000000000042cdb9 : jne 0x42d7d7 ; xor eax, eax ; ret
0x0000000000444b75 : jne 0x444b06 ; lea rax, [rdi + 3] ; ret
0x0000000000444b47 : jne 0x444b06 ; lea rax, [rdi + 7] ; ret
0x0000000000444b46 : jne 0x444b07 ; lea rax, [rdi + 7] ; ret
0x00000000004462d4 : jne 0x4464e8 ; xor eax, eax ; ret
0x00000000004464d9 : jne 0x4464f9 ; xor eax, eax ; ret
0x0000000000446381 : jne 0x4464fd ; xor eax, eax ; ret
0x00000000004464f1 : jne 0x4464fe ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000446601 : jne 0x4465f2 ; ret
0x00000000004466b1 : jne 0x4466a2 ; ret
0x0000000000446821 : jne 0x446816 ; lea rax, [rcx - 1] ; ret
0x0000000000446971 : jne 0x446966 ; sub rax, 1 ; ret
0x0000000000447c7d : jne 0x447c66 ; ret
0x0000000000447de4 : jne 0x447dcc ; vzeroupper ; ret
0x0000000000447fa7 : jne 0x447f87 ; vzeroupper ; ret
0x0000000000448452 : jne 0x448387 ; jmp 0x44842c
0x000000000044877f : jne 0x4487ab ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449537 : jne 0x44954f ; add rsp, 0x28 ; ret
0x0000000000449767 : jne 0x4497b1 ; add rsp, 0x58 ; ret
0x00000000004497b8 : jne 0x4497d4 ; xor eax, eax ; syscall
0x0000000000449888 : jne 0x4498a7 ; mov eax, 1 ; syscall
0x00000000004499c5 : jne 0x449a2f ; mov eax, 0x48 ; syscall
0x0000000000449b21 : jne 0x449aee ; neg eax ; jmp 0x449aee
0x0000000000449af7 : jne 0x449b49 ; add rsp, 0x68 ; ret
0x0000000000449b58 : jne 0x449b77 ; mov eax, 3 ; syscall
0x000000000044a466 : jne 0x44a47d ; add rsp, 0x28 ; ret
0x000000000044a69b : jne 0x44a6b6 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044a6c1 : jne 0x44a707 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a6e9 : jne 0x44a727 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b206 : jne 0x44b22e ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b239 : jne 0x44b287 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b265 : jne 0x44b2e7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b2f1 : jne 0x44b358 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b321 : jne 0x44b389 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bd32 : jne 0x44bd29 ; pop rdx ; pop r10 ; ret
0x000000000044bd22 : jne 0x44bd34 ; nop ; mov eax, 0xca ; syscall
0x000000000044f04f : jne 0x44efe3 ; call rsi
0x000000000045ac6f : jne 0x45ac7c ; add rsp, 0x18 ; ret
0x000000000045aeb7 : jne 0x45af0c ; add rsp, 0x148 ; ret
0x00000000004633c7 : jne 0x4633d3 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004633c6 : jne 0x4633d4 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000465ff7 : jne 0x466009 ; jmp 0x466023
0x00000000004688b2 : jne 0x4688c5 ; add rsp, 0xd8 ; ret
0x00000000004709a1 : jne 0x470993 ; ret
0x0000000000471bec : jne 0x471be5 ; lea eax, [rdx + rdi] ; ret
0x00000000004736a3 : jne 0x4736ae ; xor rax, rax ; ret
0x0000000000473aa3 : jne 0x473ad8 ; mov rax, r8 ; vzeroupper ; ret
0x000000000047435c : jne 0x474353 ; ret
0x0000000000474363 : jne 0x47436e ; xor rax, rax ; ret
0x00000000004745fb : jne 0x4745b6 ; mov rax, rdx ; ret
0x0000000000475647 : jne 0x4756ad ; mov eax, 0x101 ; syscall
0x000000000047577c : jne 0x4757c9 ; add rsp, 0x58 ; ret
0x00000000004757ff : jne 0x475812 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004758ae : jne 0x4758d1 ; add rsp, 0x38 ; ret
0x000000000047e68a : jne 0x47e630 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e678 : jne 0x47e653 ; ret
0x000000000047f317 : jne 0x47f331 ; mov rax, qword ptr [rip + 0x23d090] ; ret
0x000000000047f36c : jne 0x47f343 ; ret
0x0000000000480e29 : jne 0x480e01 ; movsx eax, cl ; neg eax ; ret
0x0000000000481bfa : jne 0x481c09 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481cf5 : jne 0x481d29 ; add rsp, 0x38 ; ret
0x0000000000481db5 : jne 0x481de4 ; add rsp, 0x68 ; ret
0x0000000000481f16 : jne 0x481f54 ; add rsp, 0x78 ; ret
0x00000000004821e5 : jne 0x482214 ; add rsp, 0x68 ; ret
0x0000000000484221 : jne 0x484261 ; leave ; ret
0x00000000004846c1 : jne 0x4846ad ; mov rax, rsi ; ret
0x0000000000484745 : jne 0x484725 ; mov rax, rsi ; ret
0x0000000000484ecd : jne 0x484eda ; add rsp, 0x38 ; ret
0x0000000000484fb0 : jne 0x484fca ; add rsp, 0x38 ; ret
0x00000000004876c6 : jne 0x4876f0 ; ret
0x00000000004876c5 : jne 0x4876f1 ; ret
0x000000000048777b : jne 0x487782 ; pop rbx ; ret
0x000000000048830b : jne 0x488322 ; add rsp, 0x38 ; ret
0x0000000000488419 : jne 0x488433 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488500 : jne 0x48851b ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048aee9 : jne 0x48af0c ; xor eax, eax ; ret
0x000000000048aed1 : jne 0x48af11 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d100 : jne 0x48d121 ; mov rax, qword ptr [rax] ; ret
0x000000000048d16f : jne 0x48d17a ; mov qword ptr [rax], rdx ; ret
0x000000000048d4ce : jne 0x48d4c7 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d798 : jne 0x48d791 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dad3 : jne 0x48dacc ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e024 : jne 0x48e043 ; ret
0x000000000048e044 : jne 0x48e05c ; mov eax, 8 ; ret
0x000000000048e06f : jne 0x48e09e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e089 : jne 0x48e0a2 ; xor eax, eax ; ret
0x000000000048eecf : jne 0x48eefe ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048eee9 : jne 0x48ef02 ; xor eax, eax ; ret
0x000000000048f489 : jne 0x48f493 ; ret
0x000000000048f4a4 : jne 0x48f4b3 ; ret
0x000000000048f6d4 : jne 0x48f6e3 ; ret
0x000000000048f959 : jne 0x48f97c ; xor eax, eax ; ret
0x000000000048ff25 : jne 0x48ff18 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048ff70 : jne 0x48ff50 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004900b5 : jne 0x49009b ; pop rbx ; ret
0x00000000004901c3 : jne 0x4901ae ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490d7d : jne 0x490d66 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f01 : jne 0x490f18 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004920c7 : jne 0x491f8b ; call 0x41ebd8
0x00000000004a6d97 : jne 0x4a6d61 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a8d2b : jne 0x4a8d52 ; retf 0x32dd
0x00000000004b2c85 : jne 0x4b2c8d ; add byte ptr [rax + 5], bl ; cld ; jmp rdx
0x00000000004b2ccd : jne 0x4b2cd5 ; add al, dh ; or edi, esp ; jmp qword ptr [rax]
0x000000000042d04e : jno 0x42d05d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000438440 : jno 0x438449 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043867a : jno 0x438683 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004387e1 : jno 0x4387f2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000438946 : jno 0x4389ca ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000482ce4 : jno 0x482d36 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000419161 : jnp 0x41916d ; sub al, byte ptr [rax] ; ret
0x0000000000424751 : jnp 0x424784 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000424751 : jnp 0x424785 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000468974 : jnp 0x468974 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000478a09 : jnp 0x478a8b ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004a7745 : jnp 0x4a7702 ; ret
0x00000000004a8742 : jnp 0x4a87a0 ; retf
0x00000000004a8b49 : jnp 0x4a8b96 ; retf 0x99e0
0x00000000004a97a9 : jnp 0x4a97ea ; retf
0x00000000004056c6 : jns 0x405696 ; mov r15, r12 ; jmp 0x40569d
0x00000000004243ef : jns 0x4243f7 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000438447 : jns 0x43844a ; ret
0x0000000000438681 : jns 0x438684 ; ret
0x00000000004387e8 : jns 0x4387f3 ; ret
0x000000000043ec77 : jns 0x43ec52 ; retf 0xead3
0x000000000043edc7 : jns 0x43eda2 ; retf 0xead3
0x000000000043ef17 : jns 0x43eef2 ; retf 0xead3
0x000000000043f067 : jns 0x43f042 ; retf 0xead3
0x000000000043f1b7 : jns 0x43f192 ; retf 0xead3
0x000000000043f307 : jns 0x43f2e2 ; retf 0xead3
0x000000000043f457 : jns 0x43f432 ; retf 0xead3
0x000000000043f5a7 : jns 0x43f582 ; retf 0xead3
0x000000000043f6f7 : jns 0x43f6d2 ; retf 0xead3
0x000000000043f847 : jns 0x43f822 ; retf 0xead3
0x000000000043f997 : jns 0x43f972 ; retf 0xead3
0x000000000043fae7 : jns 0x43fac2 ; retf 0xead3
0x000000000043fc37 : jns 0x43fc12 ; retf 0xead3
0x000000000043fd87 : jns 0x43fd62 ; retf 0xead3
0x000000000043fed7 : jns 0x43feb2 ; retf 0xead3
0x000000000044b266 : jns 0x44b2b6 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000478ae0 : jns 0x478adf ; dec dword ptr [rax - 0x77] ; ret
0x000000000048adbe : jns 0x48adcb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d06e : jns 0x48d0b1 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048ddde : jns 0x48ddeb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048f9de : jns 0x48f9eb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a684e : jns 0x4a67e4 ; ret 0xf869
0x00000000004a684d : jns 0x4a67e5 ; ret 0xf869
0x00000000004a8c5e : jns 0x4a8cb5 ; jmp 0x4a8bf6
0x00000000004b30e5 : jns 0x4b30ed ; add byte ptr [rax], cl ; and al, 0xfc ; jmp qword ptr [rcx]
0x0000000000414594 : jo 0x4145e5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004145c4 : jo 0x414615 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044a20d : jo 0x44a211 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044bfc2 : jo 0x44bfe6 ; ret
0x0000000000452fb0 : jo 0x452fba ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000470a1a : jo 0x470a32 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000473d16 : jo 0x473d78 ; pop rbp ; pop r12 ; ret
0x0000000000473f2d : jo 0x473f8f ; pop rbp ; pop r12 ; ret
0x00000000004820d4 : jo 0x48213a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004920f4 : jo 0x4920f7 ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000493ef8 : jo 0x493f57 ; stc ; jmp rax
0x00000000004941ec : jo 0x494198 ; stc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x0000000000494240 : jo 0x4941f3 ; stc ; inc eax ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x00000000004943b8 : jo 0x494390 ; stc ; inc eax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000494610 : jo 0x494622 ; cli ; jmp rax
0x0000000000494688 : jo 0x494691 ; cli ; jmp rax
0x000000000049488c : jo 0x494894 ; cli ; call qword ptr [rax]
0x0000000000494ed4 : jo 0x494e63 ; cli ; call qword ptr [rax]
0x0000000000494ef4 : jo 0x494e90 ; cli ; call qword ptr [rax]
0x00000000004a78c4 : jo 0x4a793e ; mov ebp, 0xfb67d10d ; ret
0x00000000004ae904 : jo 0x4ae90b ; ret 0xa01
0x00000000004b0330 : jo 0x4b02ee ; stc ; jmp qword ptr [rcx]
0x00000000004b2e6c : jo 0x4b2eec ; add byte ptr [rax], al ; rcl byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x00000000004b3c25 : jo 0x4b3c2c ; retf
0x0000000000457162 : jp 0x45715c ; ret
0x0000000000478a0a : jp 0x478a09 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004a7a53 : jp 0x4a7a0d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004af7b5 : jp 0x4af7b2 ; call rsp
0x0000000000434b3a : jrcxz 0x434b35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b39 : jrcxz 0x434b36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043765a : jrcxz 0x437655 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437659 : jrcxz 0x437656 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044bd83 : jrcxz 0x44bd48 ; cmp r11d, 0xa ; je 0x44bd94 ; ret
0x00000000004681ff : jrcxz 0x468205 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004681fe : jrcxz 0x468206 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000047fa0e : jrcxz 0x47fa5c ; mov esi, ebx ; syscall
0x00000000004901c4 : jrcxz 0x490226 ; pop rbp ; pop r12 ; ret
0x00000000004a66a5 : jrcxz 0x4a66ff ; ret
0x00000000004a886d : jrcxz 0x4a8830 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004a93c9 : jrcxz 0x4a93ad ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000040e995 : js 0x40e9b9 ; call rdx
0x0000000000413788 : js 0x4137ba ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004718b9 : js 0x4718f1 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000047bbf2 : js 0x47bc05 ; pop rbx ; ret
0x000000000048d326 : js 0x48d333 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048d333 : js 0x48d33f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048fff3 : js 0x49006e ; ret 0x8b48
0x00000000004a87a8 : js 0x4a877c ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004a8741 : js 0x4a87c1 ; pop rdx ; retf
0x000000000046b203 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004b56ad : lahf ; add byte ptr [rax], al ; test ebp, edi ; call qword ptr [rbx]
0x00000000004563b5 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041efef : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000494f19 : lahf ; cli ; jmp qword ptr [rax]
0x00000000004a8d83 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e68b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000043f77d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045eacf : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a8672 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a8e74 : lahf ; push -0x57d3205 ; call 0xffffffffab585976
0x00000000004a6e80 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044a97b : lahf ; ret
0x0000000000418c6f : lahf ; ret 0x3949
0x0000000000418d22 : lahf ; ret 0x48e9
0x000000000044a831 : lahf ; ret 0x8545
0x00000000004a65dd : lahf ; ret 0x871e
0x0000000000448039 : lahf ; ret 0xea81
0x000000000048c6e1 : lahf ; ret 0xf45
0x00000000004941e1 : lahf ; stc ; call rax
0x0000000000446c95 : lahf ; xor al, 0x27 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000043fe0d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ab12 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000044e0ed : lcall [rbx + 0x5d] ; pop r12 ; jmp 0x45abe7
0x0000000000419370 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411ed5 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411c5b : lcall [rbx + 0x5d] ; ret
0x000000000047fcb6 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000041058e : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000004956bf : lcall [rdx + 0x3e] ; sti ; call qword ptr [rdx]
0x000000000049478b : lcall [rsi + 0x2efffa03] ; add edi, edx ; call rsp
0x00000000004351c6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004179bb : lea eax, [r8 - 1] ; ret
0x000000000048addc : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b364 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042b374 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000042b344 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000004179bc : lea eax, [rax - 1] ; ret
0x00000000004b446d : lea eax, [rax] ; add byte ptr [rax - 0x16], al ; cld ; jmp qword ptr [rcx]
0x00000000004733cd : lea eax, [rcx + rsi] ; ret
0x0000000000446824 : lea eax, [rcx - 1] ; ret
0x000000000044489c : lea eax, [rdi + 0x10] ; ret
0x00000000004448b1 : lea eax, [rdi + 0x11] ; ret
0x00000000004448cf : lea eax, [rdi + 0x12] ; ret
0x00000000004448ef : lea eax, [rdi + 0x13] ; ret
0x0000000000444912 : lea eax, [rdi + 0x14] ; ret
0x0000000000444931 : lea eax, [rdi + 0x15] ; ret
0x0000000000444951 : lea eax, [rdi + 0x16] ; ret
0x0000000000444971 : lea eax, [rdi + 0x17] ; ret
0x0000000000444994 : lea eax, [rdi + 0x18] ; ret
0x00000000004449b9 : lea eax, [rdi + 0x19] ; ret
0x00000000004449d7 : lea eax, [rdi + 0x1a] ; ret
0x00000000004449f7 : lea eax, [rdi + 0x1b] ; ret
0x0000000000444a13 : lea eax, [rdi + 0x1c] ; ret
0x0000000000444a33 : lea eax, [rdi + 0x1d] ; ret
0x0000000000444a53 : lea eax, [rdi + 0x1e] ; ret
0x0000000000444a73 : lea eax, [rdi + 0x1f] ; ret
0x00000000004447ed : lea eax, [rdi + 0xa] ; ret
0x000000000044480d : lea eax, [rdi + 0xb] ; ret
0x000000000044482f : lea eax, [rdi + 0xc] ; ret
0x000000000044484f : lea eax, [rdi + 0xd] ; ret
0x000000000044486f : lea eax, [rdi + 0xe] ; ret
0x0000000000444889 : lea eax, [rdi + 0xf] ; ret
0x0000000000444737 : lea eax, [rdi + 1] ; ret
0x000000000044474a : lea eax, [rdi + 2] ; ret
0x0000000000444755 : lea eax, [rdi + 3] ; ret
0x0000000000444768 : lea eax, [rdi + 4] ; ret
0x000000000044477d : lea eax, [rdi + 5] ; ret
0x000000000044479b : lea eax, [rdi + 6] ; ret
0x00000000004447a7 : lea eax, [rdi + 7] ; ret
0x00000000004447ba : lea eax, [rdi + 8] ; ret
0x00000000004447cf : lea eax, [rdi + 9] ; ret
0x000000000042b399 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000042b3a9 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000042b2a3 : lea eax, [rdi + rax + 0x30] ; ret
0x0000000000473615 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440307 : lea eax, [rdi + rax] ; ret
0x0000000000446b7a : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004732c9 : lea eax, [rdi + rsi] ; ret
0x0000000000444723 : lea eax, [rdi] ; ret
0x0000000000443d0d : lea eax, [rdx + 0xa] ; ret
0x0000000000443d2d : lea eax, [rdx + 0xb] ; ret
0x0000000000443d4f : lea eax, [rdx + 0xc] ; ret
0x0000000000443d6f : lea eax, [rdx + 0xd] ; ret
0x0000000000443d8f : lea eax, [rdx + 0xe] ; ret
0x0000000000443c1f : lea eax, [rdx + 0xf] ; ret
0x0000000000443c47 : lea eax, [rdx + 1] ; ret
0x0000000000443c5d : lea eax, [rdx + 2] ; ret
0x0000000000443c75 : lea eax, [rdx + 3] ; ret
0x0000000000443c8b : lea eax, [rdx + 4] ; ret
0x0000000000443c9d : lea eax, [rdx + 5] ; ret
0x0000000000443cbb : lea eax, [rdx + 6] ; ret
0x0000000000443bc7 : lea eax, [rdx + 7] ; ret
0x0000000000443ccd : lea eax, [rdx + 8] ; ret
0x0000000000443ced : lea eax, [rdx + 9] ; ret
0x00000000004179ae : lea eax, [rdx + rdi] ; ret
0x0000000000448153 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000422d36 : lea eax, [rdx - 0x10] ; ret
0x0000000000443c35 : lea eax, [rdx] ; ret
0x00000000004247a8 : lea eax, [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000423848 : lea eax, [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x000000000042435f : lea eax, [rip + 0x221ab] ; cmove rax, rdx ; ret
0x00000000004246e8 : lea eax, [rip + 0x22732] ; cmovne rax, rdx ; ret
0x00000000004245a8 : lea eax, [rip + 0x22862] ; cmovne rax, rdx ; ret
0x0000000000424448 : lea eax, [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x000000000042474f : lea eax, [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x000000000042460f : lea eax, [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x00000000004244af : lea eax, [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x000000000042472e : lea eax, [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x00000000004245ee : lea eax, [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x000000000042448e : lea eax, [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x00000000004237cf : lea eax, [rip + 0x231db] ; cmovne rax, rdx ; ret
0x000000000042451a : lea eax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x00000000004244fd : lea eax, [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x000000000042454e : lea eax, [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000044d351 : lea eax, [rip + 0x26cfa9] ; ret
0x000000000048506f : lea eax, [rip + 0x5b] ; cmovne rax, rdx ; ret
0x0000000000424778 : lea eax, [rip + 0x6c52] ; cmove rax, rdx ; ret
0x0000000000424388 : lea eax, [rip + 0x6d12] ; cmove rax, rdx ; ret
0x00000000004243ec : lea eax, [rip + 0x79ee] ; je 0x4243c3 ; ret
0x00000000004727e8 : lea eax, [rip + 0x9f2] ; cmove rax, rdx ; ret
0x0000000000473bf8 : lea eax, [rip + 0xa22] ; cmove rax, rdx ; ret
0x00000000004727b8 : lea eax, [rip + 0xee2] ; cmove rax, rdx ; ret
0x000000000046b32c : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46b308
0x000000000045f751 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e021 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a6e91 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473dcb : lea ecx, [rax + 1] ; call rbx
0x0000000000473f66 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000472204 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042d8b0 : lea ecx, [rbx + rcx] ; jmp r9
0x0000000000443fbe : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000468df4 : lea ecx, [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x00000000004858a4 : lea ecx, [rdx + rcx*8] ; jmp 0x4858b6
0x0000000000422d46 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000484360 : lea ecx, [rdx] ; jmp 0x4843b6
0x0000000000488180 : lea ecx, [rdx] ; jmp 0x4881d6
0x00000000004759f7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000472010 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000471f2b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473eee : lea ecx, [rsp + 0x20] ; call rbx
0x00000000004740dc : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473dc6 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000044c63f : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004035de : lea edi, [rip + 0x2b88bc] ; call 8
0x0000000000403598 : lea edi, [rip + 0x2b8902] ; call 8
0x00000000004010d1 : lea edi, [rsp + 0x60] ; call 0x40dae6
0x00000000004182d1 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004858a0 : lea edx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x4858ba
0x0000000000471d87 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042d984 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000424846 : lea edx, [rdx + rcx] ; jmp r10
0x000000000042dd78 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000424463 : lea edx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x00000000004237af : lea edx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x000000000042463f : lea edx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x00000000004243d4 : lea edx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000423748 : lea edx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x000000000042377f : lea edx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047432a : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000423889 : lea edx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000424703 : lea edx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x00000000004245c3 : lea edx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048dc51 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046b77d : lea esi, [rip + 0x24b69d] ; jmp rax
0x0000000000446e9f : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004741b9 : lea esi, [rsp + 0x20] ; call 0x400446
0x000000000046a51f : lea esp, [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047e1a6 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x0000000000424845 : lea r10, [r10 + r9] ; jmp r10
0x000000000048dc50 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x00000000004741b8 : lea r14, [rsp + 0x20] ; call 0x400447
0x000000000042d8af : lea r9, [r11 + r9] ; jmp r9
0x0000000000472203 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000048435f : lea r9, [rdx] ; jmp 0x4843b7
0x000000000048817f : lea r9, [rdx] ; jmp 0x4881d7
0x000000000047200f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000471f2a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473eed : lea r9, [rsp + 0x20] ; call rbx
0x00000000004740db : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473dc5 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000048addb : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b363 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042b373 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000042b343 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000004733cc : lea rax, [rcx + rsi] ; ret
0x0000000000446823 : lea rax, [rcx - 1] ; ret
0x000000000044489b : lea rax, [rdi + 0x10] ; ret
0x00000000004448b0 : lea rax, [rdi + 0x11] ; ret
0x00000000004448ce : lea rax, [rdi + 0x12] ; ret
0x00000000004448ee : lea rax, [rdi + 0x13] ; ret
0x0000000000444911 : lea rax, [rdi + 0x14] ; ret
0x0000000000444930 : lea rax, [rdi + 0x15] ; ret
0x0000000000444950 : lea rax, [rdi + 0x16] ; ret
0x0000000000444970 : lea rax, [rdi + 0x17] ; ret
0x0000000000444993 : lea rax, [rdi + 0x18] ; ret
0x00000000004449b8 : lea rax, [rdi + 0x19] ; ret
0x00000000004449d6 : lea rax, [rdi + 0x1a] ; ret
0x00000000004449f6 : lea rax, [rdi + 0x1b] ; ret
0x0000000000444a12 : lea rax, [rdi + 0x1c] ; ret
0x0000000000444a32 : lea rax, [rdi + 0x1d] ; ret
0x0000000000444a52 : lea rax, [rdi + 0x1e] ; ret
0x0000000000444a72 : lea rax, [rdi + 0x1f] ; ret
0x00000000004447ec : lea rax, [rdi + 0xa] ; ret
0x000000000044480c : lea rax, [rdi + 0xb] ; ret
0x000000000044482e : lea rax, [rdi + 0xc] ; ret
0x000000000044484e : lea rax, [rdi + 0xd] ; ret
0x000000000044486e : lea rax, [rdi + 0xe] ; ret
0x0000000000444888 : lea rax, [rdi + 0xf] ; ret
0x0000000000444736 : lea rax, [rdi + 1] ; ret
0x0000000000444749 : lea rax, [rdi + 2] ; ret
0x0000000000444754 : lea rax, [rdi + 3] ; ret
0x0000000000444767 : lea rax, [rdi + 4] ; ret
0x000000000044477c : lea rax, [rdi + 5] ; ret
0x000000000044479a : lea rax, [rdi + 6] ; ret
0x00000000004447a6 : lea rax, [rdi + 7] ; ret
0x00000000004447b9 : lea rax, [rdi + 8] ; ret
0x00000000004447ce : lea rax, [rdi + 9] ; ret
0x000000000042b398 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b3a8 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b2a2 : lea rax, [rdi + rax + 0x30] ; ret
0x0000000000473614 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440306 : lea rax, [rdi + rax] ; ret
0x0000000000446b79 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004732c8 : lea rax, [rdi + rsi] ; ret
0x0000000000444722 : lea rax, [rdi] ; ret
0x0000000000443d0c : lea rax, [rdx + 0xa] ; ret
0x0000000000443d2c : lea rax, [rdx + 0xb] ; ret
0x0000000000443d4e : lea rax, [rdx + 0xc] ; ret
0x0000000000443d6e : lea rax, [rdx + 0xd] ; ret
0x0000000000443d8e : lea rax, [rdx + 0xe] ; ret
0x0000000000443c1e : lea rax, [rdx + 0xf] ; ret
0x0000000000443c46 : lea rax, [rdx + 1] ; ret
0x0000000000443c5c : lea rax, [rdx + 2] ; ret
0x0000000000443c74 : lea rax, [rdx + 3] ; ret
0x0000000000443c8a : lea rax, [rdx + 4] ; ret
0x0000000000443c9c : lea rax, [rdx + 5] ; ret
0x0000000000443cba : lea rax, [rdx + 6] ; ret
0x0000000000443bc6 : lea rax, [rdx + 7] ; ret
0x0000000000443ccc : lea rax, [rdx + 8] ; ret
0x0000000000443cec : lea rax, [rdx + 9] ; ret
0x0000000000422d35 : lea rax, [rdx - 0x10] ; ret
0x0000000000443c34 : lea rax, [rdx] ; ret
0x000000000044d350 : lea rax, [rip + 0x26cfa9] ; ret
0x000000000046b32b : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46b309
0x000000000040e020 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000443fbd : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000473dca : lea rcx, [rax + 1] ; call rbx
0x0000000000473f65 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004858a3 : lea rcx, [rdx + rcx*8] ; jmp 0x4858b7
0x0000000000422d45 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x00000000004759f6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044c63e : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004035dd : lea rdi, [rip + 0x2b88bc] ; call 9
0x0000000000403597 : lea rdi, [rip + 0x2b8902] ; call 9
0x00000000004010d0 : lea rdi, [rsp + 0x60] ; call 0x40dae7
0x000000000042d983 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048589f : lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x4858bb
0x000000000042dd77 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000046b77c : lea rsi, [rip + 0x24b69d] ; jmp rax
0x0000000000446e9e : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000429dd7 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042acb7 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004578fa : leave ; call r15
0x00000000004b3b61 : leave ; hlt ; jmp qword ptr [rcx]
0x0000000000446600 : leave ; jne 0x4465f3 ; ret
0x00000000004466b0 : leave ; jne 0x4466a3 ; ret
0x0000000000446970 : leave ; jne 0x446967 ; sub rax, 1 ; ret
0x00000000004745fa : leave ; jne 0x4745b7 ; mov rax, rdx ; ret
0x0000000000446b78 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048ad90 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046bc96 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400baa : leave ; ret
0x00000000004a8874 : leave ; retf
0x00000000004a7041 : leave ; retf 0x6ee8
0x00000000004a6169 : leave ; retf 0xcccb
0x0000000000473eea : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000495e6f : ljmp [rax] ; imul edi, ebx, -1 ; add byte ptr [rbx - 5], ch ; jmp rax
0x000000000049408f : ljmp [rax] ; mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000494bcf : ljmp [rcx + rbp - 6] ; call qword ptr [rdx]
0x0000000000494d0b : ljmp [rdx + 0x3afffa29] ; sub edx, edi ; jmp rax
0x000000000049478f : ljmp [rsi] ; add edi, edx ; call rsp
0x000000000042c59e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f177 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410110 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000445f80 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004a8766 : lodsb al, byte ptr [rsi] ; loop 0x4a8733 ; retf
0x000000000042a3d4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a951d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000461170 : lodsb al, byte ptr [rsi] ; pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a6d9b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004611c7 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a8b45 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000482e52 : lodsd eax, dword ptr [rsi] ; ret
0x000000000048f7af : lodsd eax, dword ptr [rsi] ; retf
0x00000000004121ad : loop 0x4121af ; add rdx, rcx ; jmp 0x4121c5
0x00000000004219de : loop 0x421a31 ; mov esi, ebx ; mov rdi, r13 ; call 0x41dc29
0x0000000000425e9d : loop 0x425ed5 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434aaa : loop 0x434aa5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434aa9 : loop 0x434aa6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004375ca : loop 0x4375c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004375c9 : loop 0x4375c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044811f : loop 0x448139 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044bfd3 : loop 0x44c026 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000468df9 : loop 0x468e40 ; call qword ptr [rdx + rax*8]
0x00000000004727ba : loop 0x4727d1 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004727ba : loop 0x4727d2 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047582e : loop 0x4757f6 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004870e1 : loop 0x4870ec ; add rdx, rax ; jmp 0x4870f5
0x000000000048d089 : loop 0x48d0d8 ; add esp, 0x18 ; ret
0x00000000004a8767 : loop 0x4a8732 ; retf
0x00000000004a98ba : loop 0x4a990f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000434a1a : loope 0x434a15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a19 : loope 0x434a16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043753a : loope 0x437535 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437539 : loope 0x437536 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000444cab : loope 0x444cb5 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000044869e : loope 0x448695 ; ret
0x000000000044e02e : loope 0x44e03b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004524eb : loope 0x4524e8 ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004747fe : loope 0x474813 ; je 0x474824 ; ret
0x000000000047c98b : loope 0x47c991 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482ce7 : loope 0x482d39 ; mov dword ptr [rdi], ecx ; ret
0x0000000000482d18 : loope 0x482d6b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482d8d : loope 0x482de0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004900b6 : loope 0x490115 ; ret
0x0000000000490d7e : loope 0x490de0 ; pop rbp ; pop r12 ; ret
0x00000000004a8871 : loope 0x4a88f3 ; pop rdx ; leave ; retf
0x000000000040f8e7 : loopne 0x40f94d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041c92c : loopne 0x41c940 ; xchg eax, esp ; ret 0x3de9
0x00000000004222af : loopne 0x422315 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042ddd1 : loopne 0x42dde8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ddd0 : loopne 0x42dde9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042df21 : loopne 0x42df38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042df20 : loopne 0x42df39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e071 : loopne 0x42e088 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e070 : loopne 0x42e089 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e1c1 : loopne 0x42e1d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e1c0 : loopne 0x42e1d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e311 : loopne 0x42e328 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e310 : loopne 0x42e329 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e461 : loopne 0x42e478 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e460 : loopne 0x42e479 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e5b1 : loopne 0x42e5c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e5b0 : loopne 0x42e5c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e6ff : loopne 0x42e716 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e6fe : loopne 0x42e717 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e851 : loopne 0x42e868 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e850 : loopne 0x42e869 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9a1 : loopne 0x42e9b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9a0 : loopne 0x42e9b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eaf1 : loopne 0x42eb08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eaf0 : loopne 0x42eb09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec41 : loopne 0x42ec58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec40 : loopne 0x42ec59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ed91 : loopne 0x42eda8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ed90 : loopne 0x42eda9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eee1 : loopne 0x42eef8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eee0 : loopne 0x42eef9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f031 : loopne 0x42f048 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f030 : loopne 0x42f049 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004307a1 : loopne 0x4307b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004307a0 : loopne 0x4307b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308f1 : loopne 0x430908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308f0 : loopne 0x430909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a41 : loopne 0x430a58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a40 : loopne 0x430a59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b91 : loopne 0x430ba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b90 : loopne 0x430ba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ce1 : loopne 0x430cf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ce0 : loopne 0x430cf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e31 : loopne 0x430e48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e30 : loopne 0x430e49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f81 : loopne 0x430f98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f80 : loopne 0x430f99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310cf : loopne 0x4310e6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310ce : loopne 0x4310e7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431221 : loopne 0x431238 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431220 : loopne 0x431239 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431371 : loopne 0x431388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431370 : loopne 0x431389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314c1 : loopne 0x4314d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314c0 : loopne 0x4314d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431611 : loopne 0x431628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431610 : loopne 0x431629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431761 : loopne 0x431778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431760 : loopne 0x431779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318b1 : loopne 0x4318c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318b0 : loopne 0x4318c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a01 : loopne 0x431a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a00 : loopne 0x431a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044808d : loopne 0x4480a7 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044bde8 : loopne 0x44bdfd ; cmp eax, 4 ; je 0x44bdf7 ; ret
0x000000000044e032 : loopne 0x44e095 ; pop r12 ; ret
0x0000000000454e4d : loopne 0x454ec8 ; jae 0x454dde ; retf 0xb941
0x000000000046361f : loopne 0x4635ac ; ret
0x000000000046d771 : loopne 0x46d777 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046ec99 : loopne 0x46ecfd ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f475 : loopne 0x46f4d9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004826bd : loopne 0x4826c6 ; sub eax, 1 ; ret
0x0000000000493e10 : loopne 0x493e1f ; stc ; jmp qword ptr [rax]
0x0000000000493e20 : loopne 0x493e34 ; stc ; jmp qword ptr [rax]
0x0000000000493e30 : loopne 0x493e49 ; stc ; jmp qword ptr [rax]
0x0000000000493e40 : loopne 0x493e5e ; stc ; jmp qword ptr [rax]
0x0000000000493f8c : loopne 0x493f25 ; stc ; jmp qword ptr [rip - 0x2e000672]
0x0000000000493f20 : loopne 0x493f8b ; stc ; call rax
0x00000000004941bc : loopne 0x494176 ; stc ; call rax
0x00000000004943a4 : loopne 0x494373 ; stc ; push qword ptr [rax] ; retf 0xfff9
0x00000000004943a4 : loopne 0x494377 ; stc ; push qword ptr [rax] ; retf 0xfff9
0x0000000000494fbc : loopne 0x494fb8 ; cli ; inc dword ptr [rax] ; hlt ; cli ; jmp qword ptr [rax]
0x0000000000494ff0 : loopne 0x494ff0 ; cli ; push rax ; idiv edx ; call qword ptr [rax]
0x00000000004a6e94 : loopne 0x4a6e74 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2af0 : loopne 0x4b2af1 ; sti ; jmp qword ptr [rbx]
0x00000000004a68aa : mov ah, 0x13 ; ret
0x0000000000491ffa : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049175a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000494abc : mov ah, 0x35 ; cli ; inc dword ptr [rbp + rsi - 6] ; call rsp
0x00000000004af7b0 : mov ah, 0x40 ; add byte ptr [rax], al ; pop rsp ; jp 0x4af7b7 ; call rsp
0x00000000004abb9c : mov ah, 0x94 ; cmc ; call rsp
0x00000000004a6d50 : mov ah, 0xa5 ; ret
0x00000000004945c4 : mov ah, 0xe ; cli ; inc dword ptr [rsi + rcx - 6] ; call rsp
0x00000000004adb39 : mov ah, 0xf6 ; call qword ptr [rdx]
0x00000000004941b9 : mov ah, 0xf9 ; jmp rax
0x0000000000494199 : mov ah, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; jmp qword ptr [rax]
0x00000000004a66a4 : mov ah, bl ; push rsi ; ret
0x00000000004919a2 : mov ah, ch ; idiv edi ; call 0x40dc06
0x000000000048aed6 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004578f4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000494628 : mov al, 0x11 ; cli ; inc dword ptr [rax + 0x11] ; cli ; call rax
0x0000000000493e54 : mov al, 0x22 ; stc ; call rax
0x0000000000494d84 : mov al, 0x2a ; cli ; jmp qword ptr [rax]
0x0000000000400dd8 : mov al, 0x2b ; add bh, dh ; ret 0
0x0000000000400dac : mov al, 0x2b ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x0000000000494b80 : mov al, 0x2b ; cli ; jmp qword ptr [rax]
0x0000000000493e74 : mov al, 0x2b ; stc ; call rax
0x0000000000494948 : mov al, 0x34 ; cli ; inc dword ptr [rax + 0x34] ; cli ; call rsi
0x0000000000494b20 : mov al, 0x38 ; cli ; inc dword ptr [rax + 0x38] ; cli ; call rax
0x0000000000494e58 : mov al, 0x4b ; cli ; inc eax ; cli ; call rax
0x0000000000493ee8 : mov al, 0x54 ; stc ; jmp qword ptr [rax]
0x00000000004b56ac : mov al, 0x9f ; add byte ptr [rax], al ; test ebp, edi ; call qword ptr [rbx]
0x00000000004406cf : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000048d77f : mov al, 0xe8 ; retf
0x000000000044fd50 : mov al, 0xe8 ; retf 0xffad
0x00000000004a8b56 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000040465f : mov al, 0xf ; retf
0x0000000000494f50 : mov al, 0xf1 ; cli ; inc eax ; int1 ; cli ; call rax
0x0000000000494f90 : mov al, 0xf2 ; cli ; inc eax ; cli ; jmp rax
0x000000000049281d : mov al, 0xf7 ; jmp qword ptr [rax]
0x000000000049500c : mov al, 0xf8 ; cli ; inc eax ; clc ; cli ; call rax
0x0000000000495030 : mov al, 0xf9 ; cli ; call rax
0x00000000004b1959 : mov al, 0xfa ; call qword ptr [rax]
0x00000000004b1941 : mov al, 0xfa ; call qword ptr [rbx]
0x00000000004b196d : mov al, 0xfa ; call qword ptr [rdx]
0x000000000046362b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x00000000004424a6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000004424c4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443c30 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000442480 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000442490 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004357e1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004a8be0 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x0000000000457f54 : mov bh, 0x43 ; add al, 0x89 ; retf
0x0000000000457acf : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000444b48 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004a8eb8 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004a7b84 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a6166 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x0000000000413319 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004245c5 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000049411d : mov bh, 0xf9 ; call qword ptr [rax]
0x00000000004940fd : mov bh, 0xf9 ; inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x000000000049413d : mov bh, 0xf9 ; jmp rax
0x000000000041da23 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000048f657 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487cfc : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a9293 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000045ab2a : mov bh, bh ; and eax, 0xf3087400 ; ret
0x0000000000494ed5 : mov bh, dl ; call qword ptr [rax]
0x000000000044643e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a8f1b : mov bl, 0x29 ; retf 0xbf4b
0x00000000004745fc : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045a362 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a8c63 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000415ab3 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004a8f00 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004ada61 : mov bl, 0xf6 ; call qword ptr [rsi]
0x0000000000494095 : mov bl, 0xf9 ; call rax
0x0000000000494135 : mov bl, 0xf9 ; jmp qword ptr [rax]
0x0000000000494155 : mov bl, 0xf9 ; jmp rax
0x00000000004a6881 : mov bx, 0xf32d ; retf
0x000000000044e2fa : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x000000000044bfaa : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004a288c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000044e2fb : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000004b0e58 : mov byte ptr [rax], ah ; cli ; call qword ptr [rdi]
0x000000000044bb4f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d74 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b2c84 : mov byte ptr [rbp], dh ; add byte ptr [rax + 5], bl ; cld ; jmp rdx
0x000000000046eb87 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000459e63 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048ad94 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000405d8f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045e9e3 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000444898 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000444208 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044490e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x000000000044425e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444990 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000004442e0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004b4e84 : mov byte ptr [rdi + 0x36980000], dl ; std ; jmp qword ptr [rcx]
0x0000000000444746 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444126 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000444762 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444142 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000444183 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a8f15 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000042f3fb : mov byte ptr [rdi - 1], dl ; ret
0x0000000000412900 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000438522 : mov byte ptr [rdi], cl ; ret
0x0000000000447e05 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000444720 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444100 : mov byte ptr [rdi], dh ; ret
0x0000000000435853 : mov byte ptr [rdi], dl ; ret
0x0000000000443c59 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000004424a9 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443c87 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000004424c7 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443c32 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000442482 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048b900 : mov byte ptr [rip + 0x2308a9], 8 ; ret
0x0000000000400b16 : mov byte ptr [rip + 0x2ba7c3], 1 ; pop rbp ; ret
0x000000000041dbd9 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004846bf : mov byte ptr [rsi], al ; jne 0x4846af ; mov rax, rsi ; ret
0x0000000000484743 : mov byte ptr [rsi], al ; jne 0x484727 ; mov rax, rsi ; ret
0x00000000004956bc : mov byte ptr [rsi], bh ; sti ; lcall [rdx + 0x3e] ; sti ; call qword ptr [rdx]
0x00000000004a66a2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a79e3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000040f332 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x40f305
0x000000000045cffa : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x45cfcd
0x00000000004a8676 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a8d7f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a972a : mov ch, 0xab ; ret
0x0000000000471397 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004adbd9 : mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004941bd : mov ch, 0xf9 ; call rax
0x0000000000494139 : mov ch, 0xf9 ; inc dword ptr [rax] ; mov bh, 0xf9 ; jmp rax
0x0000000000494119 : mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x000000000042d116 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044f660 : mov cl, 0x35 ; retf 0x26d2
0x0000000000417640 : mov cl, 0x35 ; retf 0x2a46
0x00000000004a9181 : mov cl, 0x3f ; retf
0x0000000000493fb8 : mov cl, 0x94 ; stc ; inc dword ptr [rcx - 0x6b] ; stc ; call rcx
0x000000000045126b : mov cl, 0xf ; retf 0xd285
0x0000000000494131 : mov cl, 0xf9 ; inc dword ptr [rax - 0x4d] ; stc ; jmp qword ptr [rax]
0x0000000000494151 : mov cl, 0xf9 ; inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x000000000045aa67 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043ad05 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000424844 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a8b52 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042bf64 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000438520 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004747fb : mov cl, dl ; and cl, 0xf ; je 0x474827 ; ret
0x00000000004a8e0c : mov cs, edi ; ret 0x8b36
0x00000000004680b2 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043f28e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000444120 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004847ea : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048dfbf : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004166c2 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412baf : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418750 : mov dh, 0 ; ret
0x0000000000494458 : mov dh, 0x13 ; cli ; inc dword ptr [rsi + 0x13] ; cli ; call rsi
0x0000000000435851 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042bab4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dad4 : mov dh, 0x17 ; test dl, dl ; jne 0x40daba ; ret
0x000000000046668e : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000456868 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046eb9c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045687e : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040d9f9 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000456892 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004694db : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000446011 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446001 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000445fd1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000445ff1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000445fe1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045e0d9 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000487fa7 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x000000000045429d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x00000000004542de : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004a7b42 : mov dh, 0x4e ; ret 0x474c
0x0000000000446015 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000446005 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000445fd5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000445fe5 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000463348 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x0000000000405f2a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040ee94 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004553a6 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000048bcf1 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000455391 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000004553bb : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004556e4 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000478c4f : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000494000 : mov dh, 0x95 ; stc ; inc dword ptr [rsi - 0x6a] ; stc ; jmp rsi
0x0000000000475802 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048c006 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046e918 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000048835d : mov dh, 0xc0 ; neg eax ; ret
0x0000000000484c2a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e7d1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000004480f1 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000004154c2 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8d84 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048ad8f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000494450 : mov dh, 0xd ; cli ; jmp qword ptr [rsi]
0x000000000042bada : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c53f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000446f19 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000425bf1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042bf74 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000049419d : mov dh, 0xf9 ; jmp qword ptr [rax]
0x000000000040d535 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000004166d1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412bc1 : mov dh, 2 ; ret
0x000000000042bf71 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bab1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425bf4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000044869c : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000490d31 : mov dl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004949f4 : mov dl, 0x36 ; cli ; inc dword ptr [rdx + 0x36] ; cli ; call rdx
0x000000000040ea3d : mov dl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000413702 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000413088 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x00000000004944fc : mov dl, 0xf ; cli ; inc dword ptr [rdx + 0xf] ; cli ; call rdx
0x00000000004941b5 : mov dl, 0xf9 ; inc dword ptr [rax] ; mov ah, 0xf9 ; jmp rax
0x00000000004940b1 : mov dl, 0xf9 ; jmp rax
0x0000000000494091 : mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000494ed1 : mov dl, bh ; push qword ptr [rax - 0x76] ; cli ; call qword ptr [rax]
0x00000000004b06b8 : mov dl, bl ; stc ; jmp qword ptr [rax]
0x000000000042f480 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000462525 : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004a919e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000438516 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000438501 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044bf41 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x00000000004709d9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470a19 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471a18 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044bfa7 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044bfc1 : mov dword ptr [rax + 0x20], esi ; ret
0x00000000004709dd : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000471a9a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000450a7f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000450a82 : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004173e5 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044bf45 : mov dword ptr [rax + 8], edx ; ret
0x000000000045c433 : mov dword ptr [rax - 6], eax ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000465f5d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f222 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041dc0a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000484ded : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484d3d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041a712 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484de1 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d172 : mov dword ptr [rax], edx ; ret
0x0000000000471d8b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c661 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x0000000000480faf : mov dword ptr [rbp - 0x70], eax ; mov eax, 0x15 ; syscall
0x00000000004696cf : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x000000000040358c : mov dword ptr [rbp - 0x98], ecx ; call 8
0x000000000047d001 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000458752 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004129d7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481c3e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412dbf : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047f94e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485af3 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485ac7
0x0000000000481b73 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488385 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000488459 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045acfd : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000416a7d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416561 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000471c4a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004181fd : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414592 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470a64 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000471911 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458767 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004855b3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000416a0c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a3b9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000416a80 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040359b : mov dword ptr [rbx], ebp ; add al, ch ; pop rbp ; retf 0xffbf
0x0000000000402e4e : mov dword ptr [rbx], ebp ; add byte ptr [rax + 1], cl ; retf 0x8948
0x00000000004128d5 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471a1b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000004100d1 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400d2e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000450dd5 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000438517 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000438502 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000004384f1 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000449bc4 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x449b97
0x00000000004494ea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000419144 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x00000000004448ad : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000004448eb : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000044496d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000044425b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004442dd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044421d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444320 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444340 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444301 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000004449d3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000444323 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000416443 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004449b5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000004449f3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000444305 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000419141 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b605 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b5d7 : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000416473 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d1b1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000044492d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000044427d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000004448cb : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000044494d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000044423b : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435695 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004354d8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435778 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435625 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435468 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444797 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000004355b5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004353f8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444167 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000444779 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000435388 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444159 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044482b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435318 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004441cb : mov dword ptr [rdi + 5], edx ; ret
0x000000000044484b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000004352a8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004441db : mov dword ptr [rdi + 6], edx ; ret
0x00000000004447e9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000044486b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000435238 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004441a9 : mov dword ptr [rdi + 7], edx ; ret
0x000000000048460e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000416447 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000482e24 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000444809 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000004447cb : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x00000000004842c4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000044419b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000447cab : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000446f45 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000447ca3 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000447e25 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000446f35 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000447c9b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000446f27 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d15c : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042f145 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f183 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482d8f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042f4cc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ce8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f6ac : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c68 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f89c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434be8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fa6d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b59 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fc6d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ac9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fe6d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a39 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f84d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042f665 : mov dword ptr [rdi - 2], edx ; ret
0x000000000042f849 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fc29 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f2ff : mov dword ptr [rdi - 4], edx ; ret
0x000000000042fc26 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fe26 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430026 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f149 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042f187 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042f2fc : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f3f8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f344 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d68 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000482d14 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e1e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004686da : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000444765 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004447b7 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x0000000000444744 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444124 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000444795 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000444165 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004447e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000004441a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444807 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000004441b7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000446c77 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000004441c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000004441d8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000004441e8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444156 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444198 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000446c83 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043523c : mov dword ptr [rdi], ecx ; ret
0x0000000000447e1f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000444734 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x0000000000444752 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004447a4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x0000000000435544 : mov dword ptr [rdi], edx ; ret
0x00000000004384ff : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484496 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004384ee : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000438513 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000446f2c : mov dword ptr [rdi], esi ; ret
0x000000000042dd62 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000412a55 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000443cb7 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000004424e7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000443c99 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000004424d9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000443d4b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000443cc9 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000004424f9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443d6b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000443ce9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000442509 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000443d09 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x0000000000443d8b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000442519 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000046b330 : mov dword ptr [rdx + 8], eax ; jmp 0x46b304
0x0000000000443d29 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000443c1b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x000000000044246b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000418370 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x0000000000443c44 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000443c72 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000443bc4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000044957a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484498 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004845f5 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044982a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000442414 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484dcd : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004182d8 : mov dword ptr [rdx], eax ; ret
0x00000000004900af : mov dword ptr [rip + 0x22bc3b], ebx ; jne 0x4900a1 ; pop rbx ; ret
0x00000000004848f8 : mov dword ptr [rip + 0x23776a], eax ; ret
0x000000000047f225 : mov dword ptr [rip + 0x23d185], eax ; ret
0x000000000045ab28 : mov dword ptr [rip + 0x25ff8a], edx ; je 0x45ab41 ; ret
0x000000000044d386 : mov dword ptr [rip + 0x26b72c], edx ; pop rbx ; ret
0x000000000041f786 : mov dword ptr [rip + 0x29a0d4], eax ; ret
0x00000000004196ac : mov dword ptr [rip + 0x2a01ae], eax ; ret
0x00000000004191a7 : mov dword ptr [rip + 0x2a0643], eax ; ret
0x00000000004191be : mov dword ptr [rip + 0x2a0648], eax ; ret
0x000000000041917f : mov dword ptr [rip + 0x2a0663], eax ; ret
0x000000000041915f : mov dword ptr [rip + 0x2a067b], eax ; ret
0x0000000000419055 : mov dword ptr [rip + 0x2a07ed], eax ; ret
0x0000000000419045 : mov dword ptr [rip + 0x2a07f5], eax ; ret
0x0000000000419033 : mov dword ptr [rip + 0x2a07f7], edx ; ret
0x0000000000418ff5 : mov dword ptr [rip + 0x2a07fd], eax ; ret
0x0000000000418fe5 : mov dword ptr [rip + 0x2a0815], eax ; ret
0x00000000004191d4 : mov dword ptr [rip + 0x2a2bba], eax ; ret
0x00000000004017a3 : mov dword ptr [rsi + 0x10], esi ; syscall
0x0000000000446c86 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000446c79 : mov dword ptr [rsi - 4], ecx ; ret
0x00000000004787f1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d19e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f392 : mov dword ptr [rsi], eax ; ret
0x000000000047e6d9 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045d09a : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x45d066
0x000000000041c94a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041ca07 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000004239ef : mov dword ptr [rsp + 0x18], eax ; call 0x40047e
0x000000000045116c : mov dword ptr [rsp + 0x50], eax ; call 0x44d3c6
0x000000000041c94f : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000040952b : mov dword ptr [rsp + 8], ecx ; call 0x406036
0x00000000004111de : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041cf64 : mov dword ptr [rsp + 8], edx ; call 0x419206
0x000000000041cf63 : mov dword ptr [rsp + 8], r10d ; call 0x419207
0x0000000000489b63 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004132b2 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x00000000004165c5 : mov dword ptr [rsp], edi ; call 0x412855
0x0000000000465f5c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f221 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000047590c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000449bc3 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x449b98
0x00000000004494e9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000449579 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000446f34 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f660 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000444110 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400ba5 : mov eax, 0 ; leave ; ret
0x000000000044816b : mov eax, 0x10 ; pop rbx ; ret
0x0000000000475649 : mov eax, 0x101 ; syscall
0x00000000004755c2 : mov eax, 0x106 ; syscall
0x000000000044a327 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000047dea9 : mov eax, 0x14 ; syscall
0x000000000044c014 : mov eax, 0x15 ; syscall
0x0000000000423460 : mov eax, 0x16 ; ret
0x00000000004494d0 : mov eax, 0x18 ; syscall
0x00000000004af2b4 : mov eax, 0x1800003b ; ret
0x000000000044bc73 : mov eax, 0x19 ; syscall
0x000000000044a5c0 : mov eax, 0x1c ; syscall
0x0000000000448179 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000488520 : mov eax, 0x26 ; syscall
0x0000000000485290 : mov eax, 0x27 ; syscall
0x00000000004ae3b4 : mov eax, 0x2800002c ; push rsi ; jmp rsi
0x0000000000448172 : mov eax, 0x30 ; pop rbx ; ret
0x00000000004754f0 : mov eax, 0x3f ; syscall
0x0000000000448187 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a6c9b : mov eax, 0x45155e93 ; ret 0x591c
0x00000000004499c7 : mov eax, 0x48 ; syscall
0x0000000000449cab : mov eax, 0x4f ; syscall
0x00000000004af8b4 : mov eax, 0x58000041 ; test cl, bh ; call qword ptr [rbx]
0x0000000000457b28 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000448180 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044bca0 : mov eax, 0x63 ; syscall
0x0000000000475520 : mov eax, 0x66 ; syscall
0x0000000000475540 : mov eax, 0x68 ; syscall
0x0000000000475530 : mov eax, 0x6b ; syscall
0x0000000000475550 : mov eax, 0x6c ; syscall
0x000000000044815d : mov eax, 0x80 ; pop rbx ; ret
0x000000000048996f : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000046c781 : mov eax, 0x8900001d ; ret 0x349
0x0000000000486b84 : mov eax, 0x89fd8945 ; ret 0xe283
0x000000000040179d : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044a590 : mov eax, 0xa ; syscall
0x000000000044a560 : mov eax, 0xb ; syscall
0x000000000040db82 : mov eax, 0xba ; syscall
0x0000000000474dc0 : mov eax, 0xc9 ; syscall
0x000000000047b52a : mov eax, 0xca ; syscall
0x000000000040dbb0 : mov eax, 0xe ; syscall
0x0000000000449245 : mov eax, 0xe5 ; syscall
0x00000000004036dc : mov eax, 0xe8000000 ; retf
0x000000000040db8e : mov eax, 0xea ; syscall
0x000000000045ad21 : mov eax, 0xf ; syscall
0x00000000004582ec : mov eax, 0xff50cee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000449bc6 : mov eax, 0xffffffff ; jmp 0x449b95
0x0000000000411ed1 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411c57 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000412dd3 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000411c1b : mov eax, 0xffffffff ; ret
0x0000000000475d81 : mov eax, 1 ; leave ; ret
0x0000000000484475 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000417142 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004867bd : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047fca0 : mov eax, 1 ; pop rbx ; ret
0x000000000046863f : mov eax, 1 ; ret
0x000000000044988a : mov eax, 1 ; syscall
0x0000000000474613 : mov eax, 2 ; ret
0x0000000000474871 : mov eax, 3 ; ret
0x0000000000449b5a : mov eax, 3 ; syscall
0x000000000048e01f : mov eax, 4 ; jne 0x48e048 ; ret
0x0000000000474881 : mov eax, 4 ; ret
0x000000000044955e : mov eax, 4 ; syscall
0x0000000000474891 : mov eax, 5 ; ret
0x00000000004495ac : mov eax, 5 ; syscall
0x00000000004748a1 : mov eax, 6 ; ret
0x000000000047556e : mov eax, 6 ; syscall
0x00000000004748b1 : mov eax, 7 ; ret
0x0000000000448164 : mov eax, 8 ; pop rbx ; ret
0x000000000044e820 : mov eax, 8 ; ret
0x0000000000449950 : mov eax, 8 ; syscall
0x000000000044a4bc : mov eax, 9 ; syscall
0x0000000000411771 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000471ea4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417328 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x417329 ; ret
0x0000000000481a31 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000459160 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x459172 ; call rax
0x000000000046bcd7 : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045ab6f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004608cd : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048add9 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048adc1 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047fcb9 : mov eax, dword ptr [rax] ; ret
0x000000000047c5a0 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c3c1 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004165ad : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484de9 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416c99 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000451169 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44d3c9
0x00000000004424e4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004424f6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000442506 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000442516 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000442526 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043d0fa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043e9d2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443c70 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000004424b0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000443bc1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000442411 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000443c41 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000442491 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047cba6 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471cfe : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x00000000004182e0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000418308 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000490ced : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x490d04 ; call rax
0x0000000000471ea1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418631 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d131 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d181 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d1c1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d221 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d211 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d1d1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000460e17 : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487ca1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487cb8 ; ret
0x00000000004182d5 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004191d1 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a2bba], eax ; ret
0x000000000048f485 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f497 ; ret
0x000000000048f4a0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f4b7 ; ret
0x000000000048f6d0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f6e7 ; ret
0x000000000047e68c : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000448697 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448689 ; ret
0x000000000043ad06 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004182c1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x4182c0 ; ret
0x0000000000485490 : mov eax, dword ptr [rip + 0x23742a] ; ret
0x000000000047f38b : mov eax, dword ptr [rip + 0x23d017] ; mov qword ptr [rsi], rax ; ret
0x000000000047f31a : mov eax, dword ptr [rip + 0x23d090] ; ret
0x00000000004579d1 : mov eax, dword ptr [rip + 0x2644a1] ; ret
0x000000000044f471 : mov eax, dword ptr [rip + 0x26d4b1] ; ret
0x0000000000418611 : mov eax, dword ptr [rip + 0x2a0b09] ; ret
0x000000000048e072 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048af01 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048aed4 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048aef1 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e091 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046bc9c : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000460e61 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x00000000004614b9 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x0000000000470f0f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d1f6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a7a6 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401123 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004530dc : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000449b9a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449b1d : mov eax, dword ptr [rsp + 0xc] ; jne 0x449af2 ; neg eax ; jmp 0x449af2
0x000000000040defd : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000486c2f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048a96a : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047fcb8 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041a880 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046f833 : mov eax, eax ; jmp 0x46f805
0x00000000004497e9 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042265f : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004481a2 : mov eax, eax ; ret
0x0000000000474c34 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000448fb2 : mov eax, eax ; syscall
0x0000000000473a71 : mov eax, eax ; vzeroupper ; ret
0x000000000041017b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044b184 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410293 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fd4e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411bc2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004126ed : mov eax, ebp ; syscall
0x0000000000484403 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000488417 : mov eax, ebx ; jne 0x488435 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004884fe : mov eax, ebx ; jne 0x48851d ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000414732 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410405 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a3c0 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004129db : mov eax, ebx ; pop rbx ; ret
0x00000000004842c7 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000465e45 : mov eax, ecx ; ret
0x000000000040db7b : mov eax, ecx ; syscall
0x00000000004128d3 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ab15 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000412904 : mov eax, edi ; ret
0x000000000041a715 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000410590 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465f0e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000410639 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410021 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004481a6 : mov eax, edx ; pop rbx ; ret
0x000000000041a721 : mov eax, edx ; ret
0x000000000040121a : mov eax, edx ; syscall
0x0000000000482677 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000413baa : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046fb64 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041dbdd : mov eax, esi ; pop rbx ; ret
0x000000000041dc11 : mov eax, esi ; ret
0x0000000000448fa2 : mov eax, esi ; syscall
0x000000000046ec98 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004126ec : mov eax, r13d ; syscall
0x000000000046f832 : mov eax, r8d ; jmp 0x46f806
0x0000000000448fb1 : mov eax, r8d ; syscall
0x0000000000465e44 : mov eax, r9d ; ret
0x000000000041248e : mov eax, r9d ; syscall
0x00000000004a8b94 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000044d56b : mov ebp, 0x890026e8 ; ret 0xe083
0x000000000047dd5a : mov ebp, 0xba000271 ; retf 0
0x00000000004940e9 : mov ebp, 0xbf50fff9 ; stc ; jmp rax
0x00000000004940a9 : mov ebp, 0xbf90fff9 ; stc ; jmp qword ptr [rax]
0x000000000049f084 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a615d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000473238 : mov ebp, 0xf80148c0 ; ret
0x00000000004734bc : mov ebp, 0xf80148c6 ; ret
0x00000000004a78c6 : mov ebp, 0xfb67d10d ; ret
0x000000000046918e : mov ebp, 0xfffff730 ; call rax
0x000000000045dc7c : mov ebp, 0xfffff758 ; call rax
0x000000000046c189 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000465065 : mov ebp, 0xffffff40 ; call rax
0x00000000004126e7 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x000000000048d653 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000048e89a : mov ebp, dword ptr [rsp + 8] ; jmp 0x48e8b8
0x000000000046fdf9 : mov ebp, eax ; jmp 0x46fdc2
0x000000000047e3a6 : mov ebp, eax ; jmp 0x47e377
0x000000000048267d : mov ebp, ecx ; nop ; jmp rdx
0x00000000004a88e4 : mov ebx, 0x1b5c347e ; jmp 0x4a88bc
0x0000000000434f27 : mov ebx, 0x46f00ff2 ; retf
0x000000000042fa84 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000042faa2 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000046be33 : mov ebx, 0x89000025 ; ret 0x349
0x000000000044d391 : mov ebx, 0x89000281 ; ret
0x000000000044bd84 : mov ebx, 0xafb8341 ; je 0x44bd93 ; ret
0x0000000000494105 : mov ebx, 0xbd20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a615b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00000000004ab634 : mov ebx, 0xcefffe10 ; adc dh, bh ; jmp rcx
0x00000000004247ab : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000040f334 : mov ebx, 1 ; jmp 0x40f303
0x000000000045cffc : mov ebx, 1 ; jmp 0x45cfcb
0x00000000004a8f04 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000045a566 : mov ebx, edi ; test rax, rax ; je 0x45a576 ; call rax
0x00000000004753b0 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047fa0d : mov ebx, esp ; mov rsi, rbx ; syscall
0x000000000040db76 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047566c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004a6d99 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a886e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x0000000000494101 : mov ecx, 0xbb20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a6159 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00000000004758d0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000046bcda : mov ecx, 1 ; jmp rax
0x00000000004384fc : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042d8ae : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000471e7b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043ad03 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a8d24 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a8d59 ; retf 0x32dd
0x000000000042fc23 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fe23 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430023 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000444140 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000444181 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435693 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435623 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004355b3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004354d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435465 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435385 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435315 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435235 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435775 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444121 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000481b27 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481ab5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004724b1 : mov ecx, eax ; jmp 0x47247b
0x000000000044e75b : mov ecx, ebp ; call rbx
0x00000000004170c0 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000446f02 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004170fa : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000474235 : mov ecx, esi ; call rbx
0x000000000048c4fc : mov edi, 0x148015b ; retf
0x000000000045f4ca : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400a9c : mov edi, 0x6babd0 ; jmp rax
0x00000000004956ac : mov edi, 0x92fffb3e ; sti ; jmp qword ptr [rdi]
0x00000000004940ad : mov edi, 0xb220fff9 ; stc ; jmp rax
0x0000000000403a33 : mov edi, 0xdf8948ff ; call 0x4004c7
0x0000000000449634 : mov edi, 0xffffff9c ; syscall
0x000000000048ce86 : mov edi, 1 ; call r14
0x000000000048cddc : mov edi, 1 ; call rax
0x000000000048db4c : mov edi, 1 ; jmp rax
0x000000000040e994 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044abdc : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x00000000004126e6 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045dc7b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000046918d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000465064 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d4d1 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044a6c4 : mov edi, dword ptr [rbp] ; call r12
0x000000000040def9 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a69e : mov edi, dword ptr [rbx] ; call r12
0x000000000047c78f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f366 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47f349 ; ret
0x00000000004a7b86 : mov edi, dword ptr [rdx] ; ret
0x00000000004882ef : mov edi, dword ptr [rsp + 0x10] ; call 0x484d26
0x000000000048edae : mov edi, dword ptr [rsp + 0x10] ; call r14
0x00000000004756ce : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x0000000000482554 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450ea5 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000450d70 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000451781 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000451959 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000451c43 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x000000000045227b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000045523f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000451489 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000451195 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004536ba : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000455e66 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00000000004530d7 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449a41 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000040111e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000416ccb : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a7a1 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004165d6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048dc9c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004039eb : mov edi, eax ; call 0x40043c
0x00000000004489ea : mov edi, eax ; call 0x4004b0
0x00000000004039c3 : mov edi, eax ; call 0x4004c4
0x00000000004234c4 : mov edi, eax ; call rcx
0x000000000040db80 : mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000468970 : mov edi, ebp ; call 0x4004b1
0x00000000004219e3 : mov edi, ebp ; call 0x41dc24
0x0000000000489a0e : mov edi, ebp ; call qword ptr [r14]
0x00000000004018be : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x0000000000489ae2 : mov edi, ebp ; call qword ptr [rax]
0x0000000000489bbe : mov edi, ebp ; call qword ptr [rcx]
0x000000000045819c : mov edi, ebp ; call r12
0x000000000048eb8c : mov edi, ebp ; call r14
0x0000000000422846 : mov edi, ebp ; call rax
0x00000000004740e1 : mov edi, ebp ; call rbx
0x000000000044a4ba : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000041248c : mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000474232 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040df89 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045d512 : mov edi, ebx ; call 0x400440
0x0000000000403a36 : mov edi, ebx ; call 0x4004c4
0x0000000000402d98 : mov edi, ebx ; call 0x41f7a4
0x000000000044ea5e : mov edi, ebx ; call r14
0x00000000004132b6 : mov edi, ebx ; call rax
0x00000000004498be : mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000449b7c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000004239ec : mov edi, ebx ; mov qword ptr [rsp + 0x18], r8 ; call 0x400481
0x000000000041666d : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470d8f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004497ee : mov edi, ebx ; xor eax, eax ; syscall
0x0000000000409e2a : mov edi, edi ; call 0x420068
0x0000000000472208 : mov edi, edi ; call r12
0x00000000004111e3 : mov edi, edi ; call rax
0x000000000044f04b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000484741 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x484729 ; mov rax, rsi ; ret
0x0000000000448fa0 : mov edi, edx ; mov eax, esi ; syscall
0x0000000000448faf : mov edi, edx ; mov eax, r8d ; syscall
0x00000000004582f3 : mov edi, esi ; call rbx
0x00000000004585d1 : mov edi, esi ; call rdx
0x000000000041cf61 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x419209
0x000000000048dba4 : mov edi, esp ; call r15
0x0000000000471f30 : mov edi, esp ; call rbx
0x00000000004056c9 : mov edi, esp ; jmp 0x40569a
0x0000000000449ca9 : mov edi, esp ; mov eax, 0x4f ; syscall
0x000000000041248b : mov edi, r13d ; mov eax, r9d ; syscall
0x00000000004480a6 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000412a56 : mov edx, 0x130 ; pop rbx ; ret
0x00000000004557cd : mov edx, 0x180 ; call 0x401ad7
0x00000000004557f4 : mov edx, 0x22f ; call 0x401ad7
0x0000000000434ea7 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000042fc84 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042fca2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000044bbf6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x000000000044d372 : mov edx, 0x89000281 ; ret
0x000000000040497c : mov edx, 0x8949ffff ; ret 0x149
0x0000000000454cce : mov edx, 0x89fffff3 ; retf 0xe283
0x00000000004a703e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d0ebe
0x000000000048584f : mov edx, 0xcc ; call 0x401ad7
0x000000000048bd11 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000450b47 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e60c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000485050 : mov edx, 5 ; jmp 0x401b27
0x000000000045ade4 : mov edx, 8 ; mov eax, ecx ; syscall
0x00000000004585ca : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048dca0 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484dc9 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043e9cf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d0fd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484ddd : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048eb89 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000444162 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000444153 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004441a3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000004441b3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042f661 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042fa20 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f2b1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000444750 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000435700 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004447a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000435541 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000444731 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000444111 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000482559 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048cdd9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x00000000004234c9 : mov edx, eax ; jmp 0x42347c
0x00000000004563ba : mov edx, eax ; jmp 0x456371
0x00000000004564f1 : mov edx, eax ; jmp 0x4564b0
0x00000000004567bf : mov edx, eax ; jmp 0x456776
0x0000000000456836 : mov edx, eax ; jmp 0x4567ed
0x000000000046f392 : mov edx, eax ; jmp 0x46f360
0x0000000000475e1e : mov edx, eax ; jmp 0x475e12
0x000000000040db8c : mov edx, eax ; mov eax, 0xea ; syscall
0x0000000000449b7e : mov edx, eax ; mov eax, 3 ; syscall
0x0000000000489a09 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489add : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489bb9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004899c3 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004755c0 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044bc71 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000004039e8 : mov edx, edi ; mov rdi, rax ; call 0x40043f
0x0000000000447bc8 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000040e1a9 : mov edx, esp ; call 0x40de48
0x000000000047582d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000040db8b : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000455c69 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x00000000004531b2 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x00000000004759f9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000494410 : mov esi, 0x40fffa0d ; adc al, 0xfa ; call rax
0x0000000000450a7c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a8b46 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000047582f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a8be3 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004a6cca : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000496414 : mov esi, 0x77fffb72 ; jb 0x49641d ; jmp qword ptr [rcx]
0x000000000044be08 : mov esi, 0x80 ; syscall
0x000000000044fbd2 : mov esi, 0x83480147 ; ret
0x0000000000461fe1 : mov esi, 0x8900000b ; ret 0x349
0x000000000046b8e5 : mov esi, 0x8900002b ; ret 0x349
0x000000000047e719 : mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000046469e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004a615e : mov esi, 0xc2c1c0bf ; ret
0x0000000000448034 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000046fb79 : mov esi, 0xffffffff ; jmp 0x46fb21
0x0000000000460e64 : mov esi, 1 ; jmp rax
0x000000000046eefc : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044a638 : mov esi, 2 ; jmp rax
0x000000000044a64b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000459064 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x459076 ; call rsi
0x000000000048d4cd : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044f04e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048edab : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048dc55 : mov esi, dword ptr [rsi] ; call r12
0x0000000000446f33 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044e756 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422841 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000451954 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451484 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455e61 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000420259 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x00000000004498bc : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004497ec : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004234c1 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000421e72 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412489 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x00000000004219e0 : mov esi, ebx ; mov rdi, r13 ; call 0x41dc27
0x000000000047fa10 : mov esi, ebx ; syscall
0x000000000044a325 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000449632 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000048db4a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045dc78 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e673 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e658 ; ret
0x000000000044955c : mov esi, edx ; mov eax, 4 ; syscall
0x00000000004495aa : mov esi, edx ; mov eax, 5 ; syscall
0x000000000047556c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000465061 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048dba1 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000489a0c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489ae0 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489bbc : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004899c6 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000470d8c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d2cb : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042b341 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b371 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b361 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000040479f : mov esp, 0x8949ffff ; ret 0x149
0x0000000000417962 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000045169d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000451b1f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000440a83 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000004b4eb8 : mov esp, 0xd4000097 ; std ; jmp rsp
0x000000000046fd04 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004900b2 : mov esp, 0xe1750022 ; pop rbx ; ret
0x000000000042b42b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042b351 : mov esp, 0xf80148c0 ; ret
0x000000000042b842 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004007f6 : mov esp, eax ; call 0x448028
0x00000000004006bf : mov esp, eax ; call 0x4484e8
0x000000000048267a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d657 : mov esp, ecx ; ret
0x000000000044abe0 : mov esp, esi ; call r15
0x000000000045292d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x0000000000456ead : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048adc3 : mov qword ptr [r10], r8 ; ret
0x00000000004384f0 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044bf40 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x00000000004709d8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470a18 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471a17 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044bfa6 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044bfc0 : mov qword ptr [rax + 0x20], rsi ; ret
0x00000000004709dc : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471a99 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004173e4 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044bf44 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484dec : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484d3c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484de0 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d171 : mov qword ptr [rax], rdx ; ret
0x0000000000471d8a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c660 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x0000000000480fae : mov qword ptr [rbp - 0x70], rax ; mov eax, 0x15 ; syscall
0x000000000040358b : mov qword ptr [rbp - 0x98], rcx ; call 9
0x000000000047d000 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000458751 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004129d6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481c3d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412dbe : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047f94d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485af2 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485ac8
0x0000000000481b72 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488384 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488458 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000416560 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004181fc : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004855b2 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a3b8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004100d0 : mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000482e9e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000044496c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000004442dc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004442bc : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044431f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044433f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444300 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000416442 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b604 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b5d6 : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000416472 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d1b0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000044492c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000044427c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044494c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000044429c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004354d7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435467 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353f7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435387 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044482a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435317 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004441ca : mov qword ptr [rdi + 5], rdx ; ret
0x000000000044484a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000004352a7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004441da : mov qword ptr [rdi + 6], rdx ; ret
0x000000000044486a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000435237 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004441ea : mov qword ptr [rdi + 7], rdx ; ret
0x00000000004842c3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000482e23 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000048460d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000416446 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000447c9a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000446f26 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d15b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042f144 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f182 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482d8e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042f4cb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ce7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f6ab : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c67 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f89b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434be7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fa6c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b58 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fc6c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ac8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fe6c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a38 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000482d19 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042f148 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f186 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f2fb : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f3f7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f343 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d67 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004686d9 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482ce8 : mov qword ptr [rdi], r9 ; ret
0x00000000004447b6 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000004441a6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000004441b6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004441c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000004441d7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000004441e7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444197 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043523b : mov qword ptr [rdi], rcx ; ret
0x0000000000447e1e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004447a3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000435543 : mov qword ptr [rdi], rdx ; ret
0x00000000004384ed : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000446f2b : mov qword ptr [rdi], rsi ; ret
0x0000000000412a54 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000443d4a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000044253a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000443d6a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000044255a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000443d8a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000044257a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000046b32f : mov qword ptr [rdx + 8], rax ; jmp 0x46b305
0x0000000000443c1a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000044246a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000041836f : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000443bc3 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000442413 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484dcc : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004182d7 : mov qword ptr [rdx], rax ; ret
0x00000000004848f7 : mov qword ptr [rip + 0x23776a], rax ; ret
0x000000000047f224 : mov qword ptr [rip + 0x23d185], rax ; ret
0x000000000041f785 : mov qword ptr [rip + 0x29a0d4], rax ; ret
0x00000000004196ab : mov qword ptr [rip + 0x2a01ae], rax ; ret
0x00000000004191a6 : mov qword ptr [rip + 0x2a0643], rax ; ret
0x000000000041917e : mov qword ptr [rip + 0x2a0663], rax ; ret
0x000000000041915e : mov qword ptr [rip + 0x2a067b], rax ; ret
0x0000000000419054 : mov qword ptr [rip + 0x2a07ed], rax ; ret
0x0000000000419044 : mov qword ptr [rip + 0x2a07f5], rax ; ret
0x0000000000419032 : mov qword ptr [rip + 0x2a07f7], rdx ; ret
0x0000000000418ff4 : mov qword ptr [rip + 0x2a07fd], rax ; ret
0x0000000000418fe4 : mov qword ptr [rip + 0x2a0815], rax ; ret
0x00000000004017a2 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004787f0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f391 : mov qword ptr [rsi], rax ; ret
0x000000000047e6d8 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000045d099 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x45d067
0x00000000004239ee : mov qword ptr [rsp + 0x18], r8 ; call 0x40047f
0x000000000045116b : mov qword ptr [rsp + 0x50], rax ; call 0x44d3c7
0x000000000041c94e : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040952a : mov qword ptr [rsp + 8], rcx ; call 0x406037
0x00000000004111dd : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489b62 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004132b1 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004165c4 : mov qword ptr [rsp], rdi ; call 0x412856
0x000000000045ab55 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000446f25 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044bc70 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434ea6 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000042fca1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004a703d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d0ebf
0x000000000045ade3 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000434f26 : mov r11d, 0x46f00ff2 ; retf
0x000000000042faa1 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040f333 : mov r11d, 1 ; jmp 0x40f304
0x000000000045cffb : mov r11d, 1 ; jmp 0x45cfcc
0x00000000004007f5 : mov r12, rax ; call 0x448029
0x00000000004006be : mov r12, rax ; call 0x4484e9
0x000000000044abdf : mov r12d, r14d ; call r15
0x000000000048d4cc : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d4d0 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004056c8 : mov r15, r12 ; jmp 0x40569b
0x000000000048adc0 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d77e : mov r8b, 0xe8 ; retf
0x000000000044fd4f : mov r8b, 0xe8 ; retf 0xffad
0x000000000044e75a : mov r9, r13 ; call rbx
0x0000000000474234 : mov r9, r14 ; call rbx
0x0000000000417870 : mov rax, -1 ; ret
0x000000000045ad20 : mov rax, 0xf ; syscall
0x0000000000474850 : mov rax, 1 ; ret
0x0000000000474860 : mov rax, 2 ; ret
0x0000000000474870 : mov rax, 3 ; ret
0x0000000000474880 : mov rax, 4 ; ret
0x0000000000474890 : mov rax, 5 ; ret
0x00000000004748a0 : mov rax, 6 ; ret
0x00000000004748b0 : mov rax, 7 ; ret
0x0000000000486c2e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047cba5 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000411770 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000471ea3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000481a30 : mov rax, qword ptr [rax + 8] ; ret
0x000000000045915f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x459173 ; call rax
0x000000000046bcd6 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045ab6e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004608cc : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d102 : mov rax, qword ptr [rax] ; ret
0x000000000047c3c0 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004165ac : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484de8 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416c98 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000442410 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000490cec : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x490d05 ; call rax
0x0000000000471ea0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418630 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d130 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d180 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d1c0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d220 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d210 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d1d0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000460e16 : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487ca0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487cb9 ; ret
0x00000000004182d4 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004182c0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x4182c1 ; ret
0x000000000047f319 : mov rax, qword ptr [rip + 0x23d090] ; ret
0x00000000004579d0 : mov rax, qword ptr [rip + 0x2644a1] ; ret
0x000000000044f470 : mov rax, qword ptr [rip + 0x26d4b1] ; ret
0x0000000000418610 : mov rax, qword ptr [rip + 0x2a0b09] ; ret
0x000000000048e071 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048af00 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048aed3 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048aef0 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e090 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046bc9b : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000460e60 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x00000000004614b8 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d1f5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a7a5 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401122 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004530db : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040defc : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048a969 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046ec97 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044ab6d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a87f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042265e : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473a70 : mov rax, r8 ; vzeroupper ; ret
0x000000000044b183 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410292 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413ce6 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d32a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000414731 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410404 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a3bf : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004129da : mov rax, rbx ; pop rbx ; ret
0x000000000047e6db : mov rax, rcx ; ret
0x00000000004128d2 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ab14 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000412903 : mov rax, rdi ; ret
0x000000000041a714 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000004752fa : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a0cc : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004481a5 : mov rax, rdx ; pop rbx ; ret
0x000000000041a720 : mov rax, rdx ; ret
0x000000000041dbdc : mov rax, rsi ; pop rbx ; ret
0x000000000041dc10 : mov rax, rsi ; ret
0x000000000048d652 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e899 : mov rbp, qword ptr [rsp + 8] ; jmp 0x48e8b9
0x000000000048267c : mov rbp, r9 ; nop ; jmp rdx
0x000000000046fdf8 : mov rbp, rax ; jmp 0x46fdc3
0x000000000047e3a5 : mov rbp, rax ; jmp 0x47e378
0x000000000045a565 : mov rbx, rdi ; test rax, rax ; je 0x45a577 ; call rax
0x00000000004753af : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000047fa0c : mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000444180 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000481b26 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481ab4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004724b0 : mov rcx, rax ; jmp 0x47247c
0x0000000000446f01 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b29b : mov rdi, qword ptr [r13] ; call r12
0x000000000040def8 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040e993 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044abdb : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045dc7a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046918c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000465063 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044a6c3 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044a69d : mov rdi, qword ptr [rbx] ; call r12
0x00000000004882ee : mov rdi, qword ptr [rsp + 0x10] ; call 0x484d27
0x000000000048edad : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000450ea4 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000451780 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451958 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451c42 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045227a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045523e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451488 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004536b9 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455e65 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004165d5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048dc9b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048dba3 : mov rdi, r12 ; call r15
0x0000000000471f2f : mov rdi, r12 ; call rbx
0x0000000000449ca8 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004219e2 : mov rdi, r13 ; call 0x41dc25
0x000000000045819b : mov rdi, r13 ; call r12
0x000000000048eb8b : mov rdi, r13 ; call r14
0x0000000000492000 : mov rdi, r13 ; call rax
0x000000000040df88 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004582f2 : mov rdi, r14 ; call rbx
0x00000000004585d0 : mov rdi, r14 ; call rdx
0x0000000000409e29 : mov rdi, r15 ; call 0x420069
0x0000000000472207 : mov rdi, r15 ; call r12
0x00000000004111e2 : mov rdi, r15 ; call rax
0x000000000044f04a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004039ea : mov rdi, rax ; call 0x40043d
0x00000000004489e9 : mov rdi, rax ; call 0x4004b1
0x00000000004039c2 : mov rdi, rax ; call 0x4004c5
0x00000000004234c3 : mov rdi, rax ; call rcx
0x000000000040db7f : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000422845 : mov rdi, rbp ; call rax
0x00000000004740e0 : mov rdi, rbp ; call rbx
0x000000000044a4b9 : mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000474231 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000045d511 : mov rdi, rbx ; call 0x400441
0x0000000000403a35 : mov rdi, rbx ; call 0x4004c5
0x0000000000402d97 : mov rdi, rbx ; call 0x41f7a5
0x000000000044ea5d : mov rdi, rbx ; call r14
0x00000000004132b5 : mov rdi, rbx ; call rax
0x000000000041666c : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470d8e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048cdd8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048eb88 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048dc9f : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484dc8 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484ddc : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042f2b0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435540 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000482558 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000040e1a8 : mov rdx, r12 ; call 0x40de49
0x0000000000489a08 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489adc : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489bb8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004899c2 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004039e7 : mov rdx, r15 ; mov rdi, rax ; call 0x400440
0x000000000046f391 : mov rdx, r8 ; jmp 0x46f361
0x00000000004234c8 : mov rdx, rax ; jmp 0x42347d
0x00000000004563b9 : mov rdx, rax ; jmp 0x456372
0x00000000004564f0 : mov rdx, rax ; jmp 0x4564b1
0x00000000004567be : mov rdx, rax ; jmp 0x456777
0x0000000000456835 : mov rdx, rax ; jmp 0x4567ee
0x0000000000475e1d : mov rdx, rax ; jmp 0x475e13
0x00000000004755bf : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000447bc7 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048dc54 : mov rsi, qword ptr [r14] ; call r12
0x000000000048edaa : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000459063 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x459077 ; call rsi
0x000000000044f04d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044e755 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422840 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000420258 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000489a0b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489adf : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489bbb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004899c5 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000048dba0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004497eb : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004234c0 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x0000000000412488 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x00000000004219df : mov rsi, rbx ; mov rdi, r13 ; call 0x41dc28
0x000000000047fa0f : mov rsi, rbx ; syscall
0x0000000000449631 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000048db49 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e672 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e659 ; ret
0x000000000044955b : mov rsi, rdx ; mov eax, 4 ; syscall
0x00000000004495a9 : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000047556b : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000482679 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d656 : mov rsp, rcx ; ret
0x000000000046c7c6 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x00000000004206ee : mov ss, word ptr [rcx + 0x39480029] ; ret
0x0000000000438515 : mov word ptr [r9 - 2], cx ; ret
0x0000000000478dab : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x000000000046aca5 : mov word ptr [rbx], es ; add byte ptr [rcx - 0x77], al ; retf
0x00000000004448ac : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000044421c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000004449b4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000444304 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435777 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444778 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x0000000000444158 : mov word ptr [rdi + 4], dx ; ret
0x00000000004447ca : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000044419a : mov word ptr [rdi + 8], dx ; ret
0x0000000000447caa : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000446f44 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000042f84c : mov word ptr [rdi - 2], cx ; ret
0x000000000042f664 : mov word ptr [rdi - 2], dx ; ret
0x000000000042f848 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000444123 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000446c82 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043577b : mov word ptr [rdi], cx ; ret
0x0000000000447e34 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000444733 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000004357e3 : mov word ptr [rdi], dx ; ret
0x0000000000438512 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000446f49 : mov word ptr [rdi], si ; ret
0x0000000000443c98 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000004424d8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000443c43 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000442493 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000446c85 : mov word ptr [rsi - 2], cx ; ret
0x00000000004047cb : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000446f43 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000047bbec : movabs al, byte ptr [0x5b0e78c085fffce9] ; ret
0x0000000000447417 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000046d26a : movabs al, byte ptr [0x840fc08548000000] ; ret
0x0000000000488cfa : movabs byte ptr [0x8949c08548fff96a], al ; ret 0x8b48
0x00000000004a8c83 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004a88e1 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004a6d27 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004a75da : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000042ddd2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042ddce : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042de7c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040db6c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x00000000004441f0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444a6d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000004443bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043544f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353df : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043536f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352ff : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444a0d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000044435d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043528f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444a2d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000044437d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043521f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444a4d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044439d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043583f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357cf : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043575f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356ef : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043567f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043560f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043559f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043552f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354bf : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447c1d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000004349ab : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000434a1b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000444884 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444204 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444247 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444237 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004442b8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444278 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444298 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444218 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004443b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444359 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444379 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444399 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004351ca : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000435224 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004441f1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444a6e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000004443be : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000435450 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353e0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435370 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435300 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444a0e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000044435e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435290 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444a2e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000044437e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000435220 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444a4e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044439e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000435840 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357d0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435760 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356f0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435680 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435610 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355a0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435530 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354c0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447ba5 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000447c1e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004349ac : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000434a1c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435157 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004350d7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435047 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fc7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f47 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ec7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e47 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434dc7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d47 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434cc7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c47 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434bc7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b37 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434aa7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a17 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000444885 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444205 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444258 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444248 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444238 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004442b9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444279 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444299 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444219 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004443ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000044435a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044437a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044439a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004351cb : movq qword ptr [rdi], mm0 ; ret
0x0000000000435225 : movq qword ptr [rdi], mm1 ; ret
0x00000000004ab2d0 : movsb byte ptr [rdi], byte ptr [rsi] ; adc bh, dh ; call rsp
0x00000000004ab1b0 : movsb byte ptr [rdi], byte ptr [rsi] ; add bh, dh ; jmp rsp
0x000000000044d398 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rdx], 0x39d23100 ; ret
0x000000000045781c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446ea5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000049574c : movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, 0x3deafffb ; sti ; call rsi
0x00000000004a7a02 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a8c5d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4a8cb6 ; jmp 0x4a8bf7
0x00000000004b196c : movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xfa ; call qword ptr [rdx]
0x0000000000446e97 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004941f1 : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x00000000004a68e5 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x0000000000476308 : movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x000000000047f8fc : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004a8efd : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a9295 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a8b51 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000460d77 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000482d42 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004affd1 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004a75e1 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048ad64 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480e2b : movsx eax, cl ; neg eax ; ret
0x0000000000480ed0 : movsx eax, dl ; sub eax, ecx ; ret
0x0000000000424841 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000432e2b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042d8ab : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000048c008 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000040218e : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048c909 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048afb7 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048ad91 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c541 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000048ad92 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000416a7e : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044bca1 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004a7980 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000040218f : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000044d4cf : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044d458 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000461295 : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x000000000047c09d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046ea87 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000048c542 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x0000000000446efd : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047c09e : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x000000000047c9c5 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000048afb8 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f0b7 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000047c9c6 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000401f26 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004491e4 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000048c90a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000046e91b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000448068 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000448122 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000419181 : movsxd rax, dword ptr [rsi] ; sub al, byte ptr [rax] ; ret
0x000000000048c009 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x000000000048521d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000446b37 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000446ae4 : movsxd rax, ecx ; ret
0x00000000004a87aa : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000446b29 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042c1dd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000443fb9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000423d36 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x0000000000432e2c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042d8ac : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042c1de : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000443fba : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000424842 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000448090 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000446b77 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040d537 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045a35f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000045a360 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000040d538 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000493f11 : movsxd rdi, ecx ; call qword ptr [rax]
0x000000000042d97f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042d980 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d24f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000449459 : movsxd rdx, eax ; jmp 0x449203
0x0000000000459e60 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000459e61 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x0000000000445f9c : movsxd rsi, esi ; ret 0x7520
0x000000000044705f : movups xmmword ptr [r11], xmm4 ; ret
0x00000000004470e6 : movups xmmword ptr [r11], xmm8 ; ret
0x00000000004470e7 : movups xmmword ptr [rbx], xmm0 ; ret
0x0000000000447060 : movups xmmword ptr [rbx], xmm4 ; ret
0x000000000044705b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044705a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004470e2 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446e42 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446fc9 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000446fa6 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446e3f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048ad65 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000475801 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000048835c : movzx eax, al ; neg eax ; ret
0x0000000000484c29 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e7d0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000004154c0 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048dfbe : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004166c1 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412bae : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041874f : movzx eax, byte ptr [rax] ; ret
0x000000000046bc97 : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000425bd8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042bf70 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bab0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425bf3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004166d0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412bc0 : movzx eax, byte ptr [rdx] ; ret
0x00000000004154c1 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004480f0 : movzx eax, cl ; pop rbx ; ret
0x00000000004465fa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4465f9 ; ret
0x00000000004466aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4466a9 ; ret
0x000000000042d094 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000446f18 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000425bf0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042bf73 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dad3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dabb ; ret
0x0000000000425db1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042a228 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042bef8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000425c43 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000445fc4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000446024 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000446014 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446004 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000445ff4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000445fe4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000445fd4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435170 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042ce47 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000445fab : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000435850 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042bab3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042bad9 : movzx edx, dl ; sub eax, edx ; ret
0x00000000004350f0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004357e0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000473307 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000044d105 : mul dword ptr [rsi] ; add cl, ch ; retf
0x0000000000449b23 : neg eax ; jmp 0x449aec
0x00000000004494e7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000041878f : neg eax ; ret
0x0000000000494da8 : nop ; adc al, 0xfa ; call qword ptr [rax]
0x0000000000494620 : nop ; adc bh, dl ; jmp qword ptr [rax]
0x0000000000494ddc : nop ; adc dl, bh ; call qword ptr [rax]
0x0000000000494de4 : nop ; adc edi, edx ; call qword ptr [rax]
0x0000000000494da0 : nop ; adc edx, edi ; call qword ptr [rax]
0x00000000004348a7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004adfa0 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7ffffd8], ch ; retf
0x000000000044b2c7 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b2d8 ; call r12
0x000000000042c4fc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000475a3c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044e90f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487cff : nop ; add rsp, 8 ; ret
0x0000000000494dc8 : nop ; and dl, bh ; call qword ptr [rax]
0x000000000048560f : nop ; call rax
0x000000000044f050 : nop ; call rsi
0x00000000004b15b1 : nop ; cli ; call qword ptr [rdx]
0x0000000000493d5c : nop ; cmc ; clc ; jmp qword ptr [rax]
0x0000000000494b18 : nop ; cmp edx, edi ; jmp qword ptr [rax]
0x000000000044bfaf : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44bfa8 ; ret
0x0000000000494370 : nop ; fdivr st(1) ; inc dword ptr [rax - 0x26] ; stc ; call qword ptr [rax]
0x00000000004a4d70 : nop ; jbe 0x4a4d73 ; jmp rax
0x000000000048267f : nop ; jmp rdx
0x000000000042f47f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004191d3 : nop ; mov dword ptr [rip + 0x2a2bba], eax ; ret
0x000000000042f65f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000480fb1 : nop ; mov eax, 0x15 ; syscall
0x000000000048528f : nop ; mov eax, 0x27 ; syscall
0x00000000004754ef : nop ; mov eax, 0x3f ; syscall
0x000000000044bc9f : nop ; mov eax, 0x63 ; syscall
0x0000000000474dbf : nop ; mov eax, 0xc9 ; syscall
0x000000000044bd24 : nop ; mov eax, 0xca ; syscall
0x0000000000416aef : nop ; mov eax, 0xffffffff ; ret
0x000000000047fc9f : nop ; mov eax, 1 ; pop rbx ; ret
0x00000000004940a8 : nop ; mov ebp, 0xbf90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004940ac : nop ; mov edi, 0xb220fff9 ; stc ; jmp rax
0x000000000042fa1f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044474f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000471d89 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000419053 : nop ; mov qword ptr [rip + 0x2a07ed], rax ; ret
0x0000000000419043 : nop ; mov qword ptr [rip + 0x2a07f5], rax ; ret
0x0000000000418ff3 : nop ; mov qword ptr [rip + 0x2a07fd], rax ; ret
0x0000000000418fe3 : nop ; mov qword ptr [rip + 0x2a0815], rax ; ret
0x000000000048d17f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048aeef : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e08f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x00000000004441ef : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004affd0 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000046f0ff : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f0ce
0x000000000046f0fe : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f0cf
0x0000000000494668 : nop ; or dl, bh ; call qword ptr [rax]
0x0000000000494660 : nop ; or edx, edi ; call qword ptr [rax]
0x00000000004004cf : nop ; ret
0x0000000000494dfc : nop ; sbb al, 0xfa ; call qword ptr [rax]
0x0000000000494db8 : nop ; sbb bh, dl ; call qword ptr [rax]
0x0000000000494df4 : nop ; sbb edx, edi ; call qword ptr [rax]
0x0000000000494f48 : nop ; scasd eax, dword ptr [rdi] ; cli ; jmp qword ptr [rax]
0x0000000000493f69 : nop ; stc ; call qword ptr [rax]
0x0000000000493f9d : nop ; stc ; jmp qword ptr [rcx + 0x21fff991]
0x0000000000493f8d : nop ; stc ; jmp qword ptr [rip - 0x2e000672]
0x000000000041830f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000494d8c : nop ; sub edx, edi ; push rax ; or edi, edx ; call qword ptr [rax]
0x0000000000494ec8 : nop ; test edx, edi ; push qword ptr [rax] ; xchg edx, edi ; call rax
0x00000000004941d4 : nop ; wait ; stc ; jmp rax
0x0000000000494ee8 : nop ; xchg eax, edx ; cli ; push qword ptr [rax] ; xchg eax, esp ; cli ; call rax
0x000000000041475f : nop ; xor eax, eax ; ret
0x000000000040ea58 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419ca8 : nop dword ptr [rax + rax] ; call rax
0x0000000000485828 : nop dword ptr [rax + rax] ; call rbx
0x000000000044412b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400aa3 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000411778 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a6b : nop dword ptr [rax + rax] ; ret
0x00000000004464fb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047481c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042345d : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x00000000004494cc : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x0000000000471e85 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000449bcd : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x000000000044994c : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000041a71c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ae5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044871c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000419c9d : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000418421 : nop dword ptr [rax] ; ret
0x000000000041469d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x41466d
0x0000000000416c25 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000449849 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000401214 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000485827 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040ea57 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419ca7 : nop word ptr [rax + rax] ; call rax
0x0000000000484b9a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000474602 : nop word ptr [rax + rax] ; ret
0x00000000004482fa : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004121a9 : not edx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4121c9
0x00000000004121a8 : not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4121ca
0x000000000042a3a7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f3df : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3d5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475922 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004758d1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041dc0c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000004293c8 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000473c48 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046bd8c : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000468df5 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000425bd6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041dbda : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000004132b3 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047f8f9 : or al, 0x37 ; jae 0x47f8a7 ; xor eax, eax ; ret
0x0000000000424550 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000046f102 : or al, 0x40 ; jmp 0x46f0cb
0x000000000046f101 : or al, 0x40 ; jmp 0x46f0cc
0x0000000000449b9d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000004165c3 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x412857
0x0000000000401121 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000484fe3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000046ebb3 : or al, 0x7e ; ret 0x8944
0x0000000000400db0 : or al, 0x81 ; retf 0x440
0x0000000000458713 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x458727 ; ret
0x000000000045e0db : or al, 0x83 ; ret
0x0000000000422f46 : or al, 0x83 ; retf 0x8902
0x0000000000448091 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000046334a : or al, 0x89 ; ret 0xc689
0x000000000044811b : or al, 0x89 ; ret 0xe283
0x0000000000424843 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000043ad04 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432e2d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042d8ad : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x00000000004759f8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042c1df : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000443fbb : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042d8b1 : or al, 0xb ; jmp r9
0x0000000000443fbf : or al, 0xb ; jmp rcx
0x00000000004858a5 : or al, 0xca ; jmp 0x4858b5
0x00000000004b3ef4 : or al, 0xcb ; cld ; call rdx
0x0000000000411398 : or al, 0xe8 ; ret 0xec
0x000000000045664f : or al, 0xe9 ; ret
0x0000000000471b2c : or al, 0xeb ; ret 0x5590
0x0000000000403f1f : or al, 0xf ; retf 0xd289
0x0000000000435373 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000466aad : or al, 0xf6 ; ret 0xf01
0x0000000000494dd1 : or al, 0xfa ; call qword ptr [rax + 0x10fffa0d]
0x0000000000422d01 : or al, 9 ; ret 0xbae9
0x0000000000473bfb : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042a587 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043df71 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a5b5 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048ceaa : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044a591 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000427ed8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ac179 : or al, byte ptr [rax] ; add byte ptr [rsp + rbp - 0xa], dl ; call qword ptr [rdx]
0x00000000004075fd : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040aa8c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044c566 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b3dfb : or al, byte ptr [rcx] ; ret
0x000000000040952e : or al, ch ; cld ; retf 0xffff
0x000000000040948d : or al, ch ; popfq ; retf
0x00000000004095d4 : or al, ch ; push rsi ; retf 0xffff
0x0000000000407197 : or al, ch ; ret
0x0000000000408198 : or al, ch ; ret 0x17e
0x000000000040ad68 : or al, ch ; ret 0xffb2
0x000000000040715f : or al, ch ; retf
0x0000000000407590 : or al, ch ; retf 0x18a
0x000000000041cf67 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x0000000000493e11 : or bh, cl ; jmp qword ptr [rax]
0x0000000000424430 : or bh, dh ; ret 0
0x000000000049465d : or bh, dl ; call qword ptr [rax + 0x10fffa09]
0x0000000000494659 : or bh, dl ; call qword ptr [rax]
0x0000000000494859 : or bh, dl ; jmp qword ptr [rax + 0x20fffa09]
0x00000000004946d9 : or bh, dl ; jmp rdx
0x00000000004946d5 : or bh, dl ; push qword ptr [rdx + 0xa] ; cli ; jmp rdx
0x00000000004943ac : or bl, 0xf9 ; call rax
0x000000000041a71a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000046b331 : or bl, bpl ; retf
0x0000000000405dad : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000460e12 : or bl, byte ptr [rcx + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000048e89d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046b332 : or bl, ch ; retf
0x0000000000435533 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a337 : or bl, dh ; ret
0x000000000044fcc6 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000411571 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e0fd : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000451073 : or byte ptr [r8 + 0xf], cl ; ret
0x000000000048460f : or byte ptr [r8 + 2], r15b ; ret
0x000000000041163f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f43a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000442468 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f925 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478cb2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b882 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000484654 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048c907 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000442527 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000411572 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000412da5 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e0fe : or byte ptr [rax + 0x39], cl ; ret
0x0000000000452928 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000482b38 : or byte ptr [rax + 0x39], cl ; retf
0x0000000000418749 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004acfc6 : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000451074 : or byte ptr [rax + 0xf], cl ; ret
0x00000000004197f6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004867bc : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d721 : or byte ptr [rax + 1], cl ; ret
0x0000000000484610 : or byte ptr [rax + 2], bh ; ret
0x00000000004039bf : or byte ptr [rax + rsi + 0x48], dh ; mov edi, eax ; call 0x4004c8
0x0000000000411640 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004858a2 : or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x4858b8
0x0000000000419093 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044a7a4 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044b182 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe1440eeb
0x000000000044246d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f43b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a3be : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041666b : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000046b32e : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x0000000000442469 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f7e0 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000410cbb : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004854d3 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046b32d : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x000000000048942a : or byte ptr [rax - 0x77], r9b ; ret
0x000000000047f368 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478cb3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b883 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000048967e : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047f926 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004896d7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041ed20 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b5c0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044ab52 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b567 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047dbd2 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044c420 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000411c56 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047259e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041a5cd : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041a3bb : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042a857 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e111 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a795 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004173e7 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000045101a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045af42 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045ade5 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000448165 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044e821 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449951 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000428058 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041f5f6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f5c9 ; ret
0x00000000004205cc : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000040d24c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043f7ce : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d0ff : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004859db : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482a91 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000004856f6 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048d16e : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000482713 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041cd92 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000492113 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044a1bc : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449cd3 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000486a77 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000413676 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401b85 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044b00e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041dcd7 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041dcd6 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x000000000046f100 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f0cd
0x0000000000463027 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040fdb9 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000048b903 : or byte ptr [rbx], ah ; add byte ptr [rax], cl ; ret
0x000000000044be04 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047b5d9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004843fb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000484655 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048157d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000479102 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x00000000004790d4 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000410638 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000048a355 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000046fb63 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048c908 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046eb99 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048821b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004833f0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000489adb : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004111e1 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004039e6 : or byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, rax ; call 0x400441
0x0000000000484402 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044b07b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000442528 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000420868 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d42a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044a84a : or byte ptr [rcx - 0x77], cl ; retf
0x000000000044a816 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041cd96 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000041474a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a951e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047bb50 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047baa0 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004545bb : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000454947 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044fcc7 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000049463c : or byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x000000000044b582 : or byte ptr [rdi], ah ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040ee92 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000475800 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048835b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000403f14 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000042de7b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041ae66 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000483053 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x00000000004011e1 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000471903 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x00000000004b30e8 : or byte ptr [rsp + rdi*8], ah ; jmp qword ptr [rcx]
0x0000000000457ad1 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000410ad4 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004239d2 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045d4ce : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000486c2d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000046d44b : or cl, ch ; jmp rsp
0x000000000047b575 : or cl, ch ; ret
0x0000000000413946 : or cl, ch ; retf
0x000000000047f6d9 : or cl, ch ; retf 0xfffd
0x00000000004a8f02 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000435453 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f4a5 : or dh, bl ; ret
0x00000000004a8d2a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000004866c2 : or dh, byte ptr [rdi + rsi*8 + 0xd8d48ff] ; ret
0x000000000044ce1c : or dh, dh ; ret 0x8902
0x000000000041a9b7 : or dh, dh ; ret 0xf02
0x000000000049466d : or dl, bh ; call qword ptr [rax + 0x10fffa07]
0x0000000000494669 : or dl, bh ; call qword ptr [rax]
0x0000000000494869 : or dl, bh ; jmp qword ptr [rax + 0x20fffa07]
0x0000000000494865 : or dl, bh ; jmp qword ptr [rax]
0x00000000004946e9 : or dl, bh ; jmp rdx
0x00000000004205ca : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044d45a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040d9fb : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000428c97 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a6ce : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000440cee : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004ac0a5 : or dword ptr [rax], eax ; add al, bh ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004727eb : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000488a60 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042a767 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f67f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a6a5 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000411c17 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044a4bd : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004296a8 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045e9e5 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000401f23 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004a35b7 : or dword ptr [rax], ecx ; retf
0x0000000000482c19 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004a8673 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000042d616 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412dd0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000418613 : or dword ptr [rbx], ecx ; sub al, byte ptr [rax] ; ret
0x0000000000480e08 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000046f2a2 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046ca70 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a8ece : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004243d7 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000047fc96 : or dword ptr [rip + 0x23a54b], 1 ; pop rbx ; ret
0x00000000004b3df8 : or eax, 0x10a0303 ; ret
0x00000000004b3e50 : or eax, 0x1370303 ; ret
0x0000000000494411 : or eax, 0x1440fffa ; cli ; call rax
0x0000000000444a11 : or eax, 0x1c478d48 ; ret
0x00000000004b3de8 : or eax, 0x34b0303 ; ret
0x00000000004b3e1c : or eax, 0x35b0303 ; ret
0x000000000049464d : or eax, 0x360fffa ; cli ; jmp qword ptr [rax]
0x000000000046f0c2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046e92a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a7da : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440302 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000042a2b7 : or eax, 0x83480000 ; ret 0x4910
0x000000000043dc31 : or eax, 0x83480000 ; ret 0xe910
0x000000000042a2e5 : or eax, 0x83480000 ; ret 0xeb10
0x000000000042a2ad : or eax, 0x83490000 ; jmp 0x42a2cd
0x0000000000427bd8 : or eax, 0x894d0000 ; retf
0x0000000000454ebf : or eax, 0x89fffacc ; retf 0xe283
0x0000000000490f02 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000474482 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000004a6d21 : or eax, 0xcad7947e ; jmp 0x4a6ccd
0x000000000049460d : or eax, 0xd70fffa ; cli ; jmp rax
0x00000000004944cd : or eax, 0xda2fffa ; cli ; call qword ptr [rdx]
0x000000000049edd9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000049ede5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004a8eb3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000494d95 : or eax, 0xe90fffa ; cli ; call qword ptr [rax]
0x0000000000493e19 : or eax, 0xea0fff9 ; stc ; jmp rax
0x0000000000454205 : or eax, 0xea810000 ; ret 0
0x00000000004a8b53 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000435303 : or eax, 0xf7f0ff3 ; ret
0x00000000004494ed : or eax, 0xffffffff ; ret
0x000000000042bf39 : or eax, 1 ; ret
0x000000000042a497 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ddd1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a4c5 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044a561 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000427d58 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004acfc8 : or eax, dword ptr [rdx] ; jae 0x4acfda ; ret
0x00000000004b512a : or eax, dword ptr [rdx] ; ret 0xe0a
0x000000000047fad3 : or eax, edi ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000418304 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041763c : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf 0x2a46
0x00000000004128ed : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004354c3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000414776 : or ebx, esi ; ret
0x000000000042324f : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000413667 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000004105e8 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000464ba6 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc27f93b6
0x000000000042418c : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000490f7f : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004828f3 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x0000000000494d91 : or edi, edx ; call qword ptr [rax]
0x0000000000494655 : or edi, edx ; jmp qword ptr [rax + 0x10fffa0a]
0x00000000004ab60d : or edi, esi ; jmp qword ptr [rcx]
0x00000000004b2cd1 : or edi, esp ; jmp qword ptr [rax]
0x000000000044a519 : or edx, 0x40 ; mov eax, ecx ; syscall
0x0000000000494665 : or edx, edi ; call qword ptr [rax + 0x10fffa08]
0x0000000000494661 : or edx, edi ; call qword ptr [rax]
0x0000000000494861 : or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x000000000049485d : or edx, edi ; jmp qword ptr [rax]
0x00000000004946e1 : or edx, edi ; jmp rdx
0x00000000004353e3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045af54 : or esi, ebx ; ret
0x0000000000412dd1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004ac7d2 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000044a518 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000435532 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004354c2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435452 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353e2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b5129 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000047f6d8 : or r9b, bpl ; retf 0xfffd
0x0000000000457ad0 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b3e4f : or rax, 0x1370303 ; ret
0x00000000004b3de7 : or rax, 0x34b0303 ; ret
0x00000000004b3e1b : or rax, 0x35b0303 ; ret
0x000000000046f0c1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046e929 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004494ec : or rax, 0xffffffffffffffff ; ret
0x000000000042a537 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004acfc7 : or rax, qword ptr [rdx] ; jae 0x4acfdb ; ret
0x00000000004ac7d1 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000424706 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004245c6 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048dba5 : out 0x41, eax ; call rdi
0x0000000000486769 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470d8d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000422db8 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000004a8740 : out 0x78, al ; jnp 0x4a87a2 ; retf
0x0000000000489a0d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x00000000004018bd : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489ae1 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000489bbd : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x00000000004899c7 : out 0x89, al ; out dx, eax ; call rax
0x00000000004a6cd1 : out 0xb3, al ; retf 0xe80
0x00000000004a7a00 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000047281c : out 0xe8, al ; xchg eax, esi ; fdiv st(0), st(0) ; dec dword ptr [rax + 1] ; ret
0x0000000000418f60 : out 0xe8, eax ; retf 0xfe74
0x00000000004056ca : out 0xeb, eax ; retf 0x8b49
0x0000000000434cca : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d4a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a9728 : out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000049432d : out 0xf9, al ; call qword ptr [rax]
0x000000000049434d : out 0xf9, al ; call rax
0x000000000049428d : out 0xf9, eax ; call qword ptr [rax]
0x0000000000461be2 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000402b1d : out 1, eax ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000456eae : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a8b57 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000004243ee : out dx, al ; jns 0x4243f8 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004498bd : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004497ed : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042f4ca : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004234c2 : out dx, al ; mov rdi, rax ; call rcx
0x000000000044a4b8 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000004350da : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f52e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a8eb2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a873f : out dx, al ; out 0x78, al ; jnp 0x4a87a3 ; retf
0x0000000000421e73 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000041fe86 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004178c9 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417921 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000468971 : out dx, eax ; call 0x4004b0
0x00000000004219e4 : out dx, eax ; call 0x41dc23
0x0000000000489a0f : out dx, eax ; call qword ptr [r14]
0x00000000004018bf : out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489ae3 : out dx, eax ; call qword ptr [rax]
0x0000000000489bbf : out dx, eax ; call qword ptr [rcx]
0x000000000045819d : out dx, eax ; call r12
0x000000000048eb8d : out dx, eax ; call r14
0x0000000000422847 : out dx, eax ; call rax
0x00000000004740e2 : out dx, eax ; call rbx
0x00000000004b0838 : out dx, eax ; cld ; hlt ; jmp qword ptr [rbx]
0x00000000004a97a5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044a4bb : out dx, eax ; mov eax, 9 ; syscall
0x000000000041248d : out dx, eax ; mov eax, r9d ; syscall
0x000000000042f2fa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f3f6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f342 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000474233 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040df8a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000043515a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f62d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c663 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c63b
0x000000000042c6e1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c6b9
0x000000000042cb73 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cb4b
0x000000000042cbf1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cbc9
0x000000000042c263 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c278 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c28d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446743 : out dx, eax ; ret 0xf66
0x0000000000446726 : out dx, eax ; retf 0x4466
0x00000000004a8e7b : out dx, eax ; retf 0xab0d
0x00000000004247ea : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042d77c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d765 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d74e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c20a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048ab07 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043d53e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444b6e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004852e7 : outsb dx, byte ptr [rsi] ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a9303 : outsb dx, byte ptr [rsi] ; ja 0x4a928c ; ret 0x48f
0x000000000047d720 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x0000000000477e8c : outsb dx, byte ptr [rsi] ; ret 2
0x00000000004a7d32 : outsb dx, byte ptr [rsi] ; retf
0x00000000004a7044 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a8678 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000419142 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000424998 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438ebe : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042fa82 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000042fc82 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042d57d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042d61d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042d142 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042d1c2 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000047330a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d582 : outsd dx, dword ptr [rsi] ; ret
0x00000000004633ed : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000041a30a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000046616d : outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x00000000004a7a06 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000419d42 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042fc37 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000463416 : outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x000000000042d622 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000466149 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x000000000047335a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042fb02 : outsd dx, dword ptr [rsi] ; retf
0x000000000043cee9 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000042fd02 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042cb6a : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042c65a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004633b4 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000046610f : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000004102ad : outsd dx, dword ptr [rsi] ; test eax, 0x8948002a ; ret 0x8948
0x00000000004a7a05 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042a172 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000474814 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000004747ff : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042a171 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a8e05 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a8e06 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000447e06 : pextrw edi, mm0, 0x77 ; ret
0x000000000042b332 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42b399 ; xor eax, eax ; ret
0x000000000044091f : pmovmskb edx, mm4 ; test edx, edx ; je 0x440933 ; bsf eax, edx ; ret
0x000000000044bd35 : pop r10 ; ret
0x00000000004a928f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044e0f0 : pop r12 ; jmp 0x45abe4
0x000000000044a651 : pop r12 ; jmp rax
0x000000000044a636 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fe89 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004223ac : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421056 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040258e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040068f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f8e9 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041017e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da89 : pop r12 ; pop r13 ; ret
0x0000000000405d94 : pop r12 ; ret
0x000000000041fe8b : pop r13 ; pop r14 ; jmp rax
0x00000000004223ae : pop r13 ; pop r14 ; jmp rcx
0x0000000000421058 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402590 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400691 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f8eb : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410180 : pop r13 ; pop r14 ; ret
0x000000000040da8b : pop r13 ; ret
0x000000000041fe8d : pop r14 ; jmp rax
0x00000000004223b0 : pop r14 ; jmp rcx
0x000000000042105a : pop r14 ; pop r15 ; jmp rax
0x0000000000402592 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400693 : pop r14 ; pop r15 ; ret
0x000000000040f8ed : pop r14 ; pop rbp ; ret
0x0000000000410182 : pop r14 ; ret
0x000000000042105c : pop r15 ; jmp rax
0x0000000000402594 : pop r15 ; pop rbp ; ret
0x0000000000400695 : pop r15 ; ret
0x000000000041e644 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000460dc2 : pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000494e71 : pop rax ; cli ; jmp qword ptr [rax]
0x000000000045eda9 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045dcdd : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000045f3e2 : pop rax ; jmp 0x45f3e9
0x0000000000481abc : pop rax ; jmp qword ptr [rax]
0x0000000000492112 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481b76 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004b0e54 : pop rax ; push rdi ; add byte ptr [rax], al ; mov byte ptr [rax], ah ; cli ; call qword ptr [rdi]
0x00000000004155a4 : pop rax ; ret
0x00000000004a91e3 : pop rax ; retf
0x00000000004ac168 : pop rax ; sub al, 0xf6 ; call qword ptr [rax]
0x000000000048efb1 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004af8b8 : pop rax ; test cl, bh ; call qword ptr [rbx]
0x00000000004b1668 : pop rax ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004564e9 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x456561 ; mov rdx, rax ; jmp 0x4564b8
0x0000000000460d2a : pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a8c85 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000416670 : pop rbp ; jmp rax
0x0000000000475648 : pop rbp ; mov eax, 0x101 ; syscall
0x0000000000486b83 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a9b : pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x00000000004a75e0 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000488a5f : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044e0ef : pop rbp ; pop r12 ; jmp 0x45abe5
0x000000000044a650 : pop rbp ; pop r12 ; jmp rax
0x000000000044a635 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fe88 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004223ab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421055 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040068e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041017d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da88 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405d93 : pop rbp ; pop r12 ; ret
0x000000000041fe8c : pop rbp ; pop r14 ; jmp rax
0x00000000004223af : pop rbp ; pop r14 ; jmp rcx
0x0000000000421059 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402591 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400692 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f8ec : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000410181 : pop rbp ; pop r14 ; ret
0x0000000000484408 : pop rbp ; pop rbx ; ret
0x0000000000400aa8 : pop rbp ; ret
0x000000000040359f : pop rbp ; retf 0xffbf
0x00000000004b12d9 : pop rbx ; add byte ptr [rax], al ; add al, 0x74 ; cli ; call qword ptr [rdx]
0x0000000000485071 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048c4fd : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004a65d8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000461018 : pop rbx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448156 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a65d6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004165b4 : pop rbx ; jmp rax
0x000000000047fcb7 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x00000000004481a1 : pop rbx ; mov eax, eax ; ret
0x000000000041058f : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465f0d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004170f9 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041ab13 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040f8e8 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000457b2c : pop rbx ; pop r12 ; ret
0x000000000048ab89 : pop rbx ; pop r14 ; ret
0x0000000000460dc1 : pop rbx ; pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000041666f : pop rbx ; pop rbp ; jmp rax
0x000000000044e0ee : pop rbx ; pop rbp ; pop r12 ; jmp 0x45abe6
0x0000000000470d91 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a634 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fe87 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004223aa : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004101b4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da87 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405d92 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401b86 : pop rbx ; pop rbp ; ret
0x0000000000400d78 : pop rbx ; ret
0x00000000004a98c0 : pop rbx ; ret 0x6f9
0x00000000004a6d9d : pop rbx ; retf
0x000000000044e030 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000405dae : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004170c2 : pop rbx ; xor edx, edx ; jmp rax
0x0000000000429f47 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000461123 : pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042a627 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000493ef5 : pop rcx ; stc ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x00000000004b5141 : pop rcx ; std ; call qword ptr [rdx]
0x000000000042de78 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b1665 : pop rdi ; add byte ptr [rax], al ; pop rax ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b163d : pop rdi ; add byte ptr [rax], al ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b1651 : pop rdi ; add byte ptr [rax], al ; xchg rax, rbp ; cli ; call qword ptr [rcx]
0x000000000043fcbd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004608c9 : pop rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042f899 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f6a9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8b7e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000042105d : pop rdi ; jmp rax
0x00000000004a7b41 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044b322 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044a849 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044a815 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042f4c9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f2f9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f3f5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f341 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000402595 : pop rdi ; pop rbp ; ret
0x0000000000400696 : pop rdi ; ret
0x000000000046faad : pop rdi ; ret 0xfffd
0x000000000048f7fd : pop rdi ; retf
0x000000000046c6bd : pop rdi ; stosd dword ptr [rdi], eax ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000042ab26 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000461074 : pop rdx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000494e75 : pop rdx ; cli ; push qword ptr [rax] ; pop rsp ; cli ; call rax
0x00000000004a8761 : pop rdx ; je 0x4a872b ; ret 0xacfc
0x00000000004a8873 : pop rdx ; leave ; retf
0x00000000004a9727 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044bd34 : pop rdx ; pop r10 ; ret
0x0000000000481b77 : pop rdx ; pop rbx ; ret
0x0000000000494f0e : pop rdx ; pop rdx ; xor byte ptr [rbp - 0x617f0006], bl ; cli ; call rax
0x000000000044bd59 : pop rdx ; pop rsi ; ret
0x00000000004497c5 : pop rdx ; ret
0x000000000046fcad : pop rdx ; retf
0x0000000000493ef9 : pop rdx ; stc ; jmp rax
0x00000000004956c0 : pop rdx ; sti ; call qword ptr [rdx]
0x00000000004a9290 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000494f0f : pop rdx ; xor byte ptr [rbp - 0x617f0006], bl ; cli ; call rax
0x000000000042c664 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c63a
0x000000000042c6e2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c6b8
0x000000000042cb74 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cb4a
0x000000000042cbf2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cbc8
0x000000000043fbbe : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420356 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004582c6 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000041fe8e : pop rsi ; jmp rax
0x00000000004223b1 : pop rsi ; jmp rcx
0x000000000044b2f2 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x000000000042105b : pop rsi ; pop r15 ; jmp rax
0x0000000000402593 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400694 : pop rsi ; pop r15 ; ret
0x000000000040f8ee : pop rsi ; pop rbp ; ret
0x0000000000410183 : pop rsi ; ret
0x0000000000477e93 : pop rsi ; ret 2
0x000000000043d750 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ae24 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b1359 : pop rsp ; add byte ptr [rax], al ; xor al, 0x74 ; cli ; jmp rax
0x000000000043e450 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041c94b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000494e79 : pop rsp ; cli ; call rax
0x00000000004491b0 : pop rsp ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044e0f1 : pop rsp ; jmp 0x45abe3
0x000000000044a652 : pop rsp ; jmp rax
0x00000000004af7b4 : pop rsp ; jp 0x4af7b3 ; call rsp
0x0000000000490d30 : pop rsp ; mov dl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044a637 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000041fe8a : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x00000000004223ad : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421057 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040258f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400690 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f8ea : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041017f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040da8a : pop rsp ; pop r13 ; ret
0x00000000004b1358 : pop rsp ; pop rsp ; add byte ptr [rax], al ; xor al, 0x74 ; cli ; jmp rax
0x0000000000401d33 : pop rsp ; ret
0x0000000000401df6 : pop rsp ; retf
0x00000000004828da : pop rsp ; retf 0x4df0
0x00000000004a88e7 : pop rsp ; sbb ebp, ebx ; retf
0x000000000046fe7c : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000040f894 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046aa7d : popfq ; call 0xffffffffc3caaa87
0x0000000000480d07 : popfq ; div edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000046a7bf : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a886c : popfq ; jrcxz 0x4a8831 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000048c6ce : popfq ; ret 0xf45
0x000000000040948f : popfq ; retf
0x00000000004a9622 : popfq ; retf 0xde4f
0x00000000004afea1 : popfq ; stc ; call qword ptr [rbx]
0x0000000000435222 : psllq mm1, qword ptr [r15] ; jg 0x43523d ; ret
0x0000000000437d42 : psllq mm1, qword ptr [r15] ; jg 0x437d5d ; ret
0x0000000000435223 : psllq mm1, qword ptr [rdi] ; jg 0x43523c ; ret
0x0000000000437d43 : psllq mm1, qword ptr [rdi] ; jg 0x437d5c ; ret
0x0000000000444236 : psllq mm1, qword ptr [rdi] ; jg 0x44424a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444235 : psllq mm1, qword ptr [rdi] ; jg 0x44424b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444297 : psllq mm1, qword ptr [rdi] ; jg 0x4442ac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000494dd9 : psubd mm7, mm7 ; nop ; adc dl, bh ; call qword ptr [rax]
0x0000000000494639 : psubd mm7, mm7 ; or byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x00000000004a7644 : push -0x30 ; retf 0xe72e
0x00000000004a6cce : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a8e75 : push -0x57d3205 ; call 0xffffffffab585975
0x00000000004a6e81 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000045e1d2 : push -0x7c000003 ; ret
0x0000000000444b54 : push -0x9ffffff ; ret 0x7501
0x00000000004acbad : push -0xa ; call qword ptr [rax]
0x00000000004a8675 : push 0x1b6e41b5 ; std ; retf
0x0000000000411bbd : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000488454 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479a85 : push 0x48b4901 ; and al, 0x83 ; ret
0x00000000004585cc : push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004ac164 : push 0x5800000a ; sub al, 0xf6 ; call qword ptr [rax]
0x00000000004b1664 : push 0x5800005f ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004a9302 : push 0x6e ; ja 0x4a928d ; ret 0x48f
0x0000000000417705 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000415fe7 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x000000000041732a : push 0x75c08548 ; ret
0x00000000004848fa : push 0x77 ; and eax, dword ptr [rax] ; ret
0x00000000004a8be2 : push 0xfd4cbe ; retf 0xf64
0x0000000000494627 : push qword ptr [rax + 0x40fffa11] ; adc edx, edi ; call rax
0x0000000000494947 : push qword ptr [rax + 0x40fffa34] ; xor al, 0xfa ; call rsi
0x0000000000494b1f : push qword ptr [rax + 0x40fffa38] ; cmp dl, bh ; call rax
0x0000000000493ef7 : push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x000000000049460f : push qword ptr [rax + 0xd] ; cli ; jmp rax
0x000000000049488b : push qword ptr [rax + 3] ; cli ; call qword ptr [rax]
0x0000000000494687 : push qword ptr [rax + 4] ; cli ; jmp rax
0x0000000000494c97 : push qword ptr [rax + rsi - 6] ; jmp rsp
0x00000000004943b7 : push qword ptr [rax - 0x31] ; stc ; inc eax ; sar cl, 1 ; call qword ptr [rax]
0x000000000049500b : push qword ptr [rax - 0x3f000508] ; clc ; cli ; call rax
0x0000000000494f8f : push qword ptr [rax - 0x3f00050e] ; cli ; jmp rax
0x0000000000494f4f : push qword ptr [rax - 0x3f00050f] ; int1 ; cli ; call rax
0x0000000000494e57 : push qword ptr [rax - 0x3f0005b5] ; cli ; call rax
0x000000000049423f : push qword ptr [rax - 0x56] ; stc ; inc eax ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x00000000004941eb : push qword ptr [rax - 0x5d] ; stc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x0000000000494ef3 : push qword ptr [rax - 0x69] ; cli ; call qword ptr [rax]
0x0000000000494ed3 : push qword ptr [rax - 0x76] ; cli ; call qword ptr [rax]
0x000000000049483f : push qword ptr [rax] ; add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x000000000048e06d : push qword ptr [rax] ; jne 0x48e0a0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048eecd : push qword ptr [rax] ; jne 0x48ef00 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049411b : push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x000000000049419b : push qword ptr [rax] ; mov dh, 0xf9 ; jmp qword ptr [rax]
0x00000000004941b3 : push qword ptr [rax] ; mov dl, 0xf9 ; inc dword ptr [rax] ; mov ah, 0xf9 ; jmp rax
0x0000000000494857 : push qword ptr [rax] ; or bh, dl ; jmp qword ptr [rax + 0x20fffa09]
0x0000000000494e77 : push qword ptr [rax] ; pop rsp ; cli ; call rax
0x00000000004943a7 : push qword ptr [rax] ; retf 0xfff9
0x0000000000494d4f : push qword ptr [rax] ; sub edx, edi ; call rax
0x0000000000494eeb : push qword ptr [rax] ; xchg eax, esp ; cli ; call rax
0x0000000000494ecb : push qword ptr [rax] ; xchg edx, edi ; call rax
0x0000000000493ecb : push qword ptr [rax] ; xor edi, ecx ; call qword ptr [rax]
0x00000000004464d8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044a6e8 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a6c0 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b2f0 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b320 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042bee9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x00000000004718d8 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000041712d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004718fe : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000417596 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x0000000000494abb : push qword ptr [rbp + rsi + 0x3544fffa] ; cli ; call rsp
0x000000000047f36b : push qword ptr [rbp - 0x2e] ; ret
0x0000000000417960 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004613f3 : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45d699
0x00000000004494dc : push qword ptr [rbx + 1] ; ret
0x0000000000493fb7 : push qword ptr [rcx + 0x41fff994] ; xchg eax, ebp ; stc ; call rcx
0x000000000045eb54 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a16f : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041570f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000454f83 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004014a8 : push qword ptr [rcx] ; sar byte ptr [rsi + 1], 0xe8 ; retf
0x0000000000422bc6 : push qword ptr [rcx] ; shr al, 0xc2 ; int 0xfe
0x00000000004593dd : push qword ptr [rcx] ; shr cl, cl ; retf
0x0000000000448fab : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000449b66 : push qword ptr [rdi + 0x3f] ; ret
0x0000000000449896 : push qword ptr [rdi + 0x57] ; ret
0x00000000004497c3 : push qword ptr [rdi + 0x5a] ; ret
0x0000000000496417 : push qword ptr [rdi + 0x72] ; sti ; jmp qword ptr [rcx]
0x000000000045af52 : push qword ptr [rdi + 0xb] ; ret
0x000000000044956a : push qword ptr [rdi + 3] ; ret
0x0000000000449859 : push qword ptr [rdi + 4] ; ret
0x00000000004495b8 : push qword ptr [rdi + 5] ; ret
0x00000000004755ce : push qword ptr [rdi + 7] ; ret
0x000000000044a335 : push qword ptr [rdi + 8] ; ret
0x000000000044992c : push qword ptr [rdi + 9] ; ret
0x0000000000475484 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004949f3 : push qword ptr [rdx + 0x42fffa36] ; cli ; call rdx
0x00000000004946d7 : push qword ptr [rdx + 0xa] ; cli ; jmp rdx
0x0000000000493fff : push qword ptr [rsi + 0x46fff995] ; xchg eax, esi ; stc ; jmp rsi
0x0000000000494457 : push qword ptr [rsi + 0x46fffa13] ; adc edi, edx ; call rsi
0x000000000047839a : push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004945c3 : push qword ptr [rsi + rcx + 0xe44fffa] ; cli ; call rsp
0x0000000000411396 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000416562 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a6d2c : push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004709da : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000418311 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041c39d : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000494438 : push rax ; adc dl, bh ; jmp rax
0x0000000000454e3f : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x0000000000416563 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042388c : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000493e5b : push rax ; and al, 0xf9 ; call qword ptr [rax]
0x0000000000400ec0 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000045116f : push rax ; call 0x44d3c3
0x00000000004613f9 : push rax ; call 0x45d693
0x000000000044e7d8 : push rax ; call rbx
0x0000000000495017 : push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000494d28 : push rax ; cli ; call rax
0x0000000000494f9b : push rax ; cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000470504 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000494317 : push rax ; fdiv st(1), st(0) ; call rax
0x0000000000494310 : push rax ; fyl2xp1 ; call qword ptr [rax]
0x0000000000494ff3 : push rax ; idiv edx ; call qword ptr [rax]
0x0000000000494f5f : push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494eb8 : push rax ; jge 0x494eb8 ; call rax
0x0000000000420748 : push rax ; jmp 0x4204b1
0x000000000044a20c : push rax ; jo 0x44a212 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471f29 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a6d9a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000494198 : push rax ; mov ah, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; jmp qword ptr [rax]
0x00000000004ada60 : push rax ; mov bl, 0xf6 ; call qword ptr [rsi]
0x0000000000494093 : push rax ; mov bl, 0xf9 ; call rax
0x0000000000494118 : push rax ; mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000450a81 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004940e8 : push rax ; mov ebp, 0xbf50fff9 ; stc ; jmp rax
0x0000000000494dd0 : push rax ; or al, 0xfa ; call qword ptr [rax + 0x10fffa0d]
0x00000000004858a1 : push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x4858b9
0x0000000000419092 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041a3ba : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044b00d : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041cd95 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044ce1b : push rax ; or dh, dh ; ret 0x8902
0x000000000041dad2 : push rax ; or dh, dh ; ret 0xf02
0x0000000000494d8f : push rax ; or edi, edx ; call qword ptr [rax]
0x000000000048232e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000488505 : push rax ; pop rbx ; ret
0x0000000000494637 : push rax ; psubd mm7, mm7 ; or byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x0000000000478399 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x0000000000494e67 : push rax ; push rbx ; cli ; inc dword ptr [rax] ; push rsi ; cli ; call qword ptr [rax]
0x0000000000450a83 : push rax ; push rsp ; ret
0x0000000000477e9a : push rax ; ret 2
0x00000000004943eb : push rax ; retf
0x000000000048f90c : push rax ; retf 0x22
0x000000000041b6f4 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000418306 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471a19 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000493edd : push rax ; stc ; call rax
0x0000000000495037 : push rax ; stc ; cli ; call qword ptr [rax]
0x0000000000493f1b : push rax ; stc ; jmp rax
0x0000000000494d38 : push rax ; sub al, 0xfa ; call rax
0x0000000000412853 : push rax ; sub al, byte ptr [eax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000494070 : push rax ; xchg eax, ebx ; stc ; call rax
0x0000000000494060 : push rax ; xchg eax, ecx ; stc ; call rax
0x00000000004941d0 : push rax ; xchg eax, edi ; stc ; call qword ptr [rax - 0x1f000665]
0x0000000000494068 : push rax ; xchg eax, edx ; stc ; call rax
0x0000000000494b48 : push rax ; xor al, 0xfa ; jmp rax
0x00000000004a6d2d : push rax ; xor byte ptr [rcx], ah ; retf
0x00000000004633e7 : push rbp ; add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000489f8a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048ca32 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000047fad8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000469a22 : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000478adf : push rbp ; jns 0x478ae0 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000413787 : push rbp ; js 0x4137bb ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048157c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004753ad : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000459e47 : push rbp ; ret
0x00000000004919a7 : push rbp ; ret 0xfff7
0x0000000000410946 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040100f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047f94f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484c27 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8f19 : push rbx ; call 0x4c14b8d6
0x0000000000494e69 : push rbx ; cli ; inc dword ptr [rax] ; push rsi ; cli ; call qword ptr [rax]
0x0000000000412da8 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x00000000004476c5 : push rbx ; jb 0x4476d5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000471912 : push rbx ; je 0x471976 ; pop rbp ; pop r12 ; ret
0x000000000047199e : push rbx ; je 0x471a02 ; pop rbp ; pop r12 ; ret
0x00000000004753ae : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000412da4 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044b21f : push rbx ; ret
0x0000000000463a59 : push rbx ; retf
0x00000000004a875c : push rbx ; xchg eax, edx ; jae 0x4a873b ; push rsi ; pop rdx ; je 0x4a8730 ; ret 0xacfc
0x000000000041e9b2 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041aceb : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b067 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004b0835 : push rcx ; add byte ptr [rax], al ; out dx, eax ; cld ; hlt ; jmp qword ptr [rbx]
0x000000000044b6bb : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004876c2 : push rcx ; and eax, dword ptr [rax] ; jne 0x4876f4 ; ret
0x00000000004a79e5 : push rcx ; call qword ptr [rsi]
0x000000000045e646 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000043867d : push rcx ; jl 0x4386ce ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004387e4 : push rcx ; jl 0x438835 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000479101 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x00000000004790d3 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004156ab : push rcx ; ret 0xffff
0x00000000004197fd : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000403f3e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044aaa8 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000403f2e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x000000000044477a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000435389 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b0e55 : push rdi ; add byte ptr [rax], al ; mov byte ptr [rax], ah ; cli ; call qword ptr [rdi]
0x0000000000478044 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044482c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045dd1f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042f188 : push rdi ; clc ; ret
0x000000000042f300 : push rdi ; cld ; ret
0x000000000042fe27 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434c69 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046fd35 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000434be9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434a3a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000402e4d : push rdi ; mov dword ptr [rbx], ebp ; add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000416474 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434aca : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000403f1e : push rdi ; or al, 0xf ; retf 0xd289
0x00000000004843fa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048821a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000484401 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000403f13 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041a9b6 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000444a10 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042d57e : push rdi ; ret
0x000000000042d61e : push rdi ; ret 0xff3
0x000000000042d143 : push rdi ; retf
0x000000000042d1c3 : push rdi ; retf 0xcab2
0x0000000000419120 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045dd23 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000403f52 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000430027 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f84a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fc27 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000040382c : push rdi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047330b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b338 : push rdi ; xor eax, eax ; ret
0x00000000004944e4 : push rdx ; adc bh, dl ; jmp rdx
0x00000000004949dc : push rdx ; cmp edx, edi ; jmp rdx
0x000000000042477a : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004946d3 : push rdx ; or bh, dl ; push qword ptr [rdx + 0xa] ; cli ; jmp rdx
0x000000000046e6ca : push rdx ; retf
0x0000000000450a7d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042c264 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446d69 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x446dc0 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b0dc1 : push rsi ; add byte ptr [rax], al ; cmp al, 0x17 ; cli ; call rcx
0x0000000000435621 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435691 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004441c5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004355b1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000444163 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042c279 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f2b2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fa21 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f655 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f835 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fa15 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f475 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000494e6d : push rsi ; cli ; call qword ptr [rax]
0x0000000000494978 : push rsi ; cli ; jmp rsi
0x00000000004a9300 : push rsi ; cli ; push 0x6e ; ja 0x4a928f ; ret 0x48f
0x0000000000446016 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000045859e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000446006 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000445fd6 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004ae3b9 : push rsi ; jmp rsi
0x00000000004a8760 : push rsi ; pop rdx ; je 0x4a872c ; ret 0xacfc
0x00000000004a66a6 : push rsi ; ret
0x00000000004095d6 : push rsi ; retf 0xffff
0x0000000000469241 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004582ca : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045e133 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445fe6 : push rsi ; sub eax, edx ; ret
0x00000000004a6d28 : push rsi ; xchg eax, ebp ; jge 0x4a6d0d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042c28e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004945ac : push rsp ; adc edx, edi ; jmp rsp
0x00000000004b0bf9 : push rsp ; add byte ptr [rax], al ; in al, 3 ; cli ; jmp qword ptr [rdx]
0x0000000000475831 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000048255a : push rsp ; and al, 0x10 ; call rdx
0x000000000041ca08 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041cf65 : push rsp ; and al, 8 ; call 0x419205
0x0000000000494aa4 : push rsp ; cmp dl, bh ; jmp rsp
0x00000000004b1650 : push rsp ; pop rdi ; add byte ptr [rax], al ; xchg rax, rbp ; cli ; call qword ptr [rcx]
0x00000000004608c8 : push rsp ; pop rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000450a84 : push rsp ; ret
0x0000000000488ffc : push rsp ; ret 0x4808
0x0000000000481481 : push rsp ; ret 0xeb30
0x00000000004829d5 : push rsp ; retf 0x48f8
0x00000000004b3ebc : push rsp ; retf 0xfffc
0x0000000000403e67 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x0000000000493ee9 : push rsp ; stc ; jmp qword ptr [rax]
0x00000000004ac17c : push rsp ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004a8f2a : push rsp ; syscall
0x0000000000494c93 : push rsp ; xor dl, bh ; push qword ptr [rax + rsi - 6] ; jmp rsp
0x000000000043d410 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000462526 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044b297 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b2a8 ; call r12
0x000000000045212a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000479c7f : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416b9b : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000043e110 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a2e4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000048c707 : pushfq ; ret 0xf45
0x00000000004943bc : rcl al, 0xf9 ; call qword ptr [rax]
0x0000000000494404 : rcl bl, 1 ; stc ; jmp qword ptr [rax]
0x0000000000494ef0 : rcl byte ptr [rbp - 0x688f0006], 1 ; cli ; call qword ptr [rax]
0x0000000000494064 : rcl byte ptr [rcx - 0x6daf0007], 1 ; stc ; call rax
0x00000000004a9071 : rcl byte ptr [rdi], cl ; retf
0x000000000049406c : rcl byte ptr [rdx - 0x6caf0007], 1 ; stc ; call rax
0x00000000004b2e70 : rcl byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x000000000042388b : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004a8b9a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004a875f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a872d ; ret 0xacfc
0x00000000004a8b99 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a875b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a8731 ; ret 0xacfc
0x0000000000484a52 : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; retf
0x00000000004730f3 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405db0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000410591 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000465f0f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000484407 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000044fa12 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041474c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ec76 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048d338 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000041063a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000410022 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a8b7d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004af4c0 : rcr cl, 0xf8 ; call qword ptr [rax]
0x00000000004826b9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a8ed1 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000446ea4 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000446e96 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447bca : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041ec91 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000400416 : ret
0x00000000004006c7 : ret 0
0x000000000049f1e0 : ret 0x10
0x000000000047b56a : ret 0x101
0x00000000004843dc : ret 0x114d
0x0000000000457ad4 : ret 0x1176
0x000000000047fadc : ret 0x1272
0x000000000047c673 : ret 0x13e9
0x000000000048aba1 : ret 0x145
0x0000000000483886 : ret 0x1474
0x0000000000479108 : ret 0x1475
0x00000000004758e1 : ret 0x1477
0x0000000000445f78 : ret 0x148
0x00000000004047a4 : ret 0x149
0x0000000000438a3f : ret 0x14d
0x0000000000409b9a : ret 0x164
0x000000000046c191 : ret 0x1674
0x00000000004493de : ret 0x16e9
0x000000000042716a : ret 0x17
0x000000000042b816 : ret 0x1776
0x000000000040819a : ret 0x17e
0x000000000040aa92 : ret 0x18
0x000000000043897c : ret 0x180f
0x000000000042b3a5 : ret 0x1876
0x0000000000457acb : ret 0x1a72
0x00000000004a90da : ret 0x1ad4
0x0000000000407c52 : ret 0x1b
0x00000000004a786d : ret 0x1b49
0x000000000048ec6f : ret 0x1be8
0x000000000042463a : ret 0x1c6
0x000000000045cc49 : ret 0x1ce9
0x00000000004a0eb0 : ret 0x1d4
0x00000000004a1648 : ret 0x1d5
0x0000000000400bd1 : ret 0x1d89
0x00000000004661ba : ret 0x1e4
0x000000000040eb32 : ret 0x1f0f
0x000000000041e9b6 : ret 0x1f77
0x0000000000459ebd : ret 0x1fe9
0x000000000045ab17 : ret 0x200
0x0000000000477c8b : ret 0x2041
0x0000000000449e9c : ret 0x2044
0x0000000000461be7 : ret 0x20be
0x000000000048ab0b : ret 0x2148
0x000000000041381d : ret 0x214c
0x0000000000412dac : ret 0x2175
0x0000000000490674 : ret 0x22
0x000000000047e878 : ret 0x2275
0x0000000000440ce8 : ret 0x2288
0x000000000042474a : ret 0x22a
0x000000000042d782 : ret 0x2373
0x000000000049feb8 : ret 0x24
0x000000000047ad92 : ret 0x241a
0x00000000004765f2 : ret 0x2424
0x00000000004866aa : ret 0x243
0x000000000047263a : ret 0x2459
0x0000000000476591 : ret 0x2462
0x000000000045cb39 : ret 0x25
0x0000000000415f5d : ret 0x2501
0x0000000000467294 : ret 0x2504
0x0000000000423663 : ret 0x2575
0x000000000048c5a1 : ret 0x25e9
0x000000000044c7f9 : ret 0x26
0x0000000000457aaa : ret 0x2643
0x000000000044ca72 : ret 0x26db
0x000000000044b6ea : ret 0x2706
0x00000000004737e6 : ret 0x2774
0x000000000047d1d8 : ret 0x27a
0x000000000042ef56 : ret 0x280f
0x000000000042b395 : ret 0x2876
0x000000000047e8f7 : ret 0x28f5
0x000000000041df4c : ret 0x29
0x00000000004633ee : ret 0x290f
0x0000000000411567 : ret 0x2948
0x000000000046632a : ret 0x2949
0x000000000040f040 : ret 0x294c
0x000000000041308d : ret 0x294d
0x000000000042442a : ret 0x2979
0x000000000041e81a : ret 0x29b0
0x000000000046dcf9 : ret 0x29e8
0x0000000000410510 : ret 0x2a
0x0000000000419f9a : ret 0x2a1d
0x0000000000419692 : ret 0x2a26
0x0000000000415b4a : ret 0x2a61
0x000000000040e819 : ret 0x2aa7
0x000000000042114a : ret 0x2ab
0x000000000041094a : ret 0x2b48
0x0000000000422d8b : ret 0x2b74
0x000000000041ecd2 : ret 0x2b75
0x0000000000448042 : ret 0x2b77
0x00000000004009b5 : ret 0x2b8
0x00000000004789da : ret 0x2bd
0x000000000048c58f : ret 0x2be9
0x000000000041f51e : ret 0x2c75
0x000000000041e34a : ret 0x2d9
0x000000000046f105 : ret 0x2e66
0x000000000044c11e : ret 0x2f75
0x0000000000467e55 : ret 0x30be
0x00000000004a03a8 : ret 0x33
0x0000000000452934 : ret 0x349
0x000000000048a940 : ret 0x3575
0x000000000047b23a : ret 0x3774
0x000000000042b7f6 : ret 0x3776
0x00000000004a89ba : ret 0x3827
0x000000000046ff8e : ret 0x3873
0x000000000042b385 : ret 0x3876
0x0000000000416a0b : ret 0x389
0x00000000004a7046 : ret 0x38ae
0x000000000048e252 : ret 0x38e8
0x0000000000489518 : ret 0x3901
0x0000000000480ffd : ret 0x3934
0x000000000046d74f : ret 0x3941
0x00000000004111f1 : ret 0x3948
0x0000000000411fad : ret 0x3949
0x000000000041edfc : ret 0x394c
0x0000000000468dfd : ret 0x394d
0x00000000004465f2 : ret 0x3a01
0x000000000042d76b : ret 0x3a73
0x0000000000488063 : ret 0x3a83
0x0000000000447011 : ret 0x3b48
0x0000000000449b7f : ret 0x3b8
0x0000000000414009 : ret 0x3c75
0x0000000000480fbd : ret 0x3d
0x000000000047f268 : ret 0x3d73
0x00000000004205d1 : ret 0x3d83
0x000000000041c92f : ret 0x3de9
0x000000000047b09a : ret 0x3e80
0x000000000045a2cb : ret 0x4002
0x000000000040d21d : ret 0x4074
0x0000000000473dd1 : ret 0x408d
0x000000000044c36a : ret 0x4101
0x00000000004604b8 : ret 0x4108
0x0000000000460c6d : ret 0x4110
0x0000000000481496 : ret 0x4118
0x0000000000481037 : ret 0x4134
0x00000000004530e7 : ret 0x415f
0x0000000000450b4e : ret 0x41c3
0x0000000000425dea : ret 0x4266
0x0000000000470a63 : ret 0x4389
0x0000000000405d81 : ret 0x4401
0x00000000004686ab : ret 0x4404
0x0000000000481816 : ret 0x4418
0x000000000041a30b : ret 0x4466
0x000000000041dca3 : ret 0x4473
0x000000000045020a : ret 0x468
0x00000000004a7b44 : ret 0x474c
0x0000000000423e06 : ret 0x4801
0x00000000004121a6 : ret 0x4803
0x0000000000422671 : ret 0x4804
0x0000000000440c73 : ret 0x4808
0x0000000000402f46 : ret 0x480a
0x000000000041c348 : ret 0x4810
0x000000000045887c : ret 0x4811
0x000000000045dbb7 : ret 0x481e
0x000000000045dbd7 : ret 0x4820
0x000000000044e2fe : ret 0x4830
0x0000000000425cf6 : ret 0x4840
0x000000000044d69c : ret 0x48c
0x0000000000440928 : ret 0x48c3
0x000000000044d30a : ret 0x48e
0x0000000000418d23 : ret 0x48e9
0x00000000004a9306 : ret 0x48f
0x0000000000405d1c : ret 0x4901
0x000000000045558b : ret 0x4902
0x0000000000419362 : ret 0x4908
0x000000000042a2bc : ret 0x4910
0x000000000044b53a : ret 0x4a4
0x000000000045a719 : ret 0x4c01
0x000000000041e64a : ret 0x4c07
0x000000000045d476 : ret 0x4c40
0x000000000046616e : ret 0x4ce8
0x000000000041d306 : ret 0x4d01
0x000000000045bf38 : ret 0x4d10
0x000000000040264f : ret 0x4de8
0x00000000004a8d67 : ret 0x4e27
0x000000000040167e : ret 0x4f76
0x000000000044ee8f : ret 0x5089
0x000000000044bf87 : ret 0x508b
0x000000000042d754 : ret 0x5173
0x0000000000449dd7 : ret 0x5488
0x00000000004a6fcc : ret 0x5508
0x0000000000471b2e : ret 0x5590
0x000000000042b7d6 : ret 0x5776
0x00000000004a9298 : ret 0x5803
0x00000000004555f1 : ret 0x5841
0x00000000004879d5 : ret 0x5876
0x000000000040e673 : ret 0x589
0x00000000004a6ca0 : ret 0x591c
0x00000000004a7a07 : ret 0x5ae4
0x000000000042432e : ret 0x5ae9
0x00000000004557d9 : ret 0x5be9
0x000000000040f37a : ret 0x5d5b
0x00000000004a9732 : ret 0x62c1
0x000000000047c4e0 : ret 0x6349
0x00000000004851f4 : ret 0x637f
0x0000000000458853 : ret 0x6411
0x0000000000423bf5 : ret 0x65e8
0x000000000045b431 : ret 0x6601
0x000000000042b311 : ret 0x6620
0x00000000004237d8 : ret 0x66c3
0x000000000047faee : ret 0x674
0x000000000042b7c6 : ret 0x6776
0x00000000004a6cbf : ret 0x67b2
0x0000000000416fb5 : ret 0x6874
0x000000000044948a : ret 0x6ae9
0x00000000004a98c1 : ret 0x6f9
0x000000000045ea2a : ret 0x73
0x0000000000417131 : ret 0x7401
0x000000000042263a : ret 0x7402
0x000000000047c54a : ret 0x7403
0x000000000044a501 : ret 0x7404
0x0000000000471902 : ret 0x7408
0x00000000004128bd : ret 0x7420
0x0000000000464344 : ret 0x7450
0x0000000000480cfa : ret 0x7472
0x000000000041e14b : ret 0x74d
0x0000000000444b59 : ret 0x7501
0x0000000000444b66 : ret 0x7502
0x0000000000444b73 : ret 0x7504
0x000000000041e95d : ret 0x7508
0x0000000000444b2b : ret 0x7510
0x0000000000410452 : ret 0x7520
0x000000000042465e : ret 0x7540
0x0000000000475840 : ret 0x7577
0x000000000042c642 : ret 0x7677
0x0000000000482972 : ret 0x777
0x0000000000484236 : ret 0x77f
0x0000000000402da1 : ret 0x7ce9
0x000000000042b2b1 : ret 0x7e20
0x000000000042b72c : ret 0x7e40
0x000000000042499c : ret 0x7f10
0x000000000046d958 : ret 0x7f3c
0x0000000000432f1e : ret 0x80
0x0000000000425b79 : ret 0x8000
0x000000000048df12 : ret 0x8001
0x0000000000476c8e : ret 0x8116
0x000000000045fc8b : ret 0x8148
0x000000000048e468 : ret 0x8166
0x000000000041d030 : ret 0x820f
0x0000000000454e13 : ret 0x8301
0x000000000047d267 : ret 0x8303
0x000000000042c210 : ret 0x830f
0x000000000045da84 : ret 0x8341
0x0000000000423715 : ret 0x8348
0x0000000000446a70 : ret 0x8349
0x000000000047f0df : ret 0x8364
0x0000000000471246 : ret 0x840
0x0000000000475c39 : ret 0x8401
0x0000000000411fb5 : ret 0x840f
0x0000000000453b60 : ret 0x841
0x000000000048b1be : ret 0x8440
0x0000000000479c87 : ret 0x848b
0x000000000046eda9 : ret 0x8502
0x0000000000413142 : ret 0x850f
0x00000000004581b3 : ret 0x8511
0x000000000044a832 : ret 0x8545
0x0000000000402b22 : ret 0x8548
0x0000000000476dac : ret 0x8549
0x000000000042368a : ret 0x854d
0x0000000000405bf1 : ret 0x8575
0x00000000004013b2 : ret 0x860f
0x000000000041acef : ret 0x870f
0x00000000004a65de : ret 0x871e
0x000000000046d95f : ret 0x875
0x000000000042b3b5 : ret 0x876
0x0000000000402c4c : ret 0x8801
0x0000000000451e5d : ret 0x8804
0x000000000045b482 : ret 0x8841
0x000000000047e1ce : ret 0x8844
0x000000000045a9aa : ret 0x88e8
0x000000000040243a : ret 0x8901
0x000000000044ce1e : ret 0x8902
0x000000000041243a : ret 0x8908
0x000000000045da76 : ret 0x8941
0x000000000041f5bf : ret 0x8944
0x0000000000403e0f : ret 0x8948
0x000000000041366a : ret 0x8949
0x0000000000410c61 : ret 0x894c
0x00000000004833eb : ret 0x894e
0x000000000041bf0f : ret 0x896
0x000000000041759a : ret 0x8a
0x0000000000487c00 : ret 0x8b
0x0000000000450729 : ret 0x8b01
0x000000000046f3fa : ret 0x8b04
0x00000000004759d3 : ret 0x8b05
0x000000000046f2ab : ret 0x8b08
0x00000000004a8e0e : ret 0x8b36
0x000000000041d511 : ret 0x8b41
0x000000000046d98b : ret 0x8b44
0x0000000000413a93 : ret 0x8b48
0x0000000000411416 : ret 0x8b49
0x000000000048336e : ret 0x8b4a
0x000000000040d42d : ret 0x8b4c
0x0000000000464bad : ret 0x8c0f
0x000000000045d4d1 : ret 0x8d04
0x000000000048c3bf : ret 0x8d0f
0x000000000041cc0c : ret 0x8d44
0x0000000000419801 : ret 0x8d48
0x000000000046808c : ret 0x8d49
0x0000000000482717 : ret 0x8d4a
0x000000000041dd24 : ret 0x8d4c
0x000000000045da92 : ret 0x8d89
0x000000000045292b : ret 0x8e0f
0x000000000045dd3a : ret 0x8f0f
0x00000000004400f5 : ret 0x90c3
0x0000000000423da9 : ret 0x90e9
0x0000000000477d4e : ret 0x9174
0x000000000048affb : ret 0x9272
0x000000000041b00d : ret 0x948
0x00000000004733a8 : ret 0x94c
0x0000000000484c22 : ret 0x950f
0x0000000000448e10 : ret 0x9572
0x00000000004a7c33 : ret 0x9576
0x000000000046068f : ret 0x958b
0x00000000004225ce : ret 0x976
0x000000000047d013 : ret 0x9be9
0x0000000000480d05 : ret 0x9de8
0x00000000004870e5 : ret 0x9eb
0x000000000049e9e0 : ret 0xa
0x00000000004ae906 : ret 0xa01
0x000000000044a528 : ret 0xa076
0x0000000000449354 : ret 0xa0e9
0x0000000000463417 : ret 0xa3e8
0x000000000048c47e : ret 0xa4e9
0x00000000004a7923 : ret 0xa514
0x000000000048c57d : ret 0xa5e9
0x000000000047cc8a : ret 0xa8e8
0x000000000044b4cd : ret 0xabe
0x000000000040fce6 : ret 0xac20
0x00000000004a7da7 : ret 0xac65
0x00000000004a8764 : ret 0xacfc
0x000000000045f4cf : ret 0xae9
0x00000000004234ca : ret 0xaeeb
0x00000000004abf3f : ret 0xb00e
0x000000000041187d : ret 0xb074
0x000000000041b06b : ret 0xb277
0x000000000046517e : ret 0xb2c8
0x00000000004563bb : ret 0xb2eb
0x0000000000449340 : ret 0xb4e9
0x000000000045dab6 : ret 0xb589
0x0000000000489ef5 : ret 0xb5e8
0x0000000000402c05 : ret 0xb60f
0x0000000000400ec4 : ret 0xb70f
0x0000000000469cf5 : ret 0xb8
0x000000000046ba9c : ret 0xb848
0x000000000047af3a : ret 0xb850
0x000000000048e2d2 : ret 0xb8e8
0x00000000004a7c6e : ret 0xb9b9
0x000000000046d2d5 : ret 0xb9e9
0x000000000046ee84 : ret 0xba41
0x0000000000422d03 : ret 0xbae9
0x00000000004564f2 : ret 0xbaeb
0x000000000048ca36 : ret 0xbc80
0x000000000045daa2 : ret 0xbd89
0x0000000000464aed : ret 0xbde8
0x0000000000480e42 : ret 0xbe0f
0x00000000004a79c4 : ret 0xbe57
0x0000000000425a39 : ret 0xc000
0x0000000000403136 : ret 0xc031
0x000000000045889e : ret 0xc083
0x000000000042b170 : ret 0xc085
0x0000000000474409 : ret 0xc148
0x000000000041b189 : ret 0xc183
0x00000000004048d8 : ret 0xc189
0x000000000044a1c2 : ret 0xc221
0x000000000041f5fb : ret 0xc275
0x00000000004767e6 : ret 0xc283
0x000000000042d624 : ret 0xc2b2
0x00000000004480ae : ret 0xc35b
0x0000000000457c8d : ret 0xc389
0x000000000041f5fd : ret 0xc3f3
0x00000000004a6162 : ret 0xc4c3
0x00000000004a7578 : ret 0xc4ff
0x000000000042b791 : ret 0xc540
0x0000000000457d56 : ret 0xc589
0x000000000046334c : ret 0xc689
0x000000000047f0bd : ret 0xc74
0x0000000000441030 : ret 0xc748
0x0000000000468f48 : ret 0xc789
0x0000000000480ed2 : ret 0xc829
0x0000000000461d22 : ret 0xc839
0x00000000004169fc : ret 0xc883
0x0000000000460767 : ret 0xc985
0x000000000046f393 : ret 0xc9eb
0x0000000000440c41 : ret 0xc9ff
0x00000000004008d1 : ret 0xca21
0x000000000047828f : ret 0xcbe9
0x00000000004a700a : ret 0xcca7
0x00000000004a90ed : ret 0xcd11
0x00000000004050e2 : ret 0xce80
0x000000000049ede0 : ret 0xd
0x0000000000420e7e : ret 0xd020
0x000000000040deb6 : ret 0xd021
0x00000000004641cb : ret 0xd120
0x00000000004011e4 : ret 0xd284
0x000000000045784a : ret 0xd285
0x000000000048e9b8 : ret 0xd2e8
0x0000000000479d16 : ret 0xd348
0x000000000044f807 : ret 0xd5e9
0x000000000048128f : ret 0xd75
0x000000000045ce76 : ret 0xd774
0x00000000004a8b85 : ret 0xd8f
0x000000000040058f : ret 0xda80
0x000000000040ffd3 : ret 0xdaf7
0x000000000045403a : ret 0xdb76
0x00000000004a8c66 : ret 0xdcd9
0x00000000004a7be2 : ret 0xde5d
0x00000000004a6971 : ret 0xde9e
0x00000000004258f9 : ret 0xe000
0x0000000000444ae9 : ret 0xe074
0x000000000044d570 : ret 0xe083
0x00000000004b512c : ret 0xe0a
0x000000000048c641 : ret 0xe1e9
0x000000000044d3a2 : ret 0xe1eb
0x000000000040dac0 : ret 0xe281
0x0000000000400c05 : ret 0xe283
0x00000000004730b8 : ret 0xe575
0x00000000004657d0 : ret 0xe57f
0x000000000046614a : ret 0xe583
0x00000000004480a2 : ret 0xe680
0x000000000046682f : ret 0xe683
0x00000000004a8d86 : ret 0xe71f
0x00000000004790da : ret 0xe75
0x0000000000422db6 : ret 0xe775
0x0000000000465e03 : ret 0xe7e9
0x000000000042bdf5 : ret 0xe883
0x0000000000478c56 : ret 0xe8c0
0x0000000000402eda : ret 0xe901
0x0000000000402f1f : ret 0xe902
0x0000000000440cd6 : ret 0xe908
0x000000000043d276 : ret 0xe910
0x000000000045e2fd : ret 0xe920
0x00000000004a70e7 : ret 0xe970
0x000000000044803a : ret 0xea81
0x000000000040db8d : ret 0xeab8
0x0000000000400bed : ret 0xeac1
0x000000000047d916 : ret 0xeb01
0x000000000046f2c3 : ret 0xeb04
0x000000000042a2ea : ret 0xeb10
0x0000000000481482 : ret 0xeb30
0x000000000041139a : ret 0xec
0x00000000004a9898 : ret 0xec2
0x000000000045ce00 : ret 0xed75
0x00000000004a953a : ret 0xef32
0x000000000048c208 : ret 0xef89
0x0000000000475e1f : ret 0xefeb
0x00000000004290de : ret 0xf
0x00000000004257b9 : ret 0xf000
0x00000000004055c5 : ret 0xf01
0x000000000041a9b9 : ret 0xf02
0x000000000041cd99 : ret 0xf04
0x0000000000411b03 : ret 0xf08
0x000000000041ac89 : ret 0xf0f
0x000000000040e3be : ret 0xf10
0x000000000046664b : ret 0xf20
0x000000000041cf03 : ret 0xf275
0x0000000000480d40 : ret 0xf2e8
0x0000000000463706 : ret 0xf3f
0x0000000000466bd3 : ret 0xf40
0x000000000046fd3d : ret 0xf41
0x000000000048c6bc : ret 0xf45
0x00000000004239a9 : ret 0xf475
0x00000000004516e6 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000466bb9 : ret 0xf50
0x0000000000489686 : ret 0xf608
0x0000000000475495 : ret 0xf631
0x0000000000425d76 : ret 0xf66
0x000000000047ad67 : ret 0xf675
0x000000000046fdfc : ret 0xf741
0x0000000000405812 : ret 0xf748
0x000000000048295c : ret 0xf749
0x0000000000425679 : ret 0xf800
0x00000000004a6850 : ret 0xf869
0x0000000000418733 : ret 0xf8b
0x0000000000463701 : ret 0xf8c1
0x0000000000440556 : ret 0xf8c5
0x00000000004483e4 : ret 0xf8e9
0x0000000000475b0a : ret 0xf992
0x0000000000464fe2 : ret 0xf9b4
0x00000000004944e0 : ret 0xfa12
0x00000000004949d0 : ret 0xfa33
0x00000000004949d8 : ret 0xfa39
0x000000000041f2e2 : ret 0xfae9
0x000000000049564c : ret 0xfb3d
0x0000000000496408 : ret 0xfb71
0x000000000041f8ca : ret 0xfbe9
0x0000000000425539 : ret 0xfc00
0x0000000000424451 : ret 0xfc3
0x00000000004771ba : ret 0xfd32
0x00000000004713ea : ret 0xfd72
0x00000000004253f9 : ret 0xfe00
0x0000000000400d35 : ret 0xfe83
0x0000000000422bca : ret 0xfecd
0x00000000004252b9 : ret 0xff00
0x0000000000434a91 : ret 0xff2
0x000000000044d51b : ret 0xff25
0x000000000042bfb9 : ret 0xff2d
0x0000000000425d1a : ret 0xff3
0x000000000046adf7 : ret 0xff31
0x0000000000425179 : ret 0xff80
0x00000000004663d1 : ret 0xff83
0x0000000000453fcc : ret 0xff85
0x000000000045d462 : ret 0xffa0
0x000000000042365a : ret 0xffa5
0x000000000040b06a : ret 0xffaf
0x000000000040ad6a : ret 0xffb2
0x000000000044f75a : ret 0xffb3
0x0000000000410f17 : ret 0xffb8
0x000000000040dbda : ret 0xffc0
0x0000000000485cda : ret 0xffc7
0x0000000000423368 : ret 0xffdf
0x000000000045ab50 : ret 0xffe0
0x000000000046223e : ret 0xffe6
0x0000000000468069 : ret 0xffe8
0x00000000004493f5 : ret 0xffe9
0x000000000040f0a1 : ret 0xffef
0x0000000000422d82 : ret 0xfff
0x000000000040da02 : ret 0xfff0
0x000000000046a7e0 : ret 0xfff1
0x0000000000485856 : ret 0xfff7
0x0000000000424c79 : ret 0xfff8
0x000000000041c838 : ret 0xfffa
0x00000000004047f9 : ret 0xfffb
0x0000000000424b39 : ret 0xfffc
0x00000000004181b5 : ret 0xfffd
0x00000000004249f9 : ret 0xfffe
0x00000000004156ac : ret 0xffff
0x000000000042ba05 : ret 1
0x000000000042ba2b : ret 2
0x000000000040fa74 : ret 3
0x0000000000409ec8 : ret 4
0x0000000000438b24 : ret 5
0x000000000049e588 : ret 6
0x000000000042a87a : ret 7
0x0000000000409f28 : ret 8
0x000000000044559a : ret 9
0x000000000047e8ef : retf
0x00000000004010d7 : retf 0
0x0000000000458122 : retf 0x10e8
0x000000000049f340 : retf 0x11
0x000000000048812d : retf 0x114d
0x00000000004771b0 : retf 0x12b9
0x0000000000455dff : retf 0x12e9
0x0000000000462179 : retf 0x147f
0x00000000004729f3 : retf 0x148
0x0000000000432dfc : retf 0x14c
0x000000000040a192 : retf 0x15e
0x0000000000427242 : retf 0x16
0x0000000000407592 : retf 0x18a
0x000000000048430d : retf 0x194d
0x0000000000406a92 : retf 0x195
0x0000000000406892 : retf 0x197
0x000000000044bc72 : retf 0x19b8
0x0000000000407074 : retf 0x1b
0x00000000004039d2 : retf 0x1bd
0x000000000040ebd1 : retf 0x1be
0x000000000041e2b8 : retf 0x1be9
0x00000000004a0ee8 : retf 0x1d4
0x00000000004a1688 : retf 0x1d5
0x000000000042b6e0 : retf 0x1f0f
0x00000000004b037a : retf 0x2000
0x000000000046d5d1 : retf 0x20be
0x0000000000414431 : retf 0x2148
0x000000000048f89d : retf 0x22
0x000000000041b013 : retf 0x2274
0x0000000000491446 : retf 0x2283
0x0000000000401425 : retf 0x230
0x00000000004855aa : retf 0x2372
0x000000000046fd8b : retf 0x24
0x000000000045fd7e : retf 0x25
0x0000000000465ef6 : retf 0x2560
0x000000000045c4e2 : retf 0x25fa
0x000000000044c004 : retf 0x26
0x000000000044f662 : retf 0x26d2
0x000000000044bbf2 : retf 0x270c
0x000000000042dd69 : retf 0x280f
0x000000000041c0a1 : retf 0x29
0x00000000004715ba : retf 0x2941
0x0000000000409a6f : retf 0x2948
0x0000000000410cbe : retf 0x294c
0x000000000040fd84 : retf 0x2a
0x0000000000419dc6 : retf 0x2a1f
0x0000000000418142 : retf 0x2a3b
0x0000000000417642 : retf 0x2a46
0x000000000041da28 : retf 0x2a74
0x000000000040f32b : retf 0x2a7e
0x00000000004a7a5c : retf 0x2a91
0x000000000040dce5 : retf 0x2adb
0x0000000000403b92 : retf 0x2b7c
0x0000000000457adf : retf 0x2c73
0x0000000000457ab9 : retf 0x2c76
0x00000000004a6eda : retf 0x2c90
0x0000000000477e0f : retf 0x2de9
0x000000000044c401 : retf 0x2e75
0x00000000004824cb : retf 0x2fe8
0x00000000004013e8 : retf 0x31
0x0000000000434686 : retf 0x3148
0x00000000004a8cc5 : retf 0x3159
0x00000000004a8d2d : retf 0x32dd
0x00000000004a03e8 : retf 0x33
0x00000000004a75e3 : retf 0x33e6
0x00000000004a7b11 : retf 0x3617
0x000000000046c652 : retf 0x372
0x0000000000434662 : retf 0x377
0x000000000041e5c0 : retf 0x3948
0x0000000000471320 : retf 0x3949
0x00000000004192da : retf 0x394c
0x000000000041f64d : retf 0x3d83
0x00000000004a9126 : retf 0x3d8a
0x0000000000458800 : retf 0x3e8
0x00000000004a69bb : retf 0x3ec
0x0000000000456992 : retf 0x403
0x000000000044d575 : retf 0x4102
0x000000000044d6c1 : retf 0x4110
0x0000000000453afe : retf 0x4180
0x0000000000425dcc : retf 0x4266
0x0000000000453863 : retf 0x4280
0x000000000048a0bd : retf 0x42f6
0x0000000000400db2 : retf 0x440
0x000000000043ceea : retf 0x4466
0x00000000004508e6 : retf 0x45c
0x00000000004655a6 : retf 0x45e9
0x0000000000454264 : retf 0x4689
0x0000000000419395 : retf 0x4801
0x0000000000417021 : retf 0x4802
0x000000000040d80c : retf 0x4805
0x000000000040d877 : retf 0x4806
0x0000000000471907 : retf 0x4808
0x000000000040d728 : retf 0x4809
0x000000000040d968 : retf 0x480a
0x000000000040d92c : retf 0x480d
0x0000000000410bd3 : retf 0x4810
0x0000000000410cd1 : retf 0x4820
0x00000000004829d6 : retf 0x48f8
0x000000000041cda3 : retf 0x4901
0x0000000000459953 : retf 0x4a8d
0x000000000041d9fa : retf 0x4b74
0x0000000000416fd3 : retf 0x4c01
0x0000000000422f42 : retf 0x4c89
0x0000000000489619 : retf 0x4d20
0x00000000004842d8 : retf 0x4de8
0x00000000004828db : retf 0x4df0
0x00000000004842fc : retf 0x4df8
0x000000000041e282 : retf 0x51e9
0x0000000000466696 : retf 0x53c
0x0000000000485202 : retf 0x557f
0x000000000048ad76 : retf 0x5774
0x000000000048503d : retf 0x5d5b
0x0000000000479da5 : retf 0x5f6
0x000000000040e89c : retf 0x6411
0x000000000042de53 : retf 0x6601
0x000000000042dfa3 : retf 0x6602
0x000000000042e0f3 : retf 0x6603
0x000000000042e243 : retf 0x6604
0x000000000042e393 : retf 0x6605
0x000000000042e4e3 : retf 0x6606
0x000000000042e633 : retf 0x6607
0x000000000042e783 : retf 0x6608
0x000000000042e8d3 : retf 0x6609
0x000000000042ea23 : retf 0x660a
0x000000000042eb73 : retf 0x660b
0x000000000042ecc3 : retf 0x660c
0x000000000042ee13 : retf 0x660d
0x000000000042ef63 : retf 0x660e
0x000000000042f0b3 : retf 0x660f
0x0000000000434681 : retf 0x676
0x00000000004a9045 : retf 0x67ca
0x00000000004755c1 : retf 0x6b8
0x00000000004a7042 : retf 0x6ee8
0x00000000004692e2 : retf 0x72
0x00000000004a8f06 : retf 0x7272
0x00000000004a86df : retf 0x76a5
0x00000000004111d3 : retf 0x775
0x00000000004a7562 : retf 0x79f5
0x0000000000449cdb : retf 0x8041
0x000000000042b613 : retf 0x8148
0x000000000041ded2 : retf 0x820f
0x0000000000410880 : retf 0x830f
0x0000000000413be1 : retf 0x8310
0x0000000000412bcd : retf 0x8320
0x0000000000454667 : retf 0x8341
0x0000000000419392 : retf 0x8348
0x000000000042a28f : retf 0x8349
0x0000000000419870 : retf 0x840f
0x00000000004a7e50 : retf 0x8481
0x00000000004145e6 : retf 0x850f
0x00000000004008d3 : retf 0x8545
0x000000000044111b : retf 0x8548
0x000000000042b139 : retf 0x860f
0x0000000000432e4c : retf 0x870f
0x0000000000482b74 : retf 0x877
0x00000000004896c0 : retf 0x8820
0x000000000045384d : retf 0x8880
0x0000000000422f48 : retf 0x8902
0x00000000004013a4 : retf 0x8904
0x0000000000411c10 : retf 0x8920
0x000000000044a51a : retf 0x8940
0x0000000000403f16 : retf 0x8941
0x00000000004603a0 : retf 0x8944
0x0000000000402e53 : retf 0x8948
0x000000000042d889 : retf 0x8949
0x0000000000410b7c : retf 0x894c
0x000000000045595a : retf 0x8966
0x00000000004538ae : retf 0x8980
0x00000000004856f2 : retf 0x8b41
0x000000000040484b : retf 0x8b48
0x00000000004056cc : retf 0x8b49
0x000000000042fc89 : retf 0x8b4c
0x00000000004198ae : retf 0x8d48
0x000000000042b049 : retf 0x8d4a
0x000000000044406d : retf 0x8d4c
0x000000000041e2cb : retf 0x8e9
0x000000000042a1cd : retf 0x9066
0x0000000000404b72 : retf 0x90f
0x000000000045a3c0 : retf 0x9273
0x00000000004a87ae : retf 0x93a2
0x000000000041dd86 : retf 0x948
0x0000000000478bd2 : retf 0x98
0x000000000046ce0c : retf 0x98e9
0x00000000004a8b4b : retf 0x99e0
0x000000000044a510 : retf 0x9b9
0x00000000004a8eba : retf 0x9d7d
0x00000000004a97c5 : retf 0xa020
0x00000000004a6d25 : retf 0xa1eb
0x00000000004a8dab : retf 0xa2fe
0x000000000041d099 : retf 0xa74
0x00000000004a8e7c : retf 0xab0d
0x000000000040e6cd : retf 0xade9
0x00000000004a93ce : retf 0xae32
0x00000000004264f2 : retf 0xb
0x0000000000458282 : retf 0xb0e8
0x000000000041e021 : retf 0xb2e9
0x00000000004a7bc9 : retf 0xb51a
0x000000000042bc72 : retf 0xb60f
0x000000000048ac52 : retf 0xb801
0x0000000000454674 : retf 0xb941
0x0000000000487bf0 : retf 0xba
0x000000000041cdd1 : retf 0xba41
0x000000000046efb2 : retf 0xbb41
0x00000000004a8ed3 : retf 0xbb9a
0x00000000004858a6 : retf 0xbeb
0x00000000004a8f1d : retf 0xbf4b
0x00000000004567c8 : retf 0xc031
0x00000000004025d3 : retf 0xc089
0x00000000004a8b9d : retf 0xc0fe
0x000000000040e05a : retf 0xc148
0x000000000047336e : retf 0xc149
0x0000000000460ccd : retf 0xc239
0x0000000000458c1d : retf 0xc6
0x0000000000465521 : retf 0xc7
0x0000000000423ce4 : retf 0xc748
0x0000000000473623 : retf 0xc985
0x000000000042d1c4 : retf 0xcab2
0x00000000004a616a : retf 0xcccb
0x000000000040a9a7 : retf 0xd
0x00000000004a7986 : retf 0xd1cb
0x00000000004481af : retf 0xd231
0x0000000000414c95 : retf 0xd284
0x0000000000451134 : retf 0xd285
0x0000000000403f21 : retf 0xd289
0x00000000004a9097 : retf 0xd39
0x0000000000447fa6 : retf 0xd975
0x00000000004a9623 : retf 0xde4f
0x00000000004121b1 : retf 0xdeb
0x00000000004a7c53 : retf 0xdf7f
0x0000000000406ff6 : retf 0xe
0x00000000004a76fe : retf 0xe152
0x0000000000447de3 : retf 0xe175
0x00000000004858cb : retf 0xe275
0x0000000000454380 : retf 0xe283
0x0000000000478859 : retf 0xe474
0x0000000000447c7c : retf 0xe475
0x00000000004a7cdc : retf 0xe496
0x000000000045e047 : retf 0xe677
0x00000000004a7646 : retf 0xe72e
0x00000000004a6cd3 : retf 0xe80
0x00000000004776e6 : retf 0xe802
0x0000000000465795 : retf 0xe87f
0x000000000040d8a9 : retf 0xe903
0x0000000000483fcc : retf 0xe972
0x00000000004611cd : retf 0xe9ff
0x000000000048391b : retf 0xea72
0x0000000000412073 : retf 0xea77
0x00000000004a8c8c : retf 0xea91
0x0000000000487fab : retf 0xeac0
0x000000000041b322 : retf 0xeac1
0x0000000000424911 : retf 0xead3
0x000000000040d862 : retf 0xeb04
0x000000000040d8c1 : retf 0xeb07
0x000000000040d788 : retf 0xeb08
0x000000000040d98f : retf 0xeb0b
0x000000000040d962 : retf 0xeb0c
0x00000000004a6dad : retf 0xeb83
0x00000000004a95a1 : retf 0xebbf
0x0000000000416f1b : retf 0xee75
0x000000000047e1d7 : retf 0xee7c
0x000000000043308c : retf 0xf01
0x000000000043320c : retf 0xf02
0x000000000043338c : retf 0xf03
0x000000000043350c : retf 0xf04
0x000000000043368c : retf 0xf05
0x000000000043380c : retf 0xf06
0x000000000043398c : retf 0xf07
0x0000000000433b0c : retf 0xf08
0x0000000000433c8c : retf 0xf09
0x0000000000433e0c : retf 0xf0a
0x0000000000433f8c : retf 0xf0b
0x000000000043410c : retf 0xf0c
0x000000000043428c : retf 0xf0d
0x000000000043440c : retf 0xf0e
0x000000000043458c : retf 0xf0f
0x000000000043eabd : retf 0xf1c5
0x000000000045dacb : retf 0xf41
0x0000000000440a80 : retf 0xf48
0x0000000000473851 : retf 0xf4c
0x00000000004729f6 : retf 0xf631
0x00000000004a8be8 : retf 0xf64
0x00000000004247f3 : retf 0xf66
0x000000000042c22a : retf 0xf748
0x0000000000487402 : retf 0xf7a6
0x000000000041d5fd : retf 0xf989
0x0000000000487192 : retf 0xf98e
0x000000000043eb8f : retf 0xf9c5
0x00000000004947d4 : retf 0xfa0a
0x000000000049460c : retf 0xfa0d
0x0000000000494d04 : retf 0xfa2a
0x0000000000494b04 : retf 0xfa34
0x0000000000403f41 : retf 0xfa83
0x000000000046369a : retf 0xfac1
0x0000000000490a92 : retf 0xfc9a
0x000000000044e892 : retf 0xfd17
0x0000000000473cf2 : retf 0xfd96
0x00000000004734f6 : retf 0xfdc5
0x0000000000418f62 : retf 0xfe74
0x000000000042c057 : retf 0xfec5
0x0000000000434eb1 : retf 0xff2
0x000000000042c65b : retf 0xff3
0x000000000040db34 : retf 0xff31
0x000000000044fd52 : retf 0xffad
0x0000000000403594 : retf 0xffbf
0x0000000000478db2 : retf 0xffdc
0x000000000040b889 : retf 0xffe7
0x0000000000487322 : retf 0xfff3
0x000000000046484a : retf 0xfff5
0x0000000000453947 : retf 0xfff6
0x0000000000485057 : retf 0xfff7
0x000000000045e662 : retf 0xfff8
0x00000000004943a9 : retf 0xfff9
0x00000000004545be : retf 0xfffa
0x00000000004658ff : retf 0xfffb
0x000000000040e1b1 : retf 0xfffc
0x0000000000403462 : retf 0xfffd
0x000000000041105e : retf 0xfffe
0x00000000004039c7 : retf 0xffff
0x0000000000402d9c : retf 1
0x0000000000426df2 : retf 2
0x0000000000453092 : retf 3
0x000000000048c115 : retf 4
0x00000000004a2a94 : retf 5
0x0000000000409dba : retf 6
0x00000000004a2e94 : retf 7
0x00000000004a3094 : retf 8
0x000000000042c37b : retf 9
0x00000000004466b5 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000004481a3 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e08c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042b30e : rol bl, 0x83 ; ret 0x6620
0x000000000047460b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000418317 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042badd : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000044705d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000425cf2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042b7fb : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000004737e2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a2880 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000479c81 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042c54d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044ce2b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d0be : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040faf9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042b552 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004afccc : rol byte ptr [rbp], 1 ; add byte ptr [rax], al ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004858c5 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x00000000004826bb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000418788 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004530e1 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x000000000048718d : rol byte ptr [rbx], 0 ; add al, ch ; retf 0xf98e
0x0000000000474872 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000448031 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046661f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000044705e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004008ce : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000046d2d2 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000474852 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004646a2 : rol byte ptr [rcx], 0x39 ; retf
0x000000000044e7d6 : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000045939b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004483c7 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x000000000041044d : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x00000000004483e0 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000042384b : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044e011 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004748b2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000474862 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000048bcf6 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004748a2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000043ec75 : rol ch, 1 ; jns 0x43ec54 ; retf 0xead3
0x000000000043edc5 : rol ch, 1 ; jns 0x43eda4 ; retf 0xead3
0x000000000043ef15 : rol ch, 1 ; jns 0x43eef4 ; retf 0xead3
0x000000000043f065 : rol ch, 1 ; jns 0x43f044 ; retf 0xead3
0x000000000043f1b5 : rol ch, 1 ; jns 0x43f194 ; retf 0xead3
0x000000000043f305 : rol ch, 1 ; jns 0x43f2e4 ; retf 0xead3
0x000000000043f455 : rol ch, 1 ; jns 0x43f434 ; retf 0xead3
0x000000000043f5a5 : rol ch, 1 ; jns 0x43f584 ; retf 0xead3
0x000000000043f6f5 : rol ch, 1 ; jns 0x43f6d4 ; retf 0xead3
0x000000000043f845 : rol ch, 1 ; jns 0x43f824 ; retf 0xead3
0x000000000043f995 : rol ch, 1 ; jns 0x43f974 ; retf 0xead3
0x000000000043fae5 : rol ch, 1 ; jns 0x43fac4 ; retf 0xead3
0x000000000043fc35 : rol ch, 1 ; jns 0x43fc14 ; retf 0xead3
0x000000000043fd85 : rol ch, 1 ; jns 0x43fd64 ; retf 0xead3
0x000000000043fed5 : rol ch, 1 ; jns 0x43feb4 ; retf 0xead3
0x000000000042b87f : rol ch, 1 ; std ; xlatb ; ret
0x0000000000473556 : rol ch, cl ; std ; xlatb ; ret
0x0000000000440bef : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a6160 : rol cl, 0xc2 ; ret
0x00000000004747fc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000447ddc : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x0000000000447c78 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000437150 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042b334 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042b873 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x00000000004406c3 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000477f39 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000400939 : rol dword ptr [rcx], 0x8d ; call r11
0x000000000045688f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004b0376 : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x000000000045494a : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004734ee : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042bfb5 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000422d4c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000422d4b : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004943b0 : ror ah, 1 ; stc ; jmp qword ptr [rax]
0x0000000000472205 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048a928 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042b382 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42b3c9 ; add rax, rdi ; ret
0x0000000000440a87 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047451c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000004110ce : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000004758ec : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x47591f ; ret
0x000000000044bd08 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041dbd3 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000047c80a : ror byte ptr [rax + 0x39], cl ; ret
0x000000000046ff93 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044d4cd : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e736 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045f4cb : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045aa79 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045aa6a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042b42c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042b352 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042b843 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405963 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000440a84 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049ec88 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042bad5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004b3fbc : ror byte ptr [rax - 0x32000000], 0xfc ; jmp qword ptr [rsi]
0x000000000048318c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x00000000004663ca : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000042b342 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042b372 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042b362 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000422d7e : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000047990a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000494ed0 : ror byte ptr [rax - 0x758f0006], 1 ; cli ; call qword ptr [rax]
0x00000000004497ea : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000411310 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048a93d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045a284 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000413a90 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000481e8a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040dabd : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041f3cd : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000414771 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x414787 ; ret
0x0000000000484c1c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044f62c : ror byte ptr [rax - 0x7d], 0x3d ; retf
0x00000000004164f5 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475803 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000415711 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041dd1d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb253c
0x000000000041ee5d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb367c
0x000000000041fc17 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb4436
0x000000000042171a : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb5f39
0x0000000000421c1f : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb643e
0x000000000042215b : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb697a
0x000000000040eb40 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044a934 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x00000000004121aa : ror byte ptr [rax - 0x7d], cl ; loop 0x4121b2 ; add rdx, rcx ; jmp 0x4121c8
0x0000000000454f85 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000489515 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046eab2 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000046efd2 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x0000000000473eec : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000494e5c : ror byte ptr [rbp - 6], 0xff ; ror byte ptr [rdi - 6], 1 ; jmp rax
0x00000000004845f4 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048c007 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000472206 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045bf86 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x00000000004680b8 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000044f7ff : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004696ce : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x000000000046fdf4 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x46fdc7
0x0000000000494e60 : ror byte ptr [rdi - 6], 1 ; jmp rax
0x000000000045ad22 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044bbfc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000477ee1 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045eacc : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041010d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475a39 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f891 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402726 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000466bcb : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000450787 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x0000000000423b6e : ror byte ptr [rdi], 0x84 ; retf
0x000000000044c482 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b886 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000045347c : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x0000000000440fba : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042271f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044c85f : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047d9f2 : ror byte ptr [rdi], 0x85 ; ret 2
0x000000000046689e : ror byte ptr [rdi], 0x85 ; retf
0x000000000040345f : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042b6bd : ror byte ptr [rdi], 0x85 ; retf 1
0x00000000004633cc : ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000422f1f : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000467769 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000047f4c9 : ror byte ptr [rdi], 0x94 ; ret
0x0000000000480fba : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046d955 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000484c1f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000446b2e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004105eb : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000040ffd0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046cd8a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000422d7b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000446fa5 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040dad2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dabc ; ret
0x00000000004636fe : ror byte ptr [rdi], cl ; ret 0xf8c1
0x000000000049464c : ror byte ptr [rip + 0x360fffa], 0xfa ; jmp qword ptr [rax]
0x0000000000434667 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048521e : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x0000000000446b38 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x0000000000440954 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000440a79 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047384a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048ab04 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046f586 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000004234c7 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000479d13 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000465e00 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000458518 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x000000000044d100 : ror dword ptr [rax - 0x77], 5 ; mul dword ptr [rsi] ; add cl, ch ; retf
0x0000000000485831 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041640d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x416407 ; ret
0x000000000047099d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x470997 ; ret
0x00000000004658f9 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000045dbd4 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000483e5d : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x00000000004657bb : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000444ae7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000047bffe : ror dword ptr [rdi], 0x84 ; retf 6
0x000000000042cdb8 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d4c4 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d296 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042d216 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042d554 : ror dword ptr [rdi], 0x85 ; je 0x42d564 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d04b : ror dword ptr [rdi], 0x85 ; jno 0x42d060 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d113 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cd90 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041640c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x416408 ; ret
0x000000000047099c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x470998 ; ret
0x000000000040179e : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4017be ; syscall
0x000000000049478c : sahf ; add edi, edx ; ljmp [rsi] ; add edi, edx ; call rsp
0x0000000000494f15 : sahf ; cli ; call rax
0x000000000043f67e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a7045 : sahf ; ret 0x38ae
0x0000000000483751 : sahf ; ret 0x3948
0x000000000045bf8c : sahf ; ret 0x894c
0x000000000048c6f4 : sahf ; ret 0xf45
0x0000000000467521 : sahf ; ret 3
0x00000000004a7b7c : sahf ; retf
0x0000000000493d58 : sal ah, 1 ; clc ; call qword ptr [rax + 0x20fff8f5]
0x000000000041878e : sal bh, 0xd8 ; ret
0x0000000000494fe8 : sal bh, 0xfa ; call rax
0x0000000000494fec : sal bh, 1 ; cli ; jmp rax
0x0000000000425b77 : sal bh, 1 ; ret 0x8000
0x0000000000425a37 : sal bh, 1 ; ret 0xc000
0x00000000004258f7 : sal bh, 1 ; ret 0xe000
0x00000000004257b7 : sal bh, 1 ; ret 0xf000
0x0000000000425677 : sal bh, 1 ; ret 0xf800
0x0000000000425537 : sal bh, 1 ; ret 0xfc00
0x00000000004253f7 : sal bh, 1 ; ret 0xfe00
0x00000000004252b7 : sal bh, 1 ; ret 0xff00
0x0000000000425177 : sal bh, 1 ; ret 0xff80
0x0000000000425037 : sal bh, 1 ; ret 0xffc0
0x0000000000424ef7 : sal bh, 1 ; ret 0xffe0
0x0000000000424db7 : sal bh, 1 ; ret 0xfff0
0x0000000000424c77 : sal bh, 1 ; ret 0xfff8
0x0000000000424b37 : sal bh, 1 ; ret 0xfffc
0x00000000004249f7 : sal bh, 1 ; ret 0xfffe
0x0000000000494fb8 : sal bl, 0xfa ; jmp rax
0x00000000004745ff : sal bl, 1 ; ret
0x000000000047f36d : sal bl, cl ; ret
0x000000000040d9fd : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x0000000000489681 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x00000000004765ed : sal byte ptr [rax - 0x75], 0x35 ; ret 0x2424
0x0000000000449887 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000449b57 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000473aa2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x000000000048254e : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000475646 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000405dab : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f4a3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x0000000000400594 : sal byte ptr [rbp + 2], cl ; ret
0x000000000048f488 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000044bd21 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000414774 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044bd31 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041732d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000446820 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000416410 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000425e9b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dad7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042b87d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480e28 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042b875 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000004406cd : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x00000000004406c5 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000047435b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004b2ccc : sal byte ptr [rbp], 1 ; add al, dh ; or edi, esp ; jmp qword ptr [rax]
0x000000000041874c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044ce16 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x00000000004870dc : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x4870fa
0x00000000004409cc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044e7d2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044bd06 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000040ea3c : sal byte ptr [rdx + 0x3948006b], 1 ; ret
0x00000000004737ab : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044c63b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000494b44 : sal byte ptr [rdx + rdi*8], 0xff ; push rax ; xor al, 0xfa ; jmp rax
0x0000000000440ce3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000484fe1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047f929 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004896da : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000494f54 : sal cl, 0xfa ; call rax
0x0000000000494f58 : sal cl, 1 ; cli ; jmp rax
0x0000000000494f94 : sal dl, 0xfa ; jmp rax
0x0000000000446f03 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480e2d : sal edi, 0xd8 ; ret
0x0000000000479d9c : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004ae03d : sal esi, cl ; call qword ptr [rax]
0x000000000047e3a2 : sar ah, 0xff ; mov rbp, rax ; jmp 0x47e37b
0x0000000000495010 : sar al, 0xfa ; call rax
0x0000000000495014 : sar al, 1 ; cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000402ff0 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000449493 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047fcb3 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000484550 : sar bh, 0xff ; mov eax, 1 ; ret
0x000000000040345a : sar bh, 1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x0000000000402722 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047bbf1 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x00000000004056c5 : sar byte ptr [rcx - 0x38], 0x4d ; mov edi, esp ; jmp 0x40569e
0x0000000000446ade : sar byte ptr [rcx], 0xc8 ; jle 0x446b20 ; movsxd rax, ecx ; ret
0x000000000044d39d : sar byte ptr [rcx], cl ; ret
0x0000000000462177 : sar byte ptr [rcx], cl ; retf 0x147f
0x0000000000458896 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004af4bc : sar byte ptr [rip - 0x26400000], 0xf8 ; call qword ptr [rax]
0x00000000004014aa : sar byte ptr [rsi + 1], 0xe8 ; retf
0x00000000004a79df : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004943bd : sar cl, 1 ; call qword ptr [rax]
0x0000000000495034 : sar cl, 1 ; cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x0000000000494401 : sar cl, cl ; call rax
0x0000000000438443 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43844e ; ret
0x0000000000447419 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000471bfc : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004885ee : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a7743 : sar ecx, 1 ; jnp 0x4a7704 ; ret
0x00000000004631bd : sar ecx, cl ; dec dword ptr [rax + 0x29] ; ret
0x0000000000494405 : sar ecx, cl ; jmp qword ptr [rax]
0x00000000004156a7 : sar edx, 2 ; call 0x411905
0x0000000000471d02 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042bad7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004478d3 : sar esi, 1 ; jg 0x447903 ; vzeroupper ; ret
0x0000000000447a6c : sar esi, 1 ; jg 0x447a9c ; vzeroupper ; ret
0x0000000000471bfb : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004885ed : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004156a6 : sar rdx, 2 ; call 0x411906
0x00000000004156a5 : sar rdx, 2 ; call 0x411907
0x0000000000471d01 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042bad6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004633b5 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000044a5c1 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000046682d : sbb al, 0x29 ; ret 0xe683
0x0000000000467767 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a8a42 : sbb al, 0x8c ; retf
0x0000000000494dbd : sbb al, 0xfa ; call qword ptr [rax + 0x10fffa1d]
0x0000000000494dfd : sbb al, 0xfa ; call qword ptr [rax]
0x00000000004623af : sbb al, 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000040e022 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000463e96 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406ed3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000046993b : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b068 : sbb al, ch ; ret 0xffaf
0x0000000000409437 : sbb al, ch ; retf
0x0000000000494db9 : sbb bh, dl ; call qword ptr [rax]
0x00000000004a77d2 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a64c5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000481b74 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000485af4 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000484c19 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004756d1 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047e1d1 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000419121 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045dd24 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041b6f5 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000481b75 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000469242 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048dcfa : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004854cf : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000482557 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041f37d : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047f6d5 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x0000000000474230 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047f94c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416471 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041a0cb : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004857ff : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000041147e : sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004198e3 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485af5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000004494d1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000040a51a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000004b5c14 : sbb byte ptr [rbp - 0x5ec80000], ah ; std ; jmp qword ptr [rax]
0x000000000048a775 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041f998 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044d17c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000411847 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000418307 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471a1a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004580c2 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x00000000004197fe : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000471f2e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000048ffef : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x490072 ; ret 0x8b48
0x0000000000454348 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040dbd0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041f3cb : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000484c1a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004941e0 : sbb byte ptr [rdi - 0x5f2f0007], 0xf9 ; jmp qword ptr [rax]
0x0000000000403f53 : sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000486fdb : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000494f14 : sbb byte ptr [rsi - 0x602f0006], 0xfa ; jmp qword ptr [rax]
0x000000000046c702 : sbb ch, byte ptr [rbx - 0x74b7ffdc] ; add al, 0xf8 ; jmp rax
0x0000000000493e3d : sbb cl, bh ; jmp rax
0x000000000041dbcd : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000457acd : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043ddcd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fa1a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f23a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f62a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee4a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e92d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e10d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043d8ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043efe9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e44d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dc2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d40d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e5ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043f4da : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ecfa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fe0a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d74d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d883 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e583 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e0a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f3db : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fd0b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e8c3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dbc3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d6e3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e3e3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f52b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ed4b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048e025 : sbb dh, bl ; ret
0x0000000000400590 : sbb dl, 0 ; test dl, dl ; jne 0x4005a1 ; ret
0x0000000000494df1 : sbb dl, bh ; call qword ptr [rax + 0x10fffa19]
0x0000000000480837 : sbb dl, dh ; jmp r11
0x00000000004885cb : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048df19 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000044bc74 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000461219 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a8d7d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000466110 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000004464f7 : sbb eax, -1 ; ret
0x000000000048d072 : sbb eax, 0x18c48348 ; ret
0x00000000004900b0 : sbb eax, 0x22bc3b ; jne 0x4900a0 ; pop rbx ; ret
0x00000000004a77d3 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000045e734 : sbb eax, 0x39480001 ; ret
0x0000000000403e68 : sbb eax, 0xfc80f00 ; retf 0xc089
0x000000000045dbb2 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000407c4a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000040706c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000004826ba : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042bf37 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048dbff : sbb eax, eax ; ret
0x00000000004464f5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004244b1 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004a88e8 : sbb ebp, ebx ; retf
0x0000000000448f03 : sbb ebx, edx ; add byte ptr es:[rax + 0x39], cl ; ret
0x00000000004729c9 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x0000000000450a7e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000403ead : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000493e41 : sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004a8679 : sbb edi, ebp ; retf
0x0000000000494df9 : sbb edi, edx ; call qword ptr [rax + 0x10fffa1c]
0x0000000000494db5 : sbb edx, edi ; call qword ptr [rax + 0x10fffa1a]
0x0000000000494df5 : sbb edx, edi ; call qword ptr [rax]
0x000000000042afd2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004196ae : scasb al, byte ptr [rdi] ; add dword ptr [rdx], ebp ; add bl, dh ; ret
0x000000000043fa6e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000494f45 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rax + 0x20fffaaf]
0x00000000004a8d29 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000046751a : scasb al, byte ptr [rdi] ; ret 3
0x000000000046c66e : scasb al, byte ptr [rdi] ; stosd dword ptr [rdi], eax ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000043fb6d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494f49 : scasd eax, dword ptr [rdi] ; cli ; jmp qword ptr [rax]
0x000000000041475e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e3d9 : scasd eax, dword ptr [rdi] ; ret
0x000000000045afce : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000411566 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004197f9 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004483e3 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004484bc : scasd eax, dword ptr [rdi] ; retf
0x000000000047e71d : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000004a7a54 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004a6ccf : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044bd0c : setae al ; ret
0x000000000045acfa : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041878c : setne al ; neg eax ; ret
0x000000000044d3a0 : setne dl ; jmp 0x44d388
0x000000000042b81b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042b7db : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x000000000047f019 : shl byte ptr [rbx], 1 ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000493e58 : shl byte ptr [rbx], 1 ; stc ; push rax ; and al, 0xf9 ; call qword ptr [rax]
0x000000000044673f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x00000000004247eb : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000444ae3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000440295 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042d74b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d762 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000473346 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473357 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042d641 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049feb0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a75dd : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000041d5fb : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000004a78c8 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000446722 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x00000000004247ef : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000473342 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000044659b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042d6c6 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d77d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d766 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d74f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c20b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d6e1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b16c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042d5a1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448f04 : shl dword ptr [rsi], cl ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044e031 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044e02d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482d8c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482d17 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482ce6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004870e0 : shl edx, 5 ; add rdx, rax ; jmp 0x4870f6
0x0000000000482d8b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482d16 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482ce5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004870df : shl rdx, 5 ; add rdx, rax ; jmp 0x4870f7
0x00000000004235e3 : shr al, 0xa7 ; ret
0x0000000000422bc8 : shr al, 0xc2 ; int 0xfe
0x00000000004a6e84 : shr al, cl ; add al, 0x3d ; retf
0x0000000000425e9f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000042444a : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000457878 : shr byte ptr [rcx], cl ; ret
0x000000000042badb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004950dc : shr byte ptr [rdi], 0xfb ; jmp rax
0x00000000004a8c87 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000494d2c : shr byte ptr [rip + 0x2d50fffa], 1 ; cli ; call rax
0x000000000048cb52 : shr cl, 1 ; ret 0xfffe
0x00000000004681fc : shr cl, cl ; jrcxz 0x468208 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c65f : shr cl, cl ; ret
0x00000000004593df : shr cl, cl ; retf
0x00000000004480ba : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047440b : shr eax, 2 ; ret
0x0000000000474913 : shr eax, 2 ; vzeroupper ; ret
0x0000000000448105 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041ec8e : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000482e9c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482e21 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482df0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000482e9b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482e20 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482def : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047440a : shr rax, 2 ; ret
0x0000000000474912 : shr rax, 2 ; vzeroupper ; ret
0x000000000049f089 : sldt word ptr [rax] ; ret
0x0000000000453b38 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000473c46 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042af87 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004940aa : stc ; call qword ptr [rax + 0x20fff9bf]
0x000000000049436e : stc ; call qword ptr [rax + 0x40fff9d8]
0x00000000004943f2 : stc ; call qword ptr [rax - 0x1f000632]
0x000000000049439e : stc ; call qword ptr [rax - 0x1f000639]
0x0000000000494226 : stc ; call qword ptr [rax - 0x1f00065e]
0x00000000004941d2 : stc ; call qword ptr [rax - 0x1f000665]
0x00000000004940a6 : stc ; call qword ptr [rax - 0x6f000643]
0x0000000000493e5e : stc ; call qword ptr [rax]
0x00000000004af8ba : stc ; call qword ptr [rbx]
0x00000000004b02d2 : stc ; call qword ptr [rcx]
0x00000000004af82e : stc ; call qword ptr [rdx]
0x0000000000493ff6 : stc ; call qword ptr [rsi + 0x26fff994]
0x00000000004941e2 : stc ; call rax
0x0000000000493f92 : stc ; call rcx
0x00000000004b007e : stc ; call rsi
0x00000000004af7b6 : stc ; call rsp
0x0000000000495039 : stc ; cli ; call qword ptr [rax]
0x0000000000495031 : stc ; cli ; call rax
0x0000000000495035 : stc ; cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x00000000004631be : stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000468975 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000049432a : stc ; inc dword ptr [rax + 0x10fff9e6] ; fyl2xp1 ; call rax
0x000000000049412e : stc ; inc dword ptr [rax + 0x40fff9b1] ; mov bl, 0xf9 ; jmp qword ptr [rax]
0x0000000000493f0a : stc ; inc dword ptr [rax + 0x4b] ; stc ; jmp qword ptr [rax]
0x000000000049434a : stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x0000000000494346 : stc ; inc dword ptr [rax - 0x1c] ; stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x00000000004942da : stc ; inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x0000000000494372 : stc ; inc dword ptr [rax - 0x26] ; stc ; call qword ptr [rax]
0x00000000004943fe : stc ; inc dword ptr [rax - 0x2f00062e] ; sar ecx, cl ; jmp qword ptr [rax]
0x0000000000494232 : stc ; inc dword ptr [rax - 0x2f00065a] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp qword ptr [rax]
0x00000000004943ee : stc ; inc dword ptr [rax - 0x33] ; stc ; call qword ptr [rax - 0x1f000632]
0x000000000049439a : stc ; inc dword ptr [rax - 0x3a] ; stc ; call qword ptr [rax - 0x1f000639]
0x00000000004943ce : stc ; inc dword ptr [rax - 0x3f] ; stc ; call qword ptr [rax]
0x00000000004940fe : stc ; inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x0000000000494132 : stc ; inc dword ptr [rax - 0x4d] ; stc ; jmp qword ptr [rax]
0x000000000049414e : stc ; inc dword ptr [rax - 0x4f] ; stc ; inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000494222 : stc ; inc dword ptr [rax - 0x5f] ; stc ; call qword ptr [rax - 0x1f00065e]
0x0000000000494286 : stc ; inc dword ptr [rax - 0x7f00061b] ; out 0xf9, eax ; call qword ptr [rax]
0x0000000000494326 : stc ; inc dword ptr [rax - 0x7f00061c] ; out 0xf9, al ; call qword ptr [rax]
0x0000000000494252 : stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x00000000004941b6 : stc ; inc dword ptr [rax] ; mov ah, 0xf9 ; jmp rax
0x000000000049413a : stc ; inc dword ptr [rax] ; mov bh, 0xf9 ; jmp rax
0x0000000000494152 : stc ; inc dword ptr [rax] ; mov bl, 0xf9 ; jmp rax
0x0000000000493ef2 : stc ; inc dword ptr [rax] ; pop rcx ; stc ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x0000000000493ec6 : stc ; inc dword ptr [rax] ; stc ; push qword ptr [rax] ; xor edi, ecx ; call qword ptr [rax]
0x0000000000493f16 : stc ; inc dword ptr [rax] ; stc ; push rax ; stc ; jmp rax
0x0000000000493fba : stc ; inc dword ptr [rcx - 0x6b] ; stc ; call rcx
0x0000000000494002 : stc ; inc dword ptr [rsi - 0x6a] ; stc ; jmp rsi
0x0000000000493ff2 : stc ; inc dword ptr [rsi] ; xchg eax, esp ; stc ; call qword ptr [rsi + 0x26fff994]
0x00000000004941ee : stc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x00000000004943ba : stc ; inc eax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000494242 : stc ; inc eax ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x000000000043eb22 : stc ; je 0x43eaee ; lea r10, [r10 + r9] ; jmp r10
0x0000000000493e3a : stc ; jmp qword ptr [rax - 0x1f0006e8]
0x0000000000493e2a : stc ; jmp qword ptr [rax - 0x1f0006ed]
0x0000000000493e1a : stc ; jmp qword ptr [rax - 0x1f0006f2]
0x0000000000493e12 : stc ; jmp qword ptr [rax]
0x00000000004af602 : stc ; jmp qword ptr [rbx]
0x0000000000493f9e : stc ; jmp qword ptr [rcx + 0x21fff991]
0x0000000000493fa6 : stc ; jmp qword ptr [rcx + 0x21fff992]
0x0000000000493fae : stc ; jmp qword ptr [rcx + 0x21fff993]
0x0000000000493fa2 : stc ; jmp qword ptr [rcx]
0x00000000004b05d6 : stc ; jmp qword ptr [rdx]
0x0000000000493f8e : stc ; jmp qword ptr [rip - 0x2e000672]
0x0000000000493ffa : stc ; jmp qword ptr [rsi]
0x0000000000493e1e : stc ; jmp rax
0x00000000004af87e : stc ; jmp rbx
0x0000000000493f72 : stc ; jmp rdx
0x0000000000494006 : stc ; jmp rsi
0x00000000004a7744 : stc ; jnp 0x4a7703 ; ret
0x000000000049408e : stc ; ljmp [rax] ; mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000430028 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004296a7 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000493ef6 : stc ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x00000000004943b6 : stc ; push qword ptr [rax - 0x31] ; stc ; inc eax ; sar cl, 1 ; call qword ptr [rax]
0x000000000049423e : stc ; push qword ptr [rax - 0x56] ; stc ; inc eax ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x00000000004941ea : stc ; push qword ptr [rax - 0x5d] ; stc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000049411a : stc ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x000000000049419a : stc ; push qword ptr [rax] ; mov dh, 0xf9 ; jmp qword ptr [rax]
0x00000000004941b2 : stc ; push qword ptr [rax] ; mov dl, 0xf9 ; inc dword ptr [rax] ; mov ah, 0xf9 ; jmp rax
0x00000000004943a6 : stc ; push qword ptr [rax] ; retf 0xfff9
0x0000000000493eca : stc ; push qword ptr [rax] ; xor edi, ecx ; call qword ptr [rax]
0x0000000000493fb6 : stc ; push qword ptr [rcx + 0x41fff994] ; xchg eax, ebp ; stc ; call rcx
0x0000000000493ffe : stc ; push qword ptr [rsi + 0x46fff995] ; xchg eax, esi ; stc ; jmp rsi
0x0000000000493e5a : stc ; push rax ; and al, 0xf9 ; call qword ptr [rax]
0x0000000000494316 : stc ; push rax ; fdiv st(1), st(0) ; call rax
0x0000000000494092 : stc ; push rax ; mov bl, 0xf9 ; call rax
0x00000000004943ea : stc ; push rax ; retf
0x0000000000493f1a : stc ; push rax ; stc ; jmp rax
0x00000000004557d3 : stc ; ret 0xfffa
0x0000000000438b33 : stc ; ret 5
0x0000000000438944 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042bfb7 : stc ; xlatb ; ret 0xff2d
0x00000000004a4d6e : std ; call qword ptr [rax - 0x1f00028a]
0x00000000004b56b2 : std ; call qword ptr [rbx]
0x00000000004b5142 : std ; call qword ptr [rdx]
0x00000000004b181a : std ; call rdx
0x00000000004ab186 : std ; call rsp
0x000000000047630a : std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004a4df6 : std ; dec dword ptr [rax + 0x7e] ; std ; jmp rax
0x0000000000473c68 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044a20e : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469982 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423fe2 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x000000000048254b : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004a4d6a : std ; inc dword ptr [rbx] ; xchg ebp, edi ; call qword ptr [rax - 0x1f00028a]
0x00000000004819fe : std ; jbe 0x481a0c ; ret
0x00000000004b5c1a : std ; jmp qword ptr [rax]
0x00000000004b4e8a : std ; jmp qword ptr [rcx]
0x00000000004b1322 : std ; jmp qword ptr [rdi]
0x00000000004b0a42 : std ; jmp qword ptr [rdx]
0x00000000004a4d72 : std ; jmp rax
0x00000000004b47ba : std ; jmp rdx
0x00000000004b4ebe : std ; jmp rsp
0x000000000042f84b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000044b21e : std ; push rbx ; ret
0x0000000000446ea3 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a867a : std ; retf
0x000000000042b881 : std ; xlatb ; ret
0x000000000042b879 : std ; xlatb ; ret 0xc085
0x000000000042bdf3 : std ; xlatb ; ret 0xe883
0x0000000000473621 : std ; xlatb ; retf 0xc985
0x00000000004734f4 : std ; xlatb ; retf 0xfdc5
0x0000000000473554 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000421b71 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000411643 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004956a6 : sti ; call qword ptr [rax]
0x00000000004956ae : sti ; call qword ptr [rdx + 0x27fffb3e]
0x000000000049567e : sti ; call qword ptr [rdx]
0x0000000000495e46 : sti ; call rax
0x000000000049556a : sti ; call rsi
0x00000000004956ba : sti ; dec dword ptr [rax + 0x5afffb3e] ; sti ; call qword ptr [rdx]
0x000000000044902f : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000049569e : sti ; inc dword ptr [rbp + rdi + 0x3d84fffb] ; sti ; call qword ptr [rax]
0x000000000049590a : sti ; inc dword ptr [rbp + rdi + 0x3deafffb] ; sti ; call rsi
0x00000000004b2ada : sti ; jmp qword ptr [rbx]
0x000000000049641a : sti ; jmp qword ptr [rcx]
0x00000000004956b2 : sti ; jmp qword ptr [rdi]
0x0000000000490580 : sti ; jmp qword ptr [rsi + 0xf]
0x00000000004950de : sti ; jmp rax
0x00000000004956ee : sti ; jmp rbx
0x00000000004956be : sti ; lcall [rdx + 0x3e] ; sti ; call qword ptr [rdx]
0x0000000000495e6e : sti ; ljmp [rax] ; imul edi, ebx, -1 ; add byte ptr [rbx - 5], ch ; jmp rax
0x000000000042fc28 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000496416 : sti ; push qword ptr [rdi + 0x72] ; sti ; jmp qword ptr [rcx]
0x00000000004a78ca : sti ; ret
0x000000000045a567 : sti ; test rax, rax ; je 0x45a575 ; call rax
0x000000000046c748 : stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a7da4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000044d362 : stosb byte ptr [rdi], al ; cmc ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x0000000000447bcb : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000494241 : stosb byte ptr [rdi], al ; stc ; inc eax ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x000000000046c66f : stosd dword ptr [rdi], eax ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000424361 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000046863e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000041ec93 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a8eac : stosd dword ptr [rdi], eax ; ret
0x00000000004a8daa : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000494245 : stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x0000000000424611 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041ec92 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a9291 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ae3b5 : sub al, 0 ; add byte ptr [rax], ch ; push rsi ; jmp rsi
0x00000000004af828 : sub al, 0x41 ; add byte ptr [rax], al ; xor al, 0x83 ; stc ; call qword ptr [rdx]
0x0000000000481cf6 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000447e02 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000044c480 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000042cd93 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004ac169 : sub al, 0xf6 ; call qword ptr [rax]
0x00000000004ac17d : sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004ac191 : sub al, 0xf6 ; jmp qword ptr [rax]
0x0000000000494d39 : sub al, 0xfa ; call rax
0x0000000000494cb9 : sub al, 0xfa ; jmp rsp
0x0000000000466d75 : sub al, 4 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000412854 : sub al, byte ptr [eax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000418710 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412855 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004186a6 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a3665], 1 ; ret
0x0000000000417639 : sub al, byte ptr [rax] ; jne 0x417651 ; jmp 0x41766b
0x0000000000418615 : sub al, byte ptr [rax] ; ret
0x000000000042440a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x0000000000424752 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041870f : sub al, byte ptr ss:[rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042c155 : sub al, ch ; std ; xlatb ; ret
0x0000000000494c09 : sub bh, dl ; call rdx
0x0000000000494d85 : sub bh, dl ; jmp qword ptr [rax]
0x000000000046361b : sub bl, cl ; in eax, 0xdf ; loopne 0x4635b0 ; ret
0x0000000000477227 : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000415fec : sub byte ptr [rax + 0x39], cl ; retf
0x0000000000477226 : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000483883 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x00000000004582cb : sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000422844 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c15c : sub byte ptr [rax - 0x77], cl ; ret
0x000000000046f9e4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004049f3 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d809 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d874 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040d929 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040d8a6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040d85f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040d8be : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040d95f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x00000000004adfa5 : sub byte ptr [rax], al ; add al, bh ; retf
0x000000000048421d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484265 ; leave ; ret
0x000000000048efb2 : sub byte ptr [rbp + 1], cl ; retf
0x0000000000448bc4 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000488073 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000488072 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000403f1b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x0000000000403f4f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000421754 : sub byte ptr [rcx - 0x7cb7ffd7], al ; retf 0x4901
0x000000000044bfac : sub byte ptr [rcx], al ; ret
0x000000000044f62a : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3d ; retf
0x00000000004b1624 : sub byte ptr [rdi], bl ; add byte ptr [rax], bh ; xchg eax, ebp ; cli ; call qword ptr [rdi]
0x0000000000421666 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000494090 : sub byte ptr [rdx - 0x4c0f0007], dh ; stc ; call rax
0x000000000042456a : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x00000000004245ab : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004823c5 : sub byte ptr [rdx], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x00000000004abc24 : sub byte ptr [rip - 0x65280000], al ; cmc ; call rax
0x0000000000468066 : sub cl, bpl ; ret 0xffe8
0x000000000040eb3d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000468067 : sub cl, ch ; ret 0xffe8
0x000000000045e134 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000485492 : sub dh, byte ptr [rbx] ; ret
0x000000000048004a : sub dl, dh ; call r11
0x000000000047575e : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004a7c4d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000477542 : sub dword ptr [rax + 0xf000002], -0x7b ; ret
0x00000000004ae039 : sub dword ptr [rax], eax ; add ah, dh ; sal esi, cl ; call qword ptr [rax]
0x000000000041f72a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042442c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042344d : sub dword ptr [rax], eax ; add rsp, 0x20 ; call 0x40ff38
0x000000000041f78a : sub dword ptr [rax], eax ; ret
0x00000000004a88e2 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000042de77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42de8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042dfc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42dfdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e117 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e12d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e267 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e27d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e3b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e3cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e507 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e51d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e657 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e66d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e7a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e7bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e8f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e90d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ea5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eb97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ebad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ece7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ecfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ee4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ef87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ef9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f0d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f0ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430847 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43085d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4309ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430afd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ed7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430eed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43103d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43118d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4312dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43142d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43157d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4316cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43181d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43196d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ddd3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ddcf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042de7d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000412e68 : sub dword ptr [rdx], 0x4f0f4800 ; ret 0x8948
0x000000000042444b : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042a357 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042d576 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042a211 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004a919a : sub dword ptr [rsi], 0x76 ; retf
0x000000000040db6d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042bee7 : sub eax, -1 ; jne 0x42bef8 ; vzeroupper ; ret
0x0000000000422dba : sub eax, 0x10 ; ret
0x0000000000494d2d : sub eax, 0x2d50fffa ; cli ; call rax
0x0000000000494cad : sub eax, 0x2d64fffa ; cli ; jmp rsp
0x0000000000469514 : sub eax, 0x83000000 ; ret
0x00000000004668e5 : sub eax, 0x83000000 ; ret 0x8b01
0x00000000004a68e6 : sub eax, 0xea4ca798 ; retf
0x00000000004244b2 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000458764 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446974 : sub eax, 1 ; ret
0x0000000000481a46 : sub eax, dword ptr [0] ; ret
0x000000000040382d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b1a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000040359c : sub eax, dword ptr [rax] ; call 4
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401b7f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045e0d6 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000418fce : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000044869a : sub eax, dword ptr [rdx + rcx*4] ; je 0x448686 ; ret
0x0000000000424612 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004182e3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000446add : sub eax, eax ; cmp eax, ecx ; jle 0x446b21 ; movsxd rax, ecx ; ret
0x0000000000480eb4 : sub eax, eax ; ret
0x000000000042bf33 : sub eax, ecx ; je 0x42bf49 ; sbb eax, eax ; or eax, 1 ; ret
0x00000000004179b9 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000484510 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000425bdc : sub eax, ecx ; ret
0x0000000000440a89 : sub eax, edi ; ret
0x000000000047451e : sub eax, edi ; shr rax, 2 ; ret
0x00000000004845f3 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000041830b : sub eax, edx ; ret
0x0000000000474910 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042befc : sub eax, edx ; vzeroupper ; ret
0x0000000000446b3d : sub eax, esi ; ret
0x0000000000480eb3 : sub eax, r8d ; ret
0x00000000004a7b3e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000413d00 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046474f : sub ebp, ecx ; retf
0x00000000004128d6 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a65d5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044ce18 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000473aa4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000493e75 : sub edi, ecx ; call rax
0x0000000000494cc1 : sub edi, edx ; call rsp
0x0000000000494b81 : sub edi, edx ; jmp qword ptr [rax]
0x0000000000418310 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000418305 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042b384 : sub edx, eax ; jbe 0x42b3c7 ; add rax, rdi ; ret
0x000000000042b394 : sub edx, eax ; jbe 0x42b3c9 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b3a4 : sub edx, eax ; jbe 0x42b3c9 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b3b4 : sub edx, eax ; jbe 0x42b3c9 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000494bd1 : sub edx, edi ; call qword ptr [rdx]
0x0000000000494d51 : sub edx, edi ; call rax
0x0000000000494d11 : sub edx, edi ; jmp rax
0x0000000000494bcd : sub edx, edi ; ljmp [rcx + rbp - 6] ; call qword ptr [rdx]
0x0000000000494d4d : sub edx, edi ; push qword ptr [rax] ; sub edx, edi ; call rax
0x0000000000494d8d : sub edx, edi ; push rax ; or edi, edx ; call qword ptr [rax]
0x00000000004237b1 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000004132af : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004156a4 : sub edx, esi ; sar rdx, 2 ; call 0x411908
0x00000000004ac0a9 : sub esi, esi ; jmp qword ptr [rax]
0x000000000048a773 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fa6c : sub esp, 0x80 ; call 0x44bd18
0x000000000040fad2 : sub esp, 0x80 ; call 0x44bd48
0x0000000000492431 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004753b3 : sub esp, 8 ; syscall
0x0000000000423781 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004179b8 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000422db9 : sub rax, 0x10 ; ret
0x0000000000446973 : sub rax, 1 ; ret
0x0000000000481a45 : sub rax, qword ptr [0] ; ret
0x0000000000418fcd : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000481a44 : sub rax, qword ptr fs:[0] ; ret
0x0000000000485222 : sub rax, r8 ; ret
0x0000000000440a88 : sub rax, rdi ; ret
0x000000000047451d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000446a43 : sub rax, rdx ; ret
0x0000000000440adf : sub rax, rdx ; vzeroupper ; ret
0x0000000000446b3c : sub rax, rsi ; ret
0x000000000042b383 : sub rdx, rax ; jbe 0x42b3c8 ; add rax, rdi ; ret
0x00000000004156a3 : sub rdx, rsi ; sar rdx, 2 ; call 0x411909
0x000000000048a772 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fa6b : sub rsp, 0x80 ; call 0x44bd19
0x000000000040fad1 : sub rsp, 0x80 ; call 0x44bd49
0x0000000000492430 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004753b2 : sub rsp, 8 ; syscall
0x000000000047b52f : syscall
0x0000000000481777 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x0000000000417224 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004754b5 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048af03 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000046c929 : test al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004adfa4 : test al, 0x28 ; add byte ptr [rax], al ; clc ; retf
0x000000000044abde : test al, 0x45 ; mov esp, esi ; call r15
0x000000000044b97a : test al, 0x75 ; ret
0x00000000004abb88 : test al, 0x94 ; cmc ; call qword ptr [rdx]
0x00000000004a6e97 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004affe8 : test al, 0xa5 ; stc ; jmp qword ptr [rcx]
0x00000000004a687e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000004b1958 : test al, 0xb0 ; cli ; call qword ptr [rax]
0x00000000004ac0a4 : test al, 9 ; add byte ptr [rax], al ; clc ; sub esi, esi ; jmp qword ptr [rax]
0x000000000040d781 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000047e735 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000425e9a : test al, al ; jne 0x425e88 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000448450 : test al, al ; jne 0x448389 ; jmp 0x44842e
0x0000000000477ee3 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a97a4 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000472b5c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a7c51 : test bh, dl ; retf 0xdf7f
0x00000000004198e8 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000041010f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000458e51 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046ab79 : test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000040ea5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419caa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048582a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x0000000000444cba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x00000000004440fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041863a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000412bba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000041177a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004185fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041753a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000444afa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3b5d : test byte ptr [rax], al ; add dl, ch ; leave ; hlt ; jmp qword ptr [rcx]
0x000000000044ef62 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046aa7c : test byte ptr [rbp - 0x7c000018], bl ; ret
0x00000000004729ef : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x000000000048c00b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048dba2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000418f5d : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; retf 0xfe74
0x00000000004619f2 : test byte ptr [rcx - 0x7a000007], al ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000429c66 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a446 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428f76 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a356 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000428c96 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004563b4 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x456377
0x000000000044b674 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x000000000046fe79 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000423fe6 : test byte ptr [rdi], 0x84 ; ret
0x000000000044a1bf : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449cd6 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000472ee4 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000472efc : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004567b9 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x45677c
0x000000000041fd2e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472b44 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042182e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000421d2e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004956a0 : test byte ptr [rip + 0x3d84fffb], bh ; sti ; call qword ptr [rax]
0x000000000049590c : test byte ptr [rip + 0x3deafffb], bh ; sti ; call rsi
0x00000000004af480 : test byte ptr [rip - 0x69840000], bh ; clc ; jmp qword ptr [rsi]
0x0000000000469604 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045f034 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000047373d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000411a94 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x00000000004531b1 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x000000000044096d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000042af86 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004af8b9 : test cl, bh ; call qword ptr [rbx]
0x00000000004af891 : test cl, bh ; call qword ptr [rdx]
0x00000000004296a6 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ada6 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000489dfa : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004293c6 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427456 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427756 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428656 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ae96 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428356 : test cl, ch ; add eax, 0x894d0000 ; retf
0x0000000000428056 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427d56 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044c5c1 : test cl, ch ; retf 0xfffe
0x0000000000429dd6 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042acb6 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004465ff : test cl, cl ; jne 0x4465f4 ; ret
0x00000000004466af : test cl, cl ; jne 0x4466a4 ; ret
0x000000000044696f : test cl, cl ; jne 0x446968 ; sub rax, 1 ; ret
0x0000000000450b45 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000444b44 : test dl, 0x40 ; jne 0x444b09 ; lea rax, [rdi + 7] ; ret
0x0000000000444b72 : test dl, 4 ; jne 0x444b09 ; lea rax, [rdi + 3] ; ret
0x0000000000400593 : test dl, dl ; jne 0x40059e ; ret
0x000000000040dad6 : test dl, dl ; jne 0x40dab8 ; ret
0x000000000044681f : test dl, dl ; jne 0x446818 ; lea rax, [rcx - 1] ; ret
0x0000000000480e27 : test dl, dl ; jne 0x480e03 ; movsx eax, cl ; neg eax ; ret
0x0000000000491af3 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000472b5d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000400ba2 : test dword ptr [rax], 0xb800 ; add byte ptr [rax], al ; leave ; ret
0x0000000000468ae6 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000402191 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044d4d1 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045eaa9 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x00000000004691f6 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000402190 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044d4d0 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042b308 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x00000000004499e9 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042d077 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d4c6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c148 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000041fb68 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047566b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042d04d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cf5d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ce6d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041cf62 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x0000000000411058 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x0000000000423863 : test dword ptr [rcx], ebp ; add bh, dh ; ret 0
0x000000000048df84 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041cefc : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042cd92 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000473523 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000449656 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000446382 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045f971 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000040fcad : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042d298 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a7d2d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000461073 : test eax, 0x4800255a ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x00000000004a8b80 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432f16 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048b902 : test eax, 0x8002308 ; ret
0x000000000041ee99 : test eax, 0x83480029 ; retf 0x4901
0x00000000004102ae : test eax, 0x8948002a ; ret 0x8948
0x000000000046c3a9 : test eax, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x000000000044bbfb : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000422d31 : test eax, eax ; je 0x422d48 ; lea rax, [rdx - 0x10] ; ret
0x000000000042b058 : test eax, eax ; je 0x42b064 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044a3f8 : test eax, eax ; je 0x44a403 ; ret
0x000000000044d366 : test eax, eax ; je 0x44d375 ; ret
0x0000000000459164 : test eax, eax ; je 0x45916e ; call rax
0x000000000045a569 : test eax, eax ; je 0x45a573 ; call rax
0x0000000000484fe0 : test eax, eax ; je 0x484ff8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f448 : test eax, eax ; je 0x48f455 ; ret
0x000000000048f558 : test eax, eax ; je 0x48f565 ; ret
0x0000000000490cf1 : test eax, eax ; je 0x490d00 ; call rax
0x000000000041732c : test eax, eax ; jne 0x417325 ; ret
0x00000000004182c4 : test eax, eax ; jne 0x4182bd ; ret
0x000000000042b335 : test eax, eax ; jne 0x42b396 ; xor eax, eax ; ret
0x000000000042b7b1 : test eax, eax ; jne 0x42b7d9 ; xor eax, eax ; vzeroupper ; ret
0x00000000004497b6 : test eax, eax ; jne 0x4497d6 ; xor eax, eax ; syscall
0x0000000000449886 : test eax, eax ; jne 0x4498a9 ; mov eax, 1 ; syscall
0x00000000004499c3 : test eax, eax ; jne 0x449a31 ; mov eax, 0x48 ; syscall
0x0000000000449b56 : test eax, eax ; jne 0x449b79 ; mov eax, 3 ; syscall
0x000000000044bd30 : test eax, eax ; jne 0x44bd2b ; pop rdx ; pop r10 ; ret
0x0000000000475645 : test eax, eax ; jne 0x4756af ; mov eax, 0x101 ; syscall
0x000000000048f487 : test eax, eax ; jne 0x48f495 ; ret
0x000000000048f4a2 : test eax, eax ; jne 0x48f4b5 ; ret
0x000000000048f6d2 : test eax, eax ; jne 0x48f6e5 ; ret
0x00000000004056c4 : test eax, eax ; jns 0x405698 ; mov r15, r12 ; jmp 0x40569f
0x000000000047bbf0 : test eax, eax ; js 0x47bc07 ; pop rbx ; ret
0x000000000047df0d : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000469be5 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000047051a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044a699 : test ebp, ebp ; jne 0x44a6b8 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b204 : test ebp, ebp ; jne 0x44b230 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b237 : test ebp, ebp ; jne 0x44b289 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b263 : test ebp, ebp ; jne 0x44b2e9 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004901c1 : test ebp, ebp ; jne 0x4901b0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490d7b : test ebp, ebp ; jne 0x490d68 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b56b1 : test ebp, edi ; call qword ptr [rbx]
0x000000000041ae68 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042b270 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000421b70 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421668 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454949 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000477f38 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444b32 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004745f9 : test ecx, ecx ; jne 0x4745b8 ; mov rax, rdx ; ret
0x00000000004af909 : test ecx, edi ; call qword ptr [rbx]
0x000000000047f227 : test ecx, edx ; and eax, dword ptr [rax] ; ret
0x000000000044a6bf : test edi, edi ; jne 0x44a709 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a6e7 : test edi, edi ; jne 0x44a729 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b2ef : test edi, edi ; jne 0x44b35a ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b31f : test edi, edi ; jne 0x44b38b ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f36a : test edi, edi ; jne 0x47f345 ; ret
0x00000000004846bd : test edi, edi ; mov byte ptr [rsi], al ; jne 0x4846b1 ; mov rax, rsi ; ret
0x0000000000494ec9 : test edx, edi ; push qword ptr [rax] ; xchg edx, edi ; call rax
0x0000000000440922 : test edx, edx ; je 0x440930 ; bsf eax, edx ; ret
0x0000000000440922 : test edx, edx ; je 0x440931 ; bsf eax, edx ; ret
0x00000000004409cb : test edx, edx ; je 0x4409e7 ; bsf rax, rdx ; ret
0x00000000004409cb : test edx, edx ; je 0x4409e8 ; bsf rax, rdx ; ret
0x000000000044c63a : test edx, edx ; je 0x44c651 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004737aa : test edx, edx ; je 0x4737d7 ; bsf rax, rdx ; ret
0x00000000004737aa : test edx, edx ; je 0x4737d8 ; bsf rax, rdx ; ret
0x0000000000414773 : test edx, edx ; jne 0x414785 ; ret
0x000000000041640f : test edx, edx ; jne 0x416405 ; ret
0x000000000047099f : test edx, edx ; jne 0x470995 ; ret
0x000000000047435a : test edx, edx ; jne 0x474355 ; ret
0x0000000000444b25 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000459068 : test esi, esi ; je 0x459072 ; call rsi
0x00000000004736a1 : test esi, esi ; jne 0x4736b0 ; xor rax, rax ; ret
0x0000000000474361 : test esi, esi ; jne 0x474370 ; xor rax, rax ; ret
0x000000000045e834 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000444b3f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042b057 : test r8d, r8d ; je 0x42b065 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000004745f8 : test r9d, r9d ; jne 0x4745b9 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000422d30 : test rax, rax ; je 0x422d49 ; lea rax, [rdx - 0x10] ; ret
0x000000000044a3f7 : test rax, rax ; je 0x44a404 ; ret
0x0000000000459163 : test rax, rax ; je 0x45916f ; call rax
0x000000000045a568 : test rax, rax ; je 0x45a574 ; call rax
0x0000000000484fdf : test rax, rax ; je 0x484ff9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490cf0 : test rax, rax ; je 0x490d01 ; call rax
0x000000000041732b : test rax, rax ; jne 0x417326 ; ret
0x00000000004182c3 : test rax, rax ; jne 0x4182be ; ret
0x000000000044a698 : test rbp, rbp ; jne 0x44a6b9 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b203 : test rbp, rbp ; jne 0x44b231 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004901c0 : test rbp, rbp ; jne 0x4901b1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490d7a : test rbp, rbp ; jne 0x490d69 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f369 : test rdi, rdi ; jne 0x47f346 ; ret
0x00000000004409ca : test rdx, rdx ; je 0x4409e8 ; bsf rax, rdx ; ret
0x00000000004409ca : test rdx, rdx ; je 0x4409e9 ; bsf rax, rdx ; ret
0x00000000004737a9 : test rdx, rdx ; je 0x4737d8 ; bsf rax, rdx ; ret
0x00000000004737a9 : test rdx, rdx ; je 0x4737d9 ; bsf rax, rdx ; ret
0x0000000000414772 : test rdx, rdx ; jne 0x414786 ; ret
0x000000000041640e : test rdx, rdx ; jne 0x416406 ; ret
0x000000000047099e : test rdx, rdx ; jne 0x470996 ; ret
0x0000000000459067 : test rsi, rsi ; je 0x459073 ; call rsi
0x00000000004736a0 : test rsi, rsi ; jne 0x4736b1 ; xor rax, rax ; ret
0x0000000000474360 : test rsi, rsi ; jne 0x474371 ; xor rax, rax ; ret
0x00000000004154c3 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00000000004384da : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000044728c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446c55 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447e11 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000446c59 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447418 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x00000000004474bf : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x00000000004384c6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004384ad : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000004471f5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000447d7b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000447363 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000447335 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000447d02 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000446c4b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000446c4f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004478d2 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000447998 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000447e8d : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000446c64 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000446c68 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000004387e3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043867c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043847e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000438442 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000438945 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000446e08 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000446d6b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000446c0a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043eb21 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b658 : vzeroupper ; ret
0x000000000042b830 : vzeroupper ; xor eax, eax ; ret
0x0000000000476905 : wait ; clc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004941d5 : wait ; stc ; jmp rax
0x000000000042a6a3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043ddcf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a793 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a5b3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004600e2 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000043fa1c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f23c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f62c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee4c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d76c : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000448092 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042affb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043e92f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e10f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043d8ef : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044efc8 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042ab53 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000494964 : xchg byte ptr [rax], bh ; cli ; call qword ptr [rsi]
0x000000000043efeb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e44f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a2e3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043dc2f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d40f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e5ef : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042ad33 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a4c3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000480e0a : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000048c90c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042af13 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049446c : xchg byte ptr [rcx], dl ; cli ; call qword ptr [rsi]
0x00000000004a7a55 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000043f4dc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ecfc : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fe0c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000454203 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042ae23 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d74f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a765 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a855 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a675 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004600f9 : xchg byte ptr [rdx], dl ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000041ac65 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043d885 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e585 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e0a5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f3dd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004552f5 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043fd0d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3d3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000043714f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043e8c5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dbc5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d6e5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e3e5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f52d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ed4d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a585 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3a5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a495 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a2b5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046f0b9 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046c780 : xchg dword ptr [rax - 0x76ffffe3], edi ; ret 0x349
0x0000000000402cb3 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x00000000004b3edd : xchg dword ptr [rax], eax ; add al, dh ; retf 0xfffc
0x00000000004b3ef1 : xchg dword ptr [rax], eax ; add byte ptr [rbx + rcx*8], cl ; cld ; call rdx
0x000000000047b606 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a7a58 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044f0b4 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004a75df : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x0000000000462c1b : xchg dword ptr [rbp - 0x77000000], eax ; ret 0x349
0x000000000046be32 : xchg dword ptr [rbx - 0x76ffffdb], edi ; ret 0x349
0x00000000004a684c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048afba : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000046ce2a : xchg dword ptr [rcx - 0x76ffffea], ecx ; ret 0x349
0x000000000046da75 : xchg dword ptr [rcx - 0x76fffff6], esp ; ret 0x349
0x000000000046da4c : xchg dword ptr [rdi - 0x76fffff6], edx ; ret 0x349
0x000000000044bd2e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44bd2d ; pop rdx ; pop r10 ; ret
0x000000000046f2a4 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046993a : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000410195 : xchg dword ptr [rdx - 0x76b7ffd6], ebp ; ret 0x8948
0x0000000000478c50 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046b8e4 : xchg dword ptr [rsi - 0x76ffffd5], edi ; ret 0x349
0x0000000000461ac8 : xchg dword ptr [rsi - 0x76ffffef], eax ; ret 0x349
0x0000000000461fe0 : xchg dword ptr [rsi - 0x76fffff5], edi ; ret 0x349
0x000000000046e563 : xchg dword ptr [rsi - 0x77000000], edx ; ret 0x349
0x00000000004a69eb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004b1641 : xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b1629 : xchg eax, ebp ; cli ; call qword ptr [rdi]
0x0000000000494ef1 : xchg eax, ebp ; cli ; push qword ptr [rax - 0x69] ; cli ; call qword ptr [rax]
0x00000000004a6d29 : xchg eax, ebp ; jge 0x4a6d0c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004585cb : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044fcdf : xchg eax, ebp ; ret
0x000000000048aba0 : xchg eax, ebp ; ret 0x145
0x0000000000477c8a : xchg eax, ebp ; ret 0x2041
0x0000000000477d4a : xchg eax, ebp ; ret 0x2044
0x0000000000449dcc : xchg eax, ebp ; ret 0x3948
0x000000000041dcbb : xchg eax, ebp ; ret 0x8348
0x0000000000479910 : xchg eax, ebp ; ret 0xc283
0x0000000000420e7d : xchg eax, ebp ; ret 0xd020
0x000000000040deb5 : xchg eax, ebp ; ret 0xd021
0x00000000004641ca : xchg eax, ebp ; ret 0xd120
0x000000000040ffd2 : xchg eax, ebp ; ret 0xdaf7
0x000000000044d3a1 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c71a : xchg eax, ebp ; ret 0xf45
0x00000000004a75e2 : xchg eax, ebp ; retf 0x33e6
0x000000000041878d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000494081 : xchg eax, ebp ; stc ; call qword ptr [rax]
0x0000000000493fbd : xchg eax, ebp ; stc ; call rcx
0x0000000000494001 : xchg eax, ebp ; stc ; inc dword ptr [rsi - 0x6a] ; stc ; jmp rsi
0x00000000004a8a3c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004111b2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046b9a7 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042c1e0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004a93cc : xchg eax, ebx ; in al, dx ; retf 0xae32
0x0000000000443fbc : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042d982 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a88e3 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4a88bd
0x000000000045b1a8 : xchg eax, ebx ; ret 0x3948
0x0000000000411fac : xchg eax, ebx ; ret 0x3949
0x00000000004205d0 : xchg eax, ebx ; ret 0x3d83
0x0000000000471245 : xchg eax, ebx ; ret 0x840
0x000000000045bc8d : xchg eax, ebx ; ret 0x854d
0x000000000041cf69 : xchg eax, ebx ; ret 0xffff
0x000000000040fe99 : xchg eax, ebx ; retf 0x2a
0x0000000000494071 : xchg eax, ebx ; stc ; call rax
0x0000000000493fad : xchg eax, ebx ; stc ; jmp qword ptr [rcx + 0x21fff993]
0x0000000000493fb1 : xchg eax, ebx ; stc ; jmp qword ptr [rcx]
0x000000000043e9d1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004613fb : xchg eax, ecx ; ret 0xffff
0x0000000000494061 : xchg eax, ecx ; stc ; call rax
0x0000000000493fa1 : xchg eax, ecx ; stc ; jmp qword ptr [rcx]
0x000000000043d0ff : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004100d2 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048c10c : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x00000000004147e4 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004b4e85 : xchg eax, edi ; add byte ptr [rax], al ; cwde ; std ; jmp qword ptr [rcx]
0x000000000040d251 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000494ef5 : xchg eax, edi ; cli ; call qword ptr [rax]
0x00000000004a6d95 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6d63 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000424705 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000484a51 : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; retf
0x000000000041edfb : xchg eax, edi ; ret 0x394c
0x000000000040058e : xchg eax, edi ; ret 0xda80
0x000000000041f2e1 : xchg eax, edi ; ret 0xfae9
0x000000000041f8c9 : xchg eax, edi ; ret 0xfbe9
0x00000000004a76fd : xchg eax, edi ; retf 0xe152
0x00000000004941d1 : xchg eax, edi ; stc ; call qword ptr [rax - 0x1f000665]
0x0000000000443fb5 : xchg eax, edi ; syscall
0x00000000004a8a3b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a6e98 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000004944f4 : xchg eax, edx ; adc dl, bh ; jmp qword ptr [rdx]
0x000000000047aeff : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000494ee9 : xchg eax, edx ; cli ; push qword ptr [rax] ; xchg eax, esp ; cli ; call rax
0x00000000004a875d : xchg eax, edx ; jae 0x4a873a ; push rsi ; pop rdx ; je 0x4a872f ; ret 0xacfc
0x00000000004a6d9c : xchg eax, edx ; pop rbx ; retf
0x00000000004876c1 : xchg eax, edx ; push rcx ; and eax, dword ptr [rax] ; jne 0x4876f5 ; ret
0x0000000000405be8 : xchg eax, edx ; ret 0x8548
0x0000000000483055 : xchg eax, edx ; ret 0x8949
0x00000000004a684f : xchg eax, edx ; ret 0xf869
0x0000000000454f3a : xchg eax, edx ; retf
0x0000000000446b2d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000494069 : xchg eax, edx ; stc ; call rax
0x0000000000493fa5 : xchg eax, edx ; stc ; jmp qword ptr [rcx + 0x21fff992]
0x0000000000493fa9 : xchg eax, edx ; stc ; jmp qword ptr [rcx]
0x00000000004956b0 : xchg eax, edx ; sti ; jmp qword ptr [rdi]
0x000000000042b05c : xchg eax, edx ; sub eax, edx ; ret
0x000000000042c4e0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000434713 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000456011 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000448124 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004af471 : xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004af485 : xchg eax, esi ; clc ; jmp qword ptr [rsi]
0x000000000047281e : xchg eax, esi ; fdiv st(0), st(0) ; dec dword ptr [rax + 1] ; ret
0x00000000004a8b48 : xchg eax, esi ; jnp 0x4a8b97 ; retf 0x99e0
0x000000000042c59d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000040479e : xchg eax, esi ; mov esp, 0x8949ffff ; ret 0x149
0x000000000042c4fb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448d81 : xchg eax, esi ; ret 0xc085
0x00000000004a90ec : xchg eax, esi ; ret 0xcd11
0x0000000000448ddf : xchg eax, esi ; ret 0xd284
0x000000000042c54c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494005 : xchg eax, esi ; stc ; jmp rsi
0x0000000000493ff8 : xchg eax, esi ; xchg eax, esp ; stc ; jmp qword ptr [rsi]
0x0000000000494988 : xchg eax, esi ; xor al, 0xfa ; jmp qword ptr [rsi]
0x000000000046c7c7 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000494eed : xchg eax, esp ; cli ; call rax
0x00000000004abb89 : xchg eax, esp ; cmc ; call qword ptr [rdx]
0x00000000004abb9d : xchg eax, esp ; cmc ; call rsp
0x00000000004956e8 : xchg eax, esp ; cmp eax, 0x3d94fffb ; sti ; jmp rbx
0x00000000004a92ff : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9290 ; ret 0x48f
0x0000000000466622 : xchg eax, esp ; ret
0x0000000000450ddb : xchg eax, esp ; ret 0x1f0f
0x0000000000449e9b : xchg eax, esp ; ret 0x2044
0x0000000000480fbc : xchg eax, esp ; ret 0x3d
0x000000000041c92e : xchg eax, esp ; ret 0x3de9
0x000000000046d957 : xchg eax, esp ; ret 0x7f3c
0x0000000000484c21 : xchg eax, esp ; ret 0x950f
0x0000000000402c04 : xchg eax, esp ; ret 0xb60f
0x0000000000446b30 : xchg eax, esp ; ret 0xc085
0x000000000044a1c1 : xchg eax, esp ; ret 0xc221
0x00000000004767e5 : xchg eax, esp ; ret 0xc283
0x0000000000449cd8 : xchg eax, esp ; ret 0xca21
0x00000000004011e3 : xchg eax, esp ; ret 0xd284
0x000000000044f806 : xchg eax, esp ; ret 0xd5e9
0x00000000004105ed : xchg eax, esp ; ret 0xdaf7
0x000000000048c6bb : xchg eax, esp ; ret 0xf45
0x00000000004008cd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000422d7a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000493ff5 : xchg eax, esp ; stc ; call qword ptr [rsi + 0x26fff994]
0x0000000000493fb9 : xchg eax, esp ; stc ; inc dword ptr [rcx - 0x6b] ; stc ; call rcx
0x0000000000493ff9 : xchg eax, esp ; stc ; jmp qword ptr [rsi]
0x00000000004a6d23 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000493fbc : xchg eax, r13d ; stc ; call rcx
0x0000000000480fb0 : xchg eax, r8d ; mov eax, 0x15 ; syscall
0x00000000004a4d6d : xchg ebp, edi ; call qword ptr [rax - 0x1f00028a]
0x00000000004a4df5 : xchg ebp, edi ; dec dword ptr [rax + 0x7e] ; std ; jmp rax
0x000000000048254a : xchg ebp, edi ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000046ca72 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041ad34 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000494ecd : xchg edx, edi ; call rax
0x00000000004a8f16 : xchg esp, eax ; jb 0x4a8f74 ; call 0x4c14b8d9
0x00000000004b1654 : xchg rax, rbp ; cli ; call qword ptr [rcx]
0x00000000004a1ed9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042d849 : xlatb ; add r9, r11 ; jmp r9
0x00000000004758ef : xlatb ; ja 0x47591c ; ret
0x0000000000446e93 : xlatb ; jb 0x446e9e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d53d : xlatb ; jmp rdi
0x00000000004a78c3 : xlatb ; jo 0x4a793f ; mov ebp, 0xfb67d10d ; ret
0x0000000000484742 : xlatb ; mov byte ptr [rsi], al ; jne 0x484728 ; mov rax, rsi ; ret
0x0000000000448fa1 : xlatb ; mov eax, esi ; syscall
0x0000000000448fb0 : xlatb ; mov eax, r8d ; syscall
0x00000000004a6cd0 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042b184 : xlatb ; ret
0x00000000004a8d66 : xlatb ; ret 0x4e27
0x00000000004733a7 : xlatb ; ret 0x94c
0x000000000042b16f : xlatb ; ret 0xc085
0x0000000000425c90 : xlatb ; ret 0xc148
0x000000000042bdf4 : xlatb ; ret 0xe883
0x0000000000440944 : xlatb ; ret 0xf66
0x000000000042bfb8 : xlatb ; ret 0xff2d
0x000000000044027d : xlatb ; retf
0x00000000004a6d24 : xlatb ; retf 0xa1eb
0x0000000000473484 : xlatb ; retf 0xc148
0x0000000000473622 : xlatb ; retf 0xc985
0x00000000004a7c52 : xlatb ; retf 0xdf7f
0x0000000000424910 : xlatb ; retf 0xead3
0x00000000004734f5 : xlatb ; retf 0xfdc5
0x000000000042b551 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000473555 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b333 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042b872 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x00000000004406c2 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000444ae6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000425b76 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000425a36 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000004258f6 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000004257b6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000425676 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000425536 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000004253f6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000004252b6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000425176 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000425036 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000424ef6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000424db6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000424c76 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000424b36 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000004249f6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000444ae2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000473345 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473356 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004246ea : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a684a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000446c96 : xor al, 0x27 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000004a88e6 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x00000000004b135c : xor al, 0x74 ; cli ; jmp rax
0x00000000004af82c : xor al, 0x83 ; stc ; call qword ptr [rdx]
0x0000000000459e62 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000046eefb : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048dc52 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a7a2a : xor al, 0xd8 ; ret
0x0000000000459065 : xor al, 0xf0 ; test rsi, rsi ; je 0x459075 ; call rsi
0x0000000000452bde : xor al, 0xf6 ; ret
0x0000000000494a09 : xor al, 0xfa ; call qword ptr [rdx]
0x000000000049494d : xor al, 0xfa ; call rsi
0x0000000000494949 : xor al, 0xfa ; inc dword ptr [rax + 0x34] ; cli ; call rsi
0x0000000000494989 : xor al, 0xfa ; jmp qword ptr [rsi]
0x0000000000494b49 : xor al, 0xfa ; jmp rax
0x0000000000476309 : xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x000000000042b3bc : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000042b28d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000411412 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000447c74 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000045b908 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004400f1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000440552 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000411413 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004760a4 : xor byte ptr [rax + 1], cl ; retf
0x00000000004b032c : xor byte ptr [rax + rax], cl ; jo 0x4b02f2 ; stc ; jmp qword ptr [rcx]
0x000000000044abda : xor byte ptr [rax - 0x75], cl ; jge 0x44ab90 ; mov r12d, r14d ; call r15
0x0000000000440caf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004740df : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048ab08 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000471982 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044d16f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402ee8 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000447c75 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000493f08 : xor byte ptr [rax - 7], ah ; inc dword ptr [rax + 0x4b] ; stc ; jmp qword ptr [rax]
0x000000000041176b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e969 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e8a3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000047432c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040e98f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000448173 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004718ba : xor byte ptr [rax], al ; je 0x4718c5 ; ret
0x000000000048e06e : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004470e5 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000443fb1 : xor byte ptr [rbp + rcx*4 + 0x1d], cl ; xchg eax, edi ; syscall
0x0000000000494230 : xor byte ptr [rbp - 0x597f0007], ah ; stc ; call rax
0x0000000000494f10 : xor byte ptr [rbp - 0x617f0006], bl ; cli ; call rax
0x0000000000466829 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000414af6 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044f55a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046d88b : xor byte ptr [rbx - 0x78f0f608], al ; ret
0x0000000000493ecc : xor byte ptr [rbx], dh ; stc ; call qword ptr [rax]
0x000000000048a925 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000478563 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000494130 : xor byte ptr [rcx - 0x4cbf0007], 0xf9 ; jmp qword ptr [rax]
0x0000000000403f2b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004a6d2e : xor byte ptr [rcx], ah ; retf
0x000000000041176c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412a57 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004100d3 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000494d50 : xor byte ptr [rcx], ch ; cli ; call rax
0x0000000000493f64 : xor byte ptr [rdi - 0x6fdf0007], cl ; stc ; call qword ptr [rax]
0x0000000000470a60 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004941b4 : xor byte ptr [rdx - 0x4bff0007], dh ; stc ; jmp rax
0x0000000000494858 : xor byte ptr [rdx], cl ; cli ; jmp qword ptr [rax + 0x20fffa09]
0x0000000000494840 : xor byte ptr [rip + 0x4a0fffa], al ; cli ; call qword ptr [rax]
0x00000000004b04f7 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042c28f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047330c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b28e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004941dc : xor byte ptr [rsi - 0x607f0007], bl ; stc ; call rax
0x00000000004a8a3e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000494b34 : xor byte ptr [rsi], 0xfa ; call qword ptr [rax]
0x00000000004a6d1f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4a6ccf
0x00000000004942f8 : xor ch, bl ; stc ; call qword ptr [rax]
0x000000000041219d : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047dc63 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045b477 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d0fe : xor cl, byte ptr [rax] ; jne 0x48d123 ; mov rax, qword ptr [rax] ; ret
0x0000000000405c10 : xor cl, ch ; ret
0x000000000048f554 : xor dh, cl ; and al, byte ptr [rax] ; test eax, eax ; je 0x48f569 ; ret
0x000000000045a2c9 : xor dh, dh ; ret 0x4002
0x0000000000494d19 : xor dl, bh ; call rax
0x000000000045d47d : xor dl, bh ; dec dword ptr [rax + 0x29] ; ret
0x0000000000494c99 : xor dl, bh ; jmp rsp
0x0000000000494c95 : xor dl, bh ; push qword ptr [rax + rsi - 6] ; jmp rsp
0x000000000042374a : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048001e : xor dl, dh ; jmp r11
0x0000000000480130 : xor dl, dh ; ret
0x000000000045d47c : xor dl, dil ; dec dword ptr [rax + 0x29] ; ret
0x0000000000465dfd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004a7cd6 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044c13f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d16d : xor dword ptr [rax], ecx ; jne 0x48d17c ; mov qword ptr [rax], rdx ; ret
0x000000000041be49 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000468973 : xor dword ptr [rbx - 7], edi ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000047d753 : xor dword ptr [rdi + 2], 0 ; mov eax, 0x15 ; syscall
0x00000000004237d2 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000424491 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046b77e : xor eax, 0x24b69d ; jmp rax
0x0000000000494985 : xor eax, 0x3496fffa ; cli ; jmp qword ptr [rsi]
0x0000000000494abd : xor eax, 0x3544fffa ; cli ; call rsp
0x00000000004476a3 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a6ea : xor eax, 0x7d8b48 ; call r12
0x000000000046570a : xor eax, 0x89ffffe6 ; ret
0x000000000040e966 : xor eax, dword ptr [0x30] ; call rax
0x0000000000415710 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004164f4 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045c9b9 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000477608 : xor eax, eax ; call 0x47e3b8
0x00000000004758eb : xor eax, eax ; cmp rdi, rdx ; ja 0x475920 ; ret
0x000000000044bd07 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004146a0 : xor eax, eax ; jmp 0x41466a
0x000000000045d09c : xor eax, eax ; jmp 0x45d064
0x000000000045d09b : xor eax, eax ; jmp 0x45d065
0x0000000000475cd8 : xor eax, eax ; leave ; ret
0x00000000004730f2 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405daf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041474b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ec75 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042381c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412dc2 : xor eax, eax ; pop rbx ; ret
0x000000000040ebbd : xor eax, eax ; ret
0x0000000000425e9e : xor eax, eax ; sub eax, ecx ; ret
0x00000000004497ba : xor eax, eax ; syscall
0x0000000000414770 : xor eax, eax ; test rdx, rdx ; jne 0x414788 ; ret
0x000000000042b77c : xor eax, eax ; vzeroupper ; ret
0x0000000000458c28 : xor ebp, ecx ; ret 0xfffd
0x000000000047a170 : xor ebx, ebx ; jmp 0x47a139
0x000000000048589d : xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x4858bd
0x0000000000458926 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046469c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004578f9 : xor ecx, ecx ; call r15
0x0000000000473ee9 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000044c11c : xor edi, dword ptr [rax] ; ret 0x2f75
0x0000000000493ecd : xor edi, ecx ; call qword ptr [rax]
0x0000000000401218 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044a516 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041ab11 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000044a32c : xor edi, edi ; syscall
0x0000000000494951 : xor edi, edx ; inc dword ptr [rsi + 0x3a] ; cli ; call rsi
0x000000000040e8a0 : xor edx, dword ptr [0x30] ; call rdx
0x000000000044e7d3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044d39c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d38c
0x000000000046fdf3 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x46fdc8
0x00000000004170c3 : xor edx, edx ; jmp rax
0x0000000000473eeb : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000041f3cc : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000478a06 : xor esi, esi ; call 0x400491
0x0000000000405cc4 : xor esi, esi ; call 0x420068
0x00000000004614bc : xor esi, esi ; jmp rax
0x0000000000405cc3 : xor r14d, r14d ; call 0x420069
0x00000000004578f8 : xor r9d, r9d ; call r15
0x000000000040e965 : xor rax, qword ptr [0x30] ; call rax
0x000000000040e964 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000444b00 : xor rax, rax ; ret
0x000000000040e89f : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e89e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 10951
