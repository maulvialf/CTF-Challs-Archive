from Crypto.Util.number import getPrime, inverse, bytes_to_long
from Crypto.Util.Padding import pad
from Crypto.Cipher import AES
import os

def encrypt(key, msg):
	crypto = AES.new(key, AES.MODE_CBC,key)
	return crypto.encrypt(pad(msg, 16))

key = os.urandom(16)

dt = open('top_secret.txt', 'rb').read()
enc_dt = encrypt(key, dt)

open('top_secret.enc', 'wb').write(enc_dt)

e = 65537
p = getPrime(2048)
q = getPrime(2048)
n = p * q
phi = (p-1) * (q-1)
d = inverse(e,phi)
leak = d%(p-1)

m = bytes_to_long(key)
c = pow(m, e, n)

print("n =", n)
print("e =", e)
print("c =", c)
print("leak =", leak)


'''
n = 604783752055541548666379137615969239790854618609555676490945215697351086025707206247265429299817888903838139320712133829945286841990150394861999241687053054911533143071578470973322132052565744115366587634987894495122802779983647450663403522378645543043064388755049039240050941445192049908186950099761625846606979091447941138979195848222569382365427291641350680754584684966587267232817900448512303100912759785800095394078592810081849453905846726198972600180009009882907159015762326556708457419896004223286980682342491012474524248219523706400655202050432773947084881609514829503845450115517741213460595696724134448171252362240853726041242385696735980305606229328829159087878471970301481153856852396546050253126572549583623881211299946673979676376848686651144112932012503893643859162963690966755932659074807653402161756843507016487781686291768139931777148633538051829190519269164234131629704316915667884604475267489737497889310311151682483232500658828852991407555701898894339784661338652951959080250812418090720658452919781443881402152298941672830025302460474936069516963631198699764550952895632833334169471185976610640283883476530533755407657560119640111699982375140485191511060633116304299187424702459325773819823114374645091407818849
e = 65537
c = 66429740939818464313471306662496721399039745937403472616366121926432334291240724181147108617626954007848209662776369730684190774978313881399209529656482577466585214133441631628532565191531539637414848888054421247822613934442367903294767879666602842208751836195297380075849112563106309814337542125128075976908156334175121209887214140009905824431581761440359061857225552225371178050258610166751488062511797006362563240613527071483835542124030638192330046949459739880846883554485795251379532515175239387294931114842579334346524490401361964770692041049526993958625977412235571633837086664720260899336902289616771395892243851531492218096804737368378795580140967011925543300394626845418464077089750119884954832500685152090017173337292980584252070516211082408428281480858682637609934347535758784582570265672985135211584379603088938242264894198573352572294131782553052348370150270366699494225054735258786264837161203013278347428191052338774129111097627738896230678338636882431949741656583196660923874524707004744301612119543777672127651325010244305693334497539667813853316108749103757598679194657322675521861899736477441147168404323417567921836658990977722951699712254736525723165369582221057699986898649463136776223248505616185716751623733
leak = 15183830370355011945946070304462876716674617101251514765563892327121460671858563331814328737425064660390220568828255405055065423951570278649372223832547333558864237655107252963450025972693200244546609190722199559548766674083321474406478406542258468568724779206589626389899018240451060427130524892193652521607669656788129405622216230192980505349304113419681045581476366741352131699659677397745751489401390596136742548012223120084474120157158110363128028300022913503641880471005288030633225383958980996602981711768543526455364624935361285368865638129023102494867129281016079280434872278349757447027569759459764523246691
'''