{"version":3,"sources":["hooks/useMounted.ts","components/common/Table/Table.styles.ts","components/common/Table/Table.less","components/common/Table/Table.tsx","components/tables/BasicTable/BasicTable.tsx","pages/ListExamPage.tsx"],"names":["useMounted","isMounted","useRef","useEffect","current","Table","styled","AntdTable","_templateObject","_taggedTemplateLiteral","FONT_SIZE","xs","props","_jsx","S","_objectSpread","initialPagination","pageSize","BasicTable","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","searchedColumn","setSearchedColumn","searchInput","handleSearch","selectedKeys","confirm","dataIndex","_useState5","data","pagination","loading","_useState6","tableData","setTableData","t","useTranslation","fetch","useCallback","getBasicTableData","then","res","catch","error","message","notificationController","columns","title","render","text","children","filterDropdown","_ref","setSelectedKeys","clearFilters","close","_jsxs","style","padding","onKeyDown","e","stopPropagation","Input","ref","placeholder","concat","value","onChange","target","onPressEnter","marginBottom","display","Space","Button","type","onClick","size","width","handleReset","closeDropdown","filterIcon","filtered","SearchOutlined","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownOpenChange","visible","setTimeout","_searchInput$current","select","Highlighter","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","sorter","a","b","time_limit","sortDirections","_","console","log","hidden","isTeacher","disabled","published","exam_id","publishExam","success","map","item","total","danger","deleteExam","filter","dataSource","scroll","x","bordered","ListExamPage","_Fragment","PageTitle","Row","gutter","Col","sm","xl","Card","id"],"mappings":"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","file":"static/js/13.cb35bec5.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\ninterface UseMountedReturnVal {\n  isMounted: MutableRefObject<boolean>;\n}\n\nexport const useMounted = (): UseMountedReturnVal => {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return { isMounted };\n};\n","import styled from 'styled-components';\nimport { Table as AntdTable } from 'antd';\nimport { FONT_SIZE } from '@app/styles/themes/constants';\n\nexport const Table = styled(AntdTable)`\n  & thead .ant-table-cell {\n    color: var(--primary-color);\n    font-size: ${FONT_SIZE.xs};\n    line-height: 1.25rem;\n\n    & .anticon {\n      color: var(--primary-color);\n    }\n  }\n\n  & tbody .ant-table-cell {\n    color: var(--text-main-color);\n    font-size: ${FONT_SIZE.xs};\n    line-height: 1.25rem;\n  }\n\n  & tbody .ant-table-row-expand-icon {\n    min-height: 1.25rem;\n    min-width: 1.25rem;\n    border-radius: 0.1875rem;\n    margin-top: 0;\n  }\n\n  // Override default antd selector\n  &\n    .ant-table-thead\n    > tr\n    > th:not(:last-child):not(.ant-table-selection-column):not(.ant-table-row-expand-icon-cell):not([colspan])::before {\n    background-color: var(--primary-color);\n  }\n\n  & .ant-pagination-prev,\n  .ant-pagination-next,\n  .ant-pagination-jump-prev,\n  .ant-pagination-jump-next,\n  .ant-pagination-item {\n    min-width: 2.0625rem;\n    height: 2.0625rem;\n    line-height: 2.0625rem;\n    border-radius: 0;\n    font-size: ${FONT_SIZE.xs};\n  }\n\n  & .ant-pagination-prev .ant-pagination-item-link,\n  .ant-pagination-next .ant-pagination-item-link {\n    border-radius: 0;\n  }\n\n  & .ant-checkbox-inner {\n    border-radius: 0.1875rem;\n    height: 1.25rem;\n    width: 1.25rem;\n    border: 1px solid var(--primary-color);\n  }\n\n  & .editable-row .ant-form-item-explain {\n    position: absolute;\n    top: 100%;\n    font-size: 0.75rem;\n  }\n\n  .ant-table-column-sort {\n    background-color: transparent;\n  }\n\n  .ant-pagination-item-container .ant-pagination-item-ellipsis {\n    color: var(--disabled-color);\n  }\n\n  .ant-pagination-disabled {\n    .ant-pagination-item-link,\n    .ant-pagination-item a {\n      color: var(--disabled-color);\n    }\n  }\n\n  .ant-pagination.ant-pagination-disabled {\n    .ant-pagination-item-link,\n    .ant-pagination-item a {\n      color: var(--disabled-color);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/Table.2a1d53da.less\";","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport { TableProps } from 'antd';\nimport * as S from './Table.styles';\nimport './Table.less';\n\n// TODO make generic!\nexport const Table: React.FC<TableProps<any>> = (props) => {\n  return <S.Table {...props} />;\n};\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { Input, Space, TablePaginationConfig } from 'antd';\nimport { deleteExam, ExamTableRow, getBasicTableData, Pagination, publishExam } from 'api/exam.api';\nimport { Table } from 'components/common/Table/Table';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\nimport { useMounted } from '@app/hooks/useMounted';\nimport type { InputRef } from 'antd';\nimport type { ColumnsType, ColumnType } from 'antd/es/table';\nimport type { FilterConfirmProps } from 'antd/es/table/interface';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Highlighter from 'react-highlight-words';\nimport { isTeacher } from '@app/services/localStorage.service';\nimport { useNavigate } from 'react-router-dom';\nimport { notificationController } from '@app/controllers/notificationController';\n\nconst initialPagination: Pagination = {\n  current: 1,\n  pageSize: 5,\n};\n\ntype DataIndex = keyof ExamTableRow;\n\nexport const BasicTable: React.FC = () => {\n  const navigate = useNavigate();\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const searchInput = useRef<InputRef>(null);\n\n  const handleSearch = (\n    selectedKeys: string[],\n    confirm: (param?: FilterConfirmProps) => void,\n    dataIndex: DataIndex,\n  ) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters: () => void) => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const [tableData, setTableData] = useState<{ data: ExamTableRow[]; pagination: Pagination; loading: boolean }>({\n    data: [],\n    pagination: initialPagination,\n    loading: false,\n  });\n  const { t } = useTranslation();\n  const { isMounted } = useMounted();\n\n  const fetch = useCallback(\n    (pagination: Pagination) => {\n      setTableData((tableData) => ({ ...tableData, loading: true }));\n      getBasicTableData(pagination)\n        .then((res) => {\n          if (isMounted.current) {\n            setTableData({ data: res.data, pagination: res.pagination, loading: false });\n          }\n        })\n        .catch((error) => {\n          if (error.message == 'Access token expired. Please log in again.') {\n            notificationController.error({ message: 'Token Expired. Please Re-Login!' });\n            navigate('/logout');\n          }\n        });\n    },\n    [isMounted, navigate],\n  );\n\n  useEffect(() => {\n    fetch(initialPagination);\n  }, [fetch]);\n\n  const handleTableChange = (pagination: TablePaginationConfig) => {\n    fetch(pagination);\n  };\n\n  const handlePublishExam = (exam_id: string) => {\n    publishExam(exam_id)\n      .then((res) => {\n        notificationController.success({ message: res.message });\n      })\n      .catch((error) => {\n        if (error.message == 'Access token expired. Please log in again.') {\n          notificationController.error({ message: 'Token Expired. Please Re-Login!' });\n          navigate('/logout');\n        }\n      });\n\n    setTableData({\n      ...tableData,\n      data: tableData.data.map((item) => (item.exam_id == exam_id ? { ...item, published: true } : item)),\n      pagination: {\n        ...tableData.pagination,\n        total: tableData.pagination.total ? tableData.pagination.total - 1 : tableData.pagination.total,\n      },\n    });\n  };\n\n  const handleDeleteRow = (exam_id: string) => {\n    deleteExam(exam_id)\n      .then((res) => {\n        notificationController.success({ message: res.message });\n      })\n      .catch((error) => {\n        if (error.message == 'Access token expired. Please log in again.') {\n          notificationController.error({ message: 'Token Expired. Please Re-Login!' });\n          navigate('/logout');\n        }\n      });\n    setTableData({\n      ...tableData,\n      data: tableData.data.filter((item) => item.exam_id !== exam_id),\n      pagination: {\n        ...tableData.pagination,\n        total: tableData.pagination.total ? tableData.pagination.total - 1 : tableData.pagination.total,\n      },\n    });\n  };\n\n  const getColumnSearchProps = (dataIndex: DataIndex): ColumnType<ExamTableRow> => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, close }) => (\n      <div style={{ padding: 8 }} onKeyDown={(e) => e.stopPropagation()}>\n        <Input\n          ref={searchInput}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys as string[], confirm, dataIndex)}\n          style={{ marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys as string[], confirm, dataIndex)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => clearFilters && handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              setSearchText((selectedKeys as string[])[0]);\n              setSearchedColumn(dataIndex);\n            }}\n          >\n            Filter\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              close();\n            }}\n          >\n            close\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered: boolean) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes((value as string).toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current?.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const columns: ColumnsType<ExamTableRow> = [\n    {\n      title: t('common.examName'),\n      dataIndex: 'exam_name',\n      render: (text: string) => <span>{text}</span>,\n      ...getColumnSearchProps('exam_name'),\n    },\n    {\n      title: t('common.examLimit'),\n      dataIndex: 'time_limit',\n      width: '15%',\n      render: (text: string) => <span>{text}</span>,\n      sorter: (a, b) => a.time_limit - b.time_limit,\n      sortDirections: ['descend', 'ascend'],\n    },\n    {\n      title: t('tables.actions'),\n      dataIndex: 'actions',\n      width: '15%',\n      // eslint-disable-next-line\n      render: (_: any, record: { exam_id: string; published: boolean }) => {\n        console.log(record);\n        return (\n          <Space>\n            <Button\n              type=\"ghost\"\n              hidden={!isTeacher()}\n              disabled={record.published}\n              onClick={() => handlePublishExam(record.exam_id)}\n            >\n              Publish\n            </Button>\n            <Button type=\"primary\" onClick={() => navigate('/exam/' + record.exam_id + '/start')}>\n              {isTeacher() ? 'Simulate' : 'Start'}\n            </Button>\n            <Button type=\"default\" hidden={!isTeacher()} danger onClick={() => handleDeleteRow(record.exam_id)}>\n              {t('tables.delete')}\n            </Button>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={tableData.data}\n      pagination={tableData.pagination}\n      loading={tableData.loading}\n      onChange={handleTableChange}\n      scroll={{ x: 800 }}\n      bordered\n    />\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@app/components/common/Card/Card';\nimport { BasicTable } from '@app/components/tables/BasicTable/BasicTable';\n\nconst ListExamPage: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <PageTitle>{t('tables.examData')}</PageTitle>\n      <Row gutter={[30, 30]}>\n        <Col xs={24} sm={24} xl={24}>\n          <Card id=\"exam form\" title={t('tables.examData')} padding=\"1.25rem\">\n            <BasicTable />\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ListExamPage;\n"],"sourceRoot":""}