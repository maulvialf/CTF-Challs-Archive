{"version":3,"sources":["components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/FirstNameItem/FirstNameItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/LastNameItem/LastNameItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/NicknameItem/NicknameItem.tsx","../../src/index.tsx","components/common/selects/Select/Select.styles.ts","components/common/selects/Select/Select.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/LanguageItem/LanguageItem.tsx","constants/languages.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PersonalInfo.tsx","pages/PersonalInfoPage.tsx"],"names":["BaseButtonsGroup","_ref","className","onCancel","loading","props","_objectWithoutProperties","_excluded","t","useTranslation","_jsxs","Row","gutter","wrap","children","_jsx","Col","span","Button","_objectSpread","block","type","onClick","htmlType","BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","_ref$loading","_BaseForm$useForm","BaseForm","useForm","formDefault","_slicedToArray","currentForm","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","FirstNameItem","name","label","Input","LastNameItem","NicknameItem","cdnSuffix","DEFAULT_CDN_SUFFIX","cdnUrl","DEFAULT_CDN_URL","countryCode","style","svg","flagUrl","toLowerCase","src","display","width","height","verticalAlign","emoji","toUpperCase","replace","String","fromCodePoint","char","charCodeAt","role","fontSize","lineHeight","Select","styled","AntSelect","withConfig","shouldForwardProp","prop","includes","_templateObject","_taggedTemplateLiteral","normalizeProp","FONT_WEIGHT","medium","shadow","BORDER_RADIUS","FONT_SIZE","xs","Option","React","forwardRef","ref","S","getPopupContainer","triggerNode","languageOptions","id","title","map","lang","value","Space","align","ReactCountryFlag","alt","LanguageItem","initialPersonalInfoValues","firstName","lastName","nickName","sex","undefined","birthday","language","phone","email","country","city","address1","address2","zipcode","website","twitter","linkedin","facebook","PersonalInfo","user","useAppSelector","state","_useState","useState","_useState2","_useState3","_useState4","isLoading","setLoading","userFormValues","useMemo","firstname","lastname","nickname","_BaseButtonsForm$useF","onFinish","useCallback","values","setTimeout","notificationController","success","message","console","log","Card","initialValues","onFieldsChange","md","xl","paddingTop","PersonalInfoPage","_Fragment","PageTitle"],"mappings":"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","file":"static/js/16.a7bcb822.chunk.js","sourcesContent":["import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\nexport const FirstNameItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"firstName\" label={t('common.firstName')}>\n      <Input />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\nexport const LastNameItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"lastName\" label={t('common.lastName')}>\n      <Input />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\nexport const NicknameItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"nickname\" label={t('profile.nav.personalInfo.nickname')}>\n      <Input />\n    </BaseButtonsForm.Item>\n  );\n};\n","import * as React from 'react';\n\nconst DEFAULT_CDN_URL =\n  'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.4/flags/4x3/';\nconst DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397;\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLSpanElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: false;\n}\n\ninterface ImgProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: true;\n}\n\nexport type ReactCountryFlagProps = EmojiProps | ImgProps;\n\nexport const ReactCountryFlag = ({\n  cdnSuffix = DEFAULT_CDN_SUFFIX,\n  cdnUrl = DEFAULT_CDN_URL,\n  countryCode,\n  style,\n  svg = false,\n  ...props\n}: ReactCountryFlagProps) => {\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${cdnSuffix}`;\n\n    return (\n      <img\n        {...props}\n        src={flagUrl}\n        style={{\n          display: 'inline-block',\n          width: '1em',\n          height: '1em',\n          verticalAlign: 'middle',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  const emoji = countryCode\n    .toUpperCase()\n    .replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + OFFSET));\n\n  return (\n    <span\n      role=\"img\"\n      {...props}\n      style={{\n        display: 'inline-block',\n        fontSize: '1em',\n        lineHeight: '1em',\n        verticalAlign: 'middle',\n        ...style,\n      }}\n    >\n      {emoji}\n    </span>\n  );\n};\n\nexport default ReactCountryFlag;\n","import styled from 'styled-components';\nimport { Select as AntSelect } from 'antd';\nimport { Dimension } from 'interfaces/interfaces';\nimport { normalizeProp } from 'utils/utils';\nimport { FONT_WEIGHT, BORDER_RADIUS, FONT_SIZE } from '@app/styles/themes/constants';\n\nexport interface SelectProps {\n  width?: Dimension;\n  shadow?: boolean;\n}\n\nexport const Select = styled(AntSelect).withConfig({\n  shouldForwardProp: (prop) => !['shadow', 'width'].includes(prop),\n})<SelectProps>`\n  width: ${(props) => props.width && normalizeProp(props.width)};\n\n  font-weight: ${FONT_WEIGHT.medium};\n\n  box-shadow: ${(props) => props.shadow && 'var(--box-shadow)'};\n\n  &.ant-select-borderless {\n    background: var(--secondary-background-color);\n\n    border-radius: ${BORDER_RADIUS};\n  }\n\n  .ant-select-selection-placeholder {\n    font-size: ${FONT_SIZE.xs};\n\n    color: var(--text-main-color);\n  }\n\n  .ant-select-arrow {\n    color: var(--text-main-color);\n  }\n\n  &.ant-select-multiple.ant-select-sm .ant-select-selection-item {\n    height: 0.875rem;\n    line-height: ${FONT_SIZE.xs};\n    font-size: ${FONT_SIZE.xs};\n    margin-top: 0.1875rem;\n    margin-bottom: 0.1875rem;\n  }\n\n  &.ant-select-disabled.ant-select:not(.ant-select-customize-input) .ant-select-selector {\n    color: var(--disabled-color);\n  }\n\n  .ant-select-clear {\n    color: var(--disabled-color);\n  }\n  .ant-select-selection-item-remove {\n    color: var(--icon-color);\n    &:hover {\n      color: var(--icon-hover-color);\n    }\n  }\n  .ant-select-item-option-disabled {\n    color: var(--disabled-color);\n  }\n`;\n","import React, { ComponentProps } from 'react';\nimport { Select as AntSelect } from 'antd';\nimport { RefSelectProps } from 'antd/lib/select';\nimport * as S from './Select.styles';\n\nexport const { Option } = AntSelect;\n\nexport interface SelectProps extends ComponentProps<typeof AntSelect>, S.SelectProps {\n  className?: string;\n}\n\nexport const Select = React.forwardRef<RefSelectProps, SelectProps>(({ className, width, children, ...props }, ref) => (\n  <S.Select getPopupContainer={(triggerNode) => triggerNode} ref={ref} className={className} width={width} {...props}>\n    {children}\n  </S.Select>\n));\n","import React from 'react';\nimport { Space } from 'antd';\nimport ReactCountryFlag from 'react-country-flag';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { languages } from '@app/constants/languages';\n\nconst languageOptions = languages.map((lang) => (\n  <Option key={lang.id} value={lang.name}>\n    <Space align=\"center\">\n      <ReactCountryFlag svg countryCode={lang.countryCode} alt=\"country flag\" />\n      {lang.title}\n    </Space>\n  </Option>\n));\n\nexport const LanguageItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"language\" label={t('profile.nav.personalInfo.language')}>\n      <Select>{languageOptions}</Select>\n    </BaseButtonsForm.Item>\n  );\n};\n","import { LanguageType } from '@app/interfaces/interfaces';\n\ninterface Language {\n  id: number;\n  name: LanguageType;\n  title: string;\n  countryCode: string;\n}\n\nexport const languages: Language[] = [\n  {\n    id: 1,\n    name: 'en',\n    title: 'English',\n    countryCode: 'gb',\n  },\n  {\n    id: 2,\n    name: 'de',\n    title: 'German',\n    countryCode: 'de',\n  },\n];\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Card } from '@app/components/common/Card/Card';\nimport { FirstNameItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/FirstNameItem/FirstNameItem';\nimport { LastNameItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/LastNameItem/LastNameItem';\nimport { NicknameItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/NicknameItem/NicknameItem';\nimport { LanguageItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/LanguageItem/LanguageItem';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { PaymentCard } from '@app/interfaces/interfaces';\n\ninterface PersonalInfoFormValues {\n  birthday?: string;\n  lastName: string;\n  country?: string;\n  website: string;\n  city?: string;\n  address2: string;\n  nickName: string;\n  address1: string;\n  sex?: string;\n  facebook: string;\n  language?: string;\n  linkedin: string;\n  zipcode: string;\n  firstName: string;\n  twitter: string;\n  phone: string;\n  email: string;\n}\n\nconst initialPersonalInfoValues: PersonalInfoFormValues = {\n  firstName: '',\n  lastName: '',\n  nickName: '',\n  sex: undefined,\n  birthday: undefined,\n  language: undefined,\n  phone: '',\n  email: '',\n  country: undefined,\n  city: undefined,\n  address1: '',\n  address2: '',\n  zipcode: '',\n  website: '',\n  twitter: '',\n  linkedin: '',\n  facebook: '',\n};\n\nexport const PersonalInfo: React.FC = () => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const userFormValues = useMemo(\n    () =>\n      user\n        ? {\n            firstName: user.firstname,\n            lastName: user.lastname,\n            email: user.email,\n            phone: '',\n            nickname: 'AmIHacker?',\n            sex: '',\n            birthday: '',\n            language: 'en',\n            country: 'Indonesia',\n            city: 'Jakarta',\n            address1: '',\n            address2: '',\n            zipcode: '1337',\n            website: '',\n            twitter: '',\n            linkedin: '',\n            facebook: '',\n          }\n        : initialPersonalInfoValues,\n    [user],\n  );\n\n  const [form] = BaseButtonsForm.useForm();\n\n  const { t } = useTranslation();\n\n  const onFinish = useCallback(\n    (values: PaymentCard) => {\n      // todo dispatch an action here\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setFieldsChanged(false);\n        notificationController.success({ message: t('common.success') });\n        console.log(values);\n      }, 1000);\n    },\n    [t],\n  );\n\n  return (\n    <Card>\n      <BaseButtonsForm\n        form={form}\n        name=\"info\"\n        loading={isLoading}\n        initialValues={userFormValues}\n        isFieldsChanged={isFieldsChanged}\n        setFieldsChanged={setFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        onFinish={onFinish}\n      >\n        <Row gutter={{ xs: 10, md: 15, xl: 30 }}>\n          <Col span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>Introduction</BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </Col>\n          <Col span={24}>\n            <label>\n              Lorem ipsum dolor sit, amet consectetur adipisicing elit. Commodi, suscipit. Cum natus dolorum sapiente\n              ipsa rerum voluptate ratione, vel quidem dolor error cupiditate debitis ut doloribus laboriosam\n              consectetur sint sed.\n            </label>\n          </Col>\n\n          <Col span={24} style={{ paddingTop: 20 }}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>{t('profile.nav.personalInfo.title')}</BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </Col>\n\n          <Col xs={24} md={12}>\n            <FirstNameItem />\n          </Col>\n\n          <Col xs={24} md={12}>\n            <LastNameItem />\n          </Col>\n\n          <Col xs={24} md={12}>\n            <NicknameItem />\n          </Col>\n\n          <Col xs={24} md={12}>\n            <LanguageItem />\n          </Col>\n        </Row>\n      </BaseButtonsForm>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PersonalInfo } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PersonalInfo';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\n\nconst PersonalInfoPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.personalInfo.title')}</PageTitle>\n      <PersonalInfo />\n    </>\n  );\n};\n\nexport default PersonalInfoPage;\n"],"sourceRoot":""}