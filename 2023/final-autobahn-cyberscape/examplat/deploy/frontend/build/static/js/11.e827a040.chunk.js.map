{"version":3,"sources":["components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","hooks/useMounted.ts","components/common/Radio/Radio.styles.ts","components/common/Radio/Radio.tsx","components/forms/ExamForm/StartExam.tsx","pages/StartExamPage.tsx"],"names":["BaseButtonsGroup","_ref","className","onCancel","loading","props","_objectWithoutProperties","_excluded","t","useTranslation","_jsxs","Row","gutter","wrap","children","_jsx","Col","span","Button","_objectSpread","block","type","onClick","htmlType","BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","_ref$loading","_BaseForm$useForm","BaseForm","useForm","formDefault","_slicedToArray","currentForm","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","useMounted","isMounted","useRef","useEffect","current","Radio","styled","AntdRadio","_templateObject","_taggedTemplateLiteral","_templateObject2","RadioGroup","Group","S","formItemLayout","labelCol","wrapperCol","StartExam","_Form$useForm","Form","_useState","useState","_useState2","isLoading","setLoading","exam","useSelector","state","dispatch","useDispatch","params","useParams","navigate","useNavigate","_useState3","data","_useState4","questionData","setQuestionData","fetch","useCallback","getQuestionData","id","then","res","catch","error","message","notificationController","onFinish","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dataToPost","_context","prev","next","console","log","submitAnswer","score","match","success","setScore","stop","apply","arguments","_useState5","_useState6","setCurrent","name","flex","Pagination","defaultPageSize","onChange","page","total","length","slice","map","val","Card","title","no","padding","style","boxShadow","question","e","tmpAnswer","target","value","setAnswer","answers","radioListener","Object","entries","choices","_ref2","_ref3","k","v","StartExamPage","_Fragment","PageTitle","xs","sm","xl"],"mappings":"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","file":"static/js/11.e827a040.chunk.js","sourcesContent":["import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import { MutableRefObject, useEffect, useRef } from 'react';\n\ninterface UseMountedReturnVal {\n  isMounted: MutableRefObject<boolean>;\n}\n\nexport const useMounted = (): UseMountedReturnVal => {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return { isMounted };\n};\n","import styled from 'styled-components';\nimport { Radio as AntdRadio } from 'antd';\n\nexport const Radio = styled(AntdRadio)`\n  .ant-radio-disabled + span {\n    color: var(--disabled-color);\n  }\n`;\n\nexport const RadioButton = styled(AntdRadio.Button)`\n  &.ant-radio-button-wrapper-disabled {\n    color: var(--disabled-color);\n  }\n`;\n","import { Radio as AntdRadio, RadioProps } from 'antd';\nimport * as S from './Radio.styles';\n\nexport interface RadioChangeEventTarget extends RadioProps {\n  checked: boolean;\n}\nexport interface RadioChangeEvent {\n  target: RadioChangeEventTarget;\n  stopPropagation: () => void;\n  preventDefault: () => void;\n  nativeEvent: MouseEvent;\n}\n\nexport const { Group: RadioGroup } = AntdRadio;\n\nexport const Radio: React.FC<RadioProps> = (props) => {\n  return <S.Radio {...props} />;\n};\n\nexport const RadioButton: React.FC<RadioProps> = (props) => {\n  return <S.RadioButton {...props} />;\n};\n","import { Col, Form, Pagination, RadioChangeEvent, Row } from 'antd';\nimport type { PaginationProps } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { useCallback, useEffect, useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Radio, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { getQuestionData, QuestionChoices, submitAnswer } from '@app/api/exam.api';\nimport { useMounted } from '@app/hooks/useMounted';\nimport { Card } from '@app/components/common/Card/Card';\nimport { setAnswer, setScore } from '@app/store/slices/examSlice';\nimport { AnswerModel } from '@app/domain/AnswerModel';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nexport const StartExam: React.FC = () => {\n  const [form] = Form.useForm();\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n  const { isMounted } = useMounted();\n  const exam = useSelector((state: Record<string, AnswerModel>) => state.exam);\n  const dispatch = useDispatch();\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [questionData, setQuestionData] = useState<{ data: QuestionChoices[]; loading: boolean }>({\n    data: [],\n    loading: false,\n  });\n\n  const fetch = useCallback(() => {\n    setQuestionData((questionData) => ({ ...questionData, loading: true }));\n    getQuestionData(params.id)\n      .then((res) => {\n        if (isMounted.current) {\n          setQuestionData({ data: res.data, loading: false });\n        }\n      })\n      .catch((error) => {\n        if (error.message == 'Access token expired. Please log in again.') {\n          notificationController.error({ message: 'Token Expired. Please Re-Login!' });\n          navigate('/logout');\n        }\n      });\n  }, [isMounted, navigate, params]);\n\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  const onFinish = async () => {\n    setLoading(true);\n    const dataToPost = exam;\n    console.log(dataToPost);\n    submitAnswer(params.id, dataToPost).then((res) => {\n      const pattern = /(\\d+\\.?\\d+)/g;\n      const score = res.message.match(pattern);\n      notificationController.success({ message: t('common.success') });\n      dispatch(setScore(score));\n      navigate('/exam/result');\n    });\n  };\n\n  const [current, setCurrent] = useState(1);\n\n  const onChange: PaginationProps['onChange'] = (page) => {\n    setCurrent(page);\n  };\n\n  const radioListener = (e: RadioChangeEvent, no: string) => {\n    const tmpAnswer = {} as Record<string, string>;\n    tmpAnswer[no] = e.target.value;\n    dispatch(setAnswer({ ...exam.answers, ...tmpAnswer }));\n  };\n\n  return (\n    <BaseButtonsForm\n      {...formItemLayout}\n      isFieldsChanged={true}\n      name=\"examForm\"\n      form={form}\n      footer={\n        <Row gutter={[30, 30]}>\n          <Col flex=\"85%\">\n            <Pagination current={current} defaultPageSize={1} onChange={onChange} total={questionData.data.length} />\n          </Col>\n          <Col flex=\"auto\"></Col>\n          <Col flex=\"5%\">\n            <BaseButtonsForm.Item>\n              <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n                {t('common.submit')}\n              </Button>\n            </BaseButtonsForm.Item>\n          </Col>\n        </Row>\n      }\n      onFinish={onFinish}\n    >\n      {questionData.data && questionData.data.length > 0 ? (\n        questionData.data.slice(current - 1, current).map((val) => (\n          <Card\n            id=\"exam form\"\n            key={val.no}\n            title={'Question ' + val.no}\n            padding=\"1.25rem\"\n            style={{ boxShadow: 'none' }}\n          >\n            <label>{val.question}</label>\n            <BaseButtonsForm.Item name={val.no}>\n              <RadioGroup onChange={(e) => radioListener(e, val.no)}>\n                {Object.entries(val.choices).map(([k, v]) => (\n                  <p key={k}>\n                    <Radio key={k} value={k}>\n                      {' '}\n                      {v}\n                    </Radio>\n                  </p>\n                ))}\n              </RadioGroup>\n            </BaseButtonsForm.Item>\n          </Card>\n        ))\n      ) : (\n        <Card id=\"exam form\" loading={true} padding=\"1.25rem\" style={{ boxShadow: 'none' }}></Card>\n      )}\n    </BaseButtonsForm>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { StartExam } from '@app/components/forms/ExamForm/StartExam';\nimport { Card } from '@app/components/common/Card/Card';\n\nconst StartExamPage: React.FC = () => {\n  return (\n    <>\n      <PageTitle>Start Exam</PageTitle>\n      <Row gutter={[30, 30]}>\n        <Col xs={24} sm={24} xl={24}>\n          <Card id=\"exam form\" padding=\"1.25rem\">\n            <StartExam />\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default StartExamPage;\n"],"sourceRoot":""}